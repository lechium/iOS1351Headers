/*
                       * This header is generated by classdump-dyld 1.5
                       * on Wednesday, October 27, 2021 at 3:17:28 PM Mountain Standard Time
                       * Operating System: Version 13.5.1 (Build 17F80)
                       * Image Source: /System/Library/PrivateFrameworks/PersonalizationPortraitInternals.framework/PersonalizationPortraitInternals
                       * classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos. Updated by Kevin Bradley.
                       */

#import <PersonalizationPortrait/PPTopicStore.h>
#import <libobjc.A.dylib/PPFeedbackProcessing.h>

@class _PASLock, PPMTopicDonationError, PPMTopicDonation, PPMObjectsDeletion, PPMFeedbackRegistered, PPM2FeedbackPortraitRegistered, PPTopicStorage;

@interface PPLocalTopicStore : PPTopicStore <PPFeedbackProcessing> {

	_PASLock* _lock;
	PPMTopicDonationError* _errorTracker;
	PPMTopicDonation* _donationTracker;
	PPMObjectsDeletion* _deletionTracker;
	PPMFeedbackRegistered* _feedbackTracker;
	PPM2FeedbackPortraitRegistered* _feedbackTracker2;
	PPTopicStorage* _storage;

}

@property (nonatomic,readonly) PPTopicStorage * storage;              //@synthesize storage=_storage - In the implementation block
+(id)defaultStore;
+(id)recordsForTopics:(id)arg1 source:(id)arg2 algorithm:(unsigned long long)arg3 ;
+(void)calibrate:(id)arg1 ;
+(id)ppFeedbackItemToPPPBFeedbackItem:(id)arg1 ;
+(BOOL)_yesWithProbability:(double)arg1 ;
+(void)sortAndTruncate:(id)arg1 queryLimit:(unsigned long long)arg2 ;
+(id)_loadScoreInterpreter;
+(float)resolvedPerRecordDecayRateForRecord:(id)arg1 perRecordDecayRate:(float)arg2 ;
+(id)aggregateRecords:(id)arg1 scoringDate:(id)arg2 perRecordDecayRate:(float)arg3 decayRate:(float)arg4 ;
+(id)_topicTransformForId:(id)arg1 ;
+(id)scoreTopics:(id)arg1 scoringDate:(id)arg2 decayRate:(double)arg3 strictFiltering:(BOOL)arg4 sourceStats:(id)arg5 scoreInterpreter:(id)arg6 ;
-(id)init;
-(PPTopicStorage *)storage;
-(id)initWithStorage:(id)arg1 ;
-(void)registerFeedback:(id)arg1 completion:(/*^block*/id)arg2 ;
-(BOOL)donateTopics:(id)arg1 source:(id)arg2 algorithm:(unsigned long long)arg3 cloudSync:(BOOL)arg4 sentimentScore:(double)arg5 error:(id*)arg6 ;
-(BOOL)deleteAllTopicsFromSourcesWithBundleId:(id)arg1 documentIds:(id)arg2 deletedCount:(unsigned long long*)arg3 error:(id*)arg4 ;
-(BOOL)deleteAllTopicsFromSourcesWithBundleId:(id)arg1 groupIds:(id)arg2 deletedCount:(unsigned long long*)arg3 error:(id*)arg4 ;
-(BOOL)deleteAllTopicsFromSourcesWithBundleId:(id)arg1 deletedCount:(unsigned long long*)arg2 error:(id*)arg3 ;
-(BOOL)deleteAllTopicsWithTopicId:(id)arg1 deletedCount:(unsigned long long*)arg2 error:(id*)arg3 ;
-(BOOL)cloudSyncWithError:(id*)arg1 ;
-(BOOL)clearWithError:(id*)arg1 deletedCount:(unsigned long long*)arg2 ;
-(BOOL)flushDonationsWithError:(id*)arg1 ;
-(id)rankedTopicsWithQuery:(id)arg1 error:(id*)arg2 ;
-(BOOL)iterScoresForTopicMapping:(id)arg1 query:(id)arg2 error:(id*)arg3 block:(/*^block*/id)arg4 ;
-(id)scoresForTopicMapping:(id)arg1 query:(id)arg2 error:(id*)arg3 ;
-(BOOL)iterTopicRecordsWithQuery:(id)arg1 error:(id*)arg2 block:(/*^block*/id)arg3 ;
-(id)topicRecordsWithQuery:(id)arg1 error:(id*)arg2 ;
-(id)unmapMappedTopicIdentifier:(id)arg1 mappingIdentifier:(id)arg2 error:(id*)arg3 ;
-(BOOL)deleteAllTopicsFromSourcesWithBundleId:(id)arg1 groupId:(id)arg2 olderThan:(id)arg3 deletedCount:(unsigned long long*)arg4 error:(id*)arg5 ;
-(BOOL)deleteAllTopicsWithTopicId:(id)arg1 algorithm:(unsigned long long)arg2 deletedCount:(unsigned long long*)arg3 error:(id*)arg4 ;
-(void)logDonationErrorForReason:(long long)arg1 ;
-(void)disableSyncForBundleIds:(id)arg1 ;
-(void)processFeedback:(id)arg1 ;
-(id)sourceStatsExcludedAlgorithms:(id)arg1 ;
-(BOOL)_logFeedbackSessionsWithFeedback:(id)arg1 error:(id*)arg2 ;
-(BOOL)_unlimitedTopicRecordsWithQuery:(id)arg1 error:(id*)arg2 block:(/*^block*/id)arg3 ;
-(void)_petLoggingForQuery:(id)arg1 count:(unsigned long long)arg2 clientProcessName:(id)arg3 hasError:(BOOL)arg4 ;
-(id)rankedTopicsWithQuery:(id)arg1 error:(id*)arg2 clientProcessName:(id)arg3 ;
-(id)scoresForTopicMapping:(id)arg1 query:(id)arg2 error:(id*)arg3 clientProcessName:(id)arg4 ;
-(void)_petLoggingForMappedTopicQuery:(id)arg1 mappingId:(id)arg2 count:(unsigned long long)arg3 clientProcessName:(id)arg4 hasError:(BOOL)arg5 ;
-(id)_coalesceScoredTopics:(id)arg1 ;
-(void)_filterBlacklistedTopicRecords:(id)arg1 ;
-(id)_filterBlacklistedScoredTopics:(id)arg1 ;
-(BOOL)deleteAllTopicsFromSourcesWithBundleId:(id)arg1 documentIds:(id)arg2 algorithm:(unsigned long long)arg3 deletedCount:(unsigned long long*)arg4 error:(id*)arg5 ;
-(BOOL)deleteAllTopicsFromSourcesWithBundleId:(id)arg1 groupIds:(id)arg2 algorithm:(unsigned long long)arg3 deletedCount:(unsigned long long*)arg4 error:(id*)arg5 ;
-(BOOL)deleteAllTopicsFromSourcesWithBundleId:(id)arg1 algorithm:(unsigned long long)arg2 deletedCount:(unsigned long long*)arg3 error:(id*)arg4 ;
-(BOOL)deleteAllTopicsFromSourcesWithBundleId:(id)arg1 groupId:(id)arg2 algorithm:(unsigned long long)arg3 olderThan:(id)arg4 deletedCount:(unsigned long long*)arg5 error:(id*)arg6 ;
-(BOOL)deleteAllTopicsOlderThanDate:(id)arg1 deletedCount:(unsigned long long*)arg2 error:(id*)arg3 ;
-(void)_logDonationForTopics:(id)arg1 bundleId:(id)arg2 algorithm:(unsigned long long)arg3 ;
-(id)getScoredTopicsFeaturesWithTopicId:(id)arg1 excludingSourceBundleId:(id)arg2 decayRate:(double)arg3 error:(id*)arg4 strictFiltering:(BOOL)arg5 scoreInterpreter:(id)arg6 ;
@end

