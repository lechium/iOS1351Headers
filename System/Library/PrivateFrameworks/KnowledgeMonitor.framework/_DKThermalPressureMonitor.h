/*
                       * This header is generated by classdump-dyld 1.5
                       * on Wednesday, October 27, 2021 at 3:17:45 PM Mountain Standard Time
                       * Operating System: Version 13.5.1 (Build 17F80)
                       * Image Source: /System/Library/PrivateFrameworks/KnowledgeMonitor.framework/KnowledgeMonitor
                       * classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos. Updated by Kevin Bradley.
                       */

#import <KnowledgeMonitor/_DKMonitor.h>

@interface _DKThermalPressureMonitor : _DKMonitor {

	BOOL _initialized;
	BOOL _peakPowerPressureLevel;
	int _thermalPressureToken;
	int _lastThermalPressureLevel;
	int _peakPowerPressureToken;

}

@property (assign,nonatomic) BOOL initialized;                          //@synthesize initialized=_initialized - In the implementation block
@property (assign,nonatomic) int thermalPressureToken;                  //@synthesize thermalPressureToken=_thermalPressureToken - In the implementation block
@property (assign,nonatomic) int lastThermalPressureLevel;              //@synthesize lastThermalPressureLevel=_lastThermalPressureLevel - In the implementation block
@property (assign,nonatomic) int peakPowerPressureToken;                //@synthesize peakPowerPressureToken=_peakPowerPressureToken - In the implementation block
@property (assign,nonatomic) BOOL peakPowerPressureLevel;               //@synthesize peakPowerPressureLevel=_peakPowerPressureLevel - In the implementation block
+(id)entitlements;
+(id)eventStream;
-(void)dealloc;
-(BOOL)initialized;
-(void)stop;
-(void)start;
-(void)synchronouslyReflectCurrentValue;
-(void)deactivate;
-(void)setInitialized:(BOOL)arg1 ;
-(id)loadState;
-(void)saveState;
-(int)thermalPressureToken;
-(void)getThermalPressureLevelWithToken:(int)arg1 ;
-(void)getPeakPowerPressureLevelWithToken:(int)arg1 ;
-(void)setCurrentThermalLevel:(int)arg1 ;
-(void)setCurrentPeakPowerPressureLevel:(unsigned)arg1 ;
-(void)setThermalPressureToken:(int)arg1 ;
-(int)lastThermalPressureLevel;
-(void)setLastThermalPressureLevel:(int)arg1 ;
-(int)peakPowerPressureToken;
-(void)setPeakPowerPressureToken:(int)arg1 ;
-(BOOL)peakPowerPressureLevel;
-(void)setPeakPowerPressureLevel:(BOOL)arg1 ;
@end

