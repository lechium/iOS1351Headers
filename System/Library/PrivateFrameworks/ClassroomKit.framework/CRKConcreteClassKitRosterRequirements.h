/*
                       * This header is generated by classdump-dyld 1.5
                       * on Wednesday, October 27, 2021 at 3:18:03 PM Mountain Standard Time
                       * Operating System: Version 13.5.1 (Build 17F80)
                       * Image Source: /System/Library/PrivateFrameworks/ClassroomKit.framework/ClassroomKit
                       * classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos. Updated by Kevin Bradley.
                       */

#import <libobjc.A.dylib/CRKClassKitRosterRequirements.h>

@protocol CRKClassKitFacade;
@class NSObject, NSArray, NSMutableDictionary, NSString;

@interface CRKConcreteClassKitRosterRequirements : NSObject <CRKClassKitRosterRequirements> {

	BOOL _forInstructor;
	int _membershipChangeDarwinNotificationToken;
	NSObject*<CRKClassKitFacade> _classKitFacade;
	NSArray* _dataObservers;
	NSMutableDictionary* _observersByToken;

}

@property (nonatomic,readonly) NSObject*<CRKClassKitFacade> classKitFacade;                                //@synthesize classKitFacade=_classKitFacade - In the implementation block
@property (getter=isForInstructor,nonatomic,readonly) BOOL forInstructor;                                  //@synthesize forInstructor=_forInstructor - In the implementation block
@property (nonatomic,copy,readonly) NSArray * dataObservers;                                               //@synthesize dataObservers=_dataObservers - In the implementation block
@property (assign,nonatomic) int membershipChangeDarwinNotificationToken;                                  //@synthesize membershipChangeDarwinNotificationToken=_membershipChangeDarwinNotificationToken - In the implementation block
@property (nonatomic,readonly) NSMutableDictionary * observersByToken;                                     //@synthesize observersByToken=_observersByToken - In the implementation block
@property (readonly) unsigned long long hash; 
@property (readonly) Class superclass; 
@property (copy,readonly) NSString * description; 
@property (copy,readonly) NSString * debugDescription; 
@property (getter=isEligibleAccountSignedIn,nonatomic,readonly) BOOL eligibleAccountSignedIn; 
+(id)studentRosterRequirementsWithClassKitFacade:(id)arg1 ;
+(id)instructorRosterRequirementsWithClassKitFacade:(id)arg1 ;
-(void)dealloc;
-(id)addObserver:(/*^block*/id)arg1 ;
-(void)observeValueForKeyPath:(id)arg1 ofObject:(id)arg2 change:(id)arg3 context:(void*)arg4 ;
-(void)removeObserver:(id)arg1 ;
-(void)executeQuery:(id)arg1 ;
-(void)currentUserWithCompletion:(/*^block*/id)arg1 ;
-(void)saveClass:(id)arg1 completion:(/*^block*/id)arg2 ;
-(BOOL)isEligibleAccountSignedIn;
-(void)removeClass:(id)arg1 completion:(/*^block*/id)arg2 ;
-(id)makeClassWithLocationID:(id)arg1 name:(id)arg2 ;
-(void)locationsWithManagePermissionsForUserWithObjectID:(id)arg1 completion:(/*^block*/id)arg2 ;
-(void)locationsWithObjectIDs:(id)arg1 completion:(/*^block*/id)arg2 ;
-(NSObject*<CRKClassKitFacade>)classKitFacade;
-(void)classesWithCompletion:(/*^block*/id)arg1 ;
-(id)objectIDsOfTrustedPersonsInClass:(id)arg1 ;
-(void)addTrustedPerson:(id)arg1 toClass:(id)arg2 ;
-(void)removeTrustedPerson:(id)arg1 fromClass:(id)arg2 ;
-(id)makePersonQueryForSearchString:(id)arg1 sortingGivenNameFirst:(BOOL)arg2 pageSize:(long long)arg3 ;
-(void)deregisterDataObservers;
-(void)unregisterForMembershipChangeDarwinNotification;
-(void)stopObservingAccountEligibility;
-(id)initWithClassKitFacade:(id)arg1 isForInstructor:(BOOL)arg2 ;
-(id)makeDataObservers;
-(void)registerDataObservers;
-(void)registerForCurrentUserChangeNotification;
-(void)registerForMembershipChangeDarwinNotification;
-(void)startObservingAccountEligibility;
-(BOOL)isForInstructor;
-(void)currentUserDidChange:(id)arg1 ;
-(void)callObserversWithReason:(id)arg1 ;
-(void)setMembershipChangeDarwinNotificationToken:(int)arg1 ;
-(int)membershipChangeDarwinNotificationToken;
-(/*^block*/id)makeDataChangedBlockWithObserverDescription:(id)arg1 ;
-(void)addNullableObserver:(id)arg1 toArray:(id)arg2 ;
-(BOOL)isForStudent;
-(NSArray *)dataObservers;
-(NSMutableDictionary *)observersByToken;
-(void)trustedPersonsInClassWithObjectID:(id)arg1 completion:(/*^block*/id)arg2 ;
-(void)addPerson:(id)arg1 toClass:(id)arg2 ;
@end

