/*
                       * This header is generated by classdump-dyld 1.5
                       * on Wednesday, October 27, 2021 at 3:16:38 PM Mountain Standard Time
                       * Operating System: Version 13.5.1 (Build 17F80)
                       * Image Source: /System/Library/PrivateFrameworks/CoreSuggestionsInternals.framework/CoreSuggestionsInternals
                       * classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos. Updated by Kevin Bradley.
                       */

#import <CoreSuggestionsInternals/CoreSuggestionsInternals-Structs.h>
#import <libobjc.A.dylib/CSSearchableIndexDelegate.h>

@protocol OS_dispatch_queue;
@class SGSqliteDatabase, SGDatabaseJournal, SGSuggestHistory, NSDictionary, NSMutableArray, SGJournal, SGSpotlightContactsAdapter, SGSGtoCNContactsCacheUpdateAdapter, NSSet, NSCache, NSObject, SGBloomFilter, NSString, NSMutableSet, NSMutableOrderedSet, SGKeyValueCacheManager;

@interface SGSqlEntityStore : NSObject <CSSearchableIndexDelegate> {

	SGSqliteDatabase* _db;
	SGSqliteDatabase* _snippetDb;
	SGDatabaseJournal* _snippetsJournal;
	SGSuggestHistory* _history;
	AB _identityStoreDirty;
	NSDictionary* _entityMigrations;
	NSDictionary* _snippetsMigrations;
	unsigned _entityVersion;
	unsigned _snippetsVersion;
	BOOL _entityMigrationRequiresMergeBlobUpdate;
	unsigned long long _lostMessageOverflow;
	NSMutableArray* _deallocNotifications;
	atomic_flag _isClosed;
	SGJournal* _journal;
	SGSpotlightContactsAdapter* _spotlightContactsAdapter;
	SGSGtoCNContactsCacheUpdateAdapter* _sgToCNContactsCacheUpdateAdapter;
	unsigned long long _parentMessagesLimit;
	NSSet* _serializedContactEntityIDs;
	unsigned long long _serializedContactsLimit;
	NSCache* _recentlyDeletedEmailKeys;
	Ai _spotlightReindexCount;
	NSObject*<OS_dispatch_queue> _spotlightReindexQueue;
	NSSet* _prematchedContactIdentifiers;
	NSObject*<OS_dispatch_queue> _precomputationQueue;
	SGBloomFilter* _messageRecipients;
	/*^block*/id _crLookup;
	NSString* _snippetDbPath;
	id _lockStateNotificationRegistrationToken;
	BOOL _executeJournals;
	NSMutableSet* _phoneNumbersWithNoContact;
	NSMutableOrderedSet* _otherDetailsWithNoContact;
	BOOL _isEphemeral;
	BOOL _waitForMigrations;
	SGKeyValueCacheManager* _kvCacheManager;

}

@property (readonly) unsigned long long hash; 
@property (readonly) Class superclass; 
@property (copy,readonly) NSString * description; 
@property (copy,readonly) NSString * debugDescription; 
@property (nonatomic,readonly) BOOL isEphemeral;                                                         //@synthesize isEphemeral=_isEphemeral - In the implementation block
@property (nonatomic,readonly) BOOL waitForMigrations;                                                   //@synthesize waitForMigrations=_waitForMigrations - In the implementation block
@property (readonly) SGSpotlightContactsAdapter * spotlightContactsAdapter;                              //@synthesize spotlightContactsAdapter=_spotlightContactsAdapter - In the implementation block
@property (readonly) SGSGtoCNContactsCacheUpdateAdapter * sgToCNContactsCacheUpdateAdapter;              //@synthesize sgToCNContactsCacheUpdateAdapter=_sgToCNContactsCacheUpdateAdapter - In the implementation block
@property (readonly) SGKeyValueCacheManager * kvCacheManager;                                            //@synthesize kvCacheManager=_kvCacheManager - In the implementation block
+(id)defaultStore;
+(id)defaultPath;
+(id)initializeDatabase:(id)arg1 withProtection:(BOOL)arg2 newDatabaseCreated:(BOOL*)arg3 ;
+(id)_cachedVIPEmailAddressesLock;
+(void)setCachedVIPEmailAddresses:(id)arg1 ;
+(id)_cachedVIPEmailAddresses;
+(BOOL)canStoreEventsForAccountType:(id)arg1 ;
+(void)clearMigrationCompletedForPaths;
+(id)cnContactIdentifiersForContact:(id)arg1 ;
+(id)cnContactIdentifiersSpotlightQueryStringForContact:(id)arg1 ;
+(id)_fieldValuesClassWhitelist;
+(/*^block*/id)binderForCNContactMatch:(id)arg1 floorEntityID:(long long)arg2 max:(unsigned long long)arg3 ;
+(id)queryForContactMatchForContact:(id)arg1 floorEntityID:(long long)arg2 max:(unsigned long long)arg3 ;
+(void)addPathToFutureDbSchemas:(id)arg1 ;
+(id)_recreateCorruptDatabase:(id)arg1 withProtection:(BOOL)arg2 ;
+(id)defaultSnippetPath;
+(id)defaultPathCreatingSuggestionsDirectoryIfNeeded:(BOOL)arg1 ;
+(id)storeWithDefaultLocationAndExecuteJournals:(BOOL)arg1 ;
+(id)defaultHarvestStore;
+(id)sqlStoreInMemory;
+(void)prepareSqlStoreInMemory;
+(void)prepareSqlStoreInMemoryByClearingExistingStore:(id)arg1 ;
+(void)deletePreparedSqlStoreInMemory;
+(id)sqlStoreWithEntityDbPath:(id)arg1 snippetDbPath:(id)arg2 isEphemeral:(BOOL)arg3 executeJournals:(BOOL)arg4 ;
+(id)sqlStoreWithEntityDbPathNoMigrate:(id)arg1 snippetDbPath:(id)arg2 isEphemeral:(BOOL)arg3 executeJournals:(BOOL)arg4 ;
+(BOOL)pathHasFutureDbSchema:(id)arg1 ;
+(void)releaseInstanceAndWaitForDealloc:(id*)arg1 ;
+(id)journalNameForDbPath:(id)arg1 ;
-(void)dealloc;
-(void)clearCaches;
-(void)vacuum;
-(unsigned long long)entityCount;
-(void)searchableIndex:(id)arg1 reindexAllSearchableItemsWithAcknowledgementHandler:(/*^block*/id)arg2 ;
-(void)searchableIndex:(id)arg1 reindexSearchableItemsWithIdentifiers:(id)arg2 acknowledgementHandler:(/*^block*/id)arg3 ;
-(void)_postChangeNotification;
-(id)journal;
-(long long)migrate;
-(BOOL)isEphemeral;
-(long long)migrateDatabases;
-(long long)unmigrateDatabases;
-(BOOL)migrationNeeded;
-(void)startJournaling;
-(void)stopJournaling;
-(void)deleteMessages:(id)arg1 ;
-(BOOL)confirmEventByRecordId:(id)arg1 error:(id*)arg2 ;
-(BOOL)rejectEventByRecordId:(id)arg1 error:(id*)arg2 ;
-(BOOL)confirmReminderByRecordId:(id)arg1 error:(id*)arg2 ;
-(BOOL)rejectReminderByRecordId:(id)arg1 error:(id*)arg2 ;
-(BOOL)reminderAlarmTriggeredForRecordId:(id)arg1 error:(id*)arg2 ;
-(id)_columnList;
-(PASDBIterAction_)_updateURLs:(id)arg1 stmt:(sqlite3_stmtRef)arg2 ;
-(id)recentURLsWithLimit:(long long)arg1 ;
-(id)urlsFoundBetweenStartDate:(id)arg1 endDate:(id)arg2 excludingBundleIdentifiers:(id)arg3 limit:(long long)arg4 ;
-(BOOL)writeURL:(id)arg1 ;
-(BOOL)trimURLs;
-(BOOL)deleteURLsFromBundleIdentifier:(id)arg1 ;
-(BOOL)deleteURLsFromBundleIdentifier:(id)arg1 groupIdentifierGlobs:(id)arg2 ;
-(BOOL)deleteURLsFromBundleIdentifier:(id)arg1 documentIdentifiers:(id)arg2 ;
-(BOOL)deleteURLsOlderThanDate:(id)arg1 ;
-(BOOL)trimURLTableDownToLimit:(long long)arg1 ;
-(void)deleteSpotlightReferencesWithBundleIdentifier:(id)arg1 uniqueIdentifiers:(id)arg2 ;
-(void)deleteSpotlightReferencesWithBundleIdentifier:(id)arg1 domainIdentifiers:(id)arg2 ;
-(void)deleteSpotlightReferencesWithBundleIdentifier:(id)arg1 ;
-(void)clearChangeHistory:(id)arg1 ;
-(id)loadStatsCounterWithKey:(id)arg1 ;
-(void)storeStatsCounterWithKey:(id)arg1 value:(double)arg2 ;
-(double)incStatsCounterWithKey:(id)arg1 byValue:(double)arg2 ;
-(double)incStatsCounterWithKey:(id)arg1 ;
-(void)_logConfirmPercentWithConfirmCount:(double)arg1 rejectCount:(double)arg2 domain:(id)arg3 suffix:(id)arg4 ;
-(void)logConfirmPercentAfterContactConfirmation;
-(void)logConfirmPercentAfterContactRejection;
-(void)logConfirmPercentAfterContactDetailConfirmation;
-(void)logConfirmPercentAfterContactDetailRejection;
-(BOOL)registerAndLinkIdentity:(id)arg1 recordId:(id)arg2 phones:(id)arg3 instantMessageAddresses:(id)arg4 email:(id)arg5 curated:(BOOL)arg6 isSent:(BOOL)arg7 ;
-(BOOL)processPseudoContactEntity:(id)arg1 recordId:(id)arg2 ;
-(void)_joinIncompleteIdentityEmailWithOthersOfItsIlk:(id)arg1 name:(id)arg2 recordId:(id)arg3 ;
-(void)_joinIncompleteIdentityPhonesWithOthersOfTheirIlk:(id)arg1 name:(id)arg2 recordId:(id)arg3 ;
-(void)link:(id)arg1 to:(id)arg2 type:(unsigned)arg3 strength:(double)arg4 ;
-(id)getNewBlobsIfChanged;
-(BOOL)_isIdentityStoreDirty;
-(id)computeBlobs;
-(void)_markIdentityStoreClean;
-(void)_linkNamelessEmailsIfAppropriate:(graph_t*)arg1 nameToVertex:(id)arg2 disjointSets:(DisjointSetHandleRef)arg3 edges:(id)arg4 ;
-(void)_linkNamelessPhonesIfAppropriate:(graph_t*)arg1 nameToVertex:(id)arg2 disjointSets:(DisjointSetHandleRef)arg3 edges:(id)arg4 ;
-(id)_computeBlobsRaw:(id*)arg1 ;
-(id)loadInterdicts;
-(id)curatedRecordIds;
-(id)splitBlob:(id)arg1 withInterdicts:(id)arg2 edges:(id)arg3 curatedRecordIds:(id)arg4 ;
-(id)splitNeededFor:(id)arg1 withInterdicts:(id)arg2 curatedRecordIds:(id)arg3 ;
-(id)_makeBlobsFromConnectedComponents:(id)arg1 edges:(id)arg2 ;
-(id)_uniqueGoodDetailMatchFrom:(id)arg1 toDetails:(id)arg2 nonUnique:(BOOL*)arg3 ;
-(id)_popMergeBlobForAnalysis;
-(id)makeInterdictsForBlob:(id)arg1 withContactStore:(id)arg2 ;
-(void)_writeMergeBlobSnapshotForAnalysis:(id)arg1 ;
-(BOOL)_isBlobAnalysisQueueEmpty;
-(BOOL)syncNewBlobsIfChanged;
-(BOOL)_analyzeMergeBlobsIncremental:(id)arg1 ;
-(id)batch:(/*^block*/id)arg1 ;
-(void)forceBlobSync;
-(void)addInterdictFrom:(id)arg1 with:(id)arg2 ;
-(BOOL)processEntity:(id)arg1 recordId:(id)arg2 ;
-(BOOL)rebuildIdentityTables;
-(BOOL)registerAndLinkIdentity:(id)arg1 recordId:(id)arg2 phones:(id)arg3 instantMessageAddresses:(id)arg4 email:(id)arg5 curated:(BOOL)arg6 ;
-(void)deleteByRecordId:(id)arg1 ;
-(id)getAllLinks;
-(id)unmergedCandidatesLimitedTo:(int)arg1 ;
-(void)analyzeMergeBlobs:(id)arg1 ;
-(void)_markIdentityStoreDirty;
-(void)_deleteOrphanedItems;
-(unsigned long long)storeReimportRequest:(id)arg1 ;
-(void)storeReimportItems:(id)arg1 requestId:(unsigned long long)arg2 ;
-(void)markReimportRequestAsExecutedWithRequestId:(unsigned long long)arg1 ;
-(void)markReimportItemsAsSeenByReceiverWithBundleId:(id)arg1 items:(id)arg2 ;
-(void)markReimportItemAsSeenByReceiverWithBundleId:(id)arg1 uniqueId:(id)arg2 ;
-(void)updateReimportItemUniqueIdForBundleId:(id)arg1 oldValue:(id)arg2 newValue:(id)arg3 ;
-(id)loadUnqueriedReimportRequests;
-(id)loadUnexecutedReimportRequests;
-(id)loadAllReimportRequests;
-(id)loadUnseenReimportItemsForRequest:(unsigned long long)arg1 ;
-(BOOL)reimportRequestsContainBundleIdentifier:(id)arg1 uniqueIdentifier:(id)arg2 ;
-(void)deleteAllReimportRequestsOlderThanDate:(id)arg1 ;
-(void)deleteCompletedReimportRequests;
-(id)reimportRequestDBStats;
-(id)_loadReimportRequestsWithWhereClause:(id)arg1 ;
-(void)pruneNLEventEntitiesOlderThan:(SGUnixTimestamp_)arg1 ;
-(id)childrenFromParentKey:(id)arg1 ;
-(void)deleteMessagesByDuplicateKey:(id)arg1 ;
-(void)_recordPseudoContactsWithDeletedDetailsInTable:(id)arg1 deletedChildrenTable:(id)arg2 ;
-(void)pruneEntitiesOlderThan:(SGUnixTimestamp_)arg1 suspensionHandler:(/*^block*/id)arg2 batchSize:(unsigned long long)arg3 ;
-(id)_deleteChildEntitiesByRecordIdsInTable:(id)arg1 ;
-(void)deleteEntitiesByDuplicateKey:(id)arg1 preserveEventConfirmationHistory:(BOOL)arg2 emitChangeNotifications:(BOOL)arg3 ;
-(id)_deleteEntitiesByDuplicateKeyNoRecurse:(id)arg1 ;
-(id)_derefChildrenOf:(id)arg1 ;
-(id)_deleteMessageMetadataByDuplicateKeyNoRecurse:(id)arg1 ;
-(void)removeSnippetsForEntities:(id)arg1 ;
-(void)_removeSnippetsForEmails:(id)arg1 ;
-(void)deleteItemsWithEntityTag:(id)arg1 preserveEventConfirmationHistory:(BOOL)arg2 ;
-(void)pruneEntitiesOlderThan:(SGUnixTimestamp_)arg1 suspensionHandler:(/*^block*/id)arg2 ;
-(void)pruneEntitiesOlderThanOneYearWithSuspensionHandler:(/*^block*/id)arg1 ;
-(void)pruneDuplicateWebPageExtractions:(id)arg1 ;
-(void)pruneNLEventEntitiesOlderThanTwoWeeks;
-(void)pruneReminders;
-(void)deleteInteractionEntitiesOnBlacklist:(id)arg1 ;
-(void)deleteInteractionEntitiesExceedingLimit:(id)arg1 withSuspensionHandler:(/*^block*/id)arg2 ;
-(void)deleteItemsWithEntityTag:(id)arg1 ;
-(void)deleteInteractionsWithBundleId:(id)arg1 ;
-(void)deleteInteractionsWithBundleId:(id)arg1 identifiers:(id)arg2 ;
-(void)deleteInteractionsWithBundleId:(id)arg1 groupIdentifiers:(id)arg2 ;
-(void)deleteEntitiesByDuplicateKey:(id)arg1 emitChangeNotifications:(BOOL)arg2 ;
-(id)selectEntityQuery:(id)arg1 ;
-(id)entityFromSqlResult:(sqlite3_stmtRef)arg1 ;
-(id)allContactsWithEntityType:(unsigned long long)arg1 ;
-(id)columnQueryPrefixSelect;
-(float)_scoreContactDetail:(id)arg1 ;
-(id)allPseudoContacts;
-(id)dbStats;
-(void)analyzeDatabase;
-(void)clearAllTables;
-(BOOL)clearDatabases;
-(void)deleteWithSqlJoining:(id)arg1 where:(id)arg2 onPrep:(/*^block*/id)arg3 ;
-(void)selectAuthoritativeDetailsForContactWithId:(long long)arg1 ;
-(BOOL)performDatabaseCheck;
-(BOOL)performIntegrityCheckOnly;
-(BOOL)databasecheck_BrokenEntityIDReferences;
-(BOOL)databasecheck_contactMergeGroupConsistency;
-(BOOL)databasecheck_IntegrityCheck;
-(void)_reportDbStatsBackground;
-(void)reportDbStats;
-(void)registerCachePrecomputationWithCTS;
-(BOOL)contactIsSignificantOrSignificanceIsDisabled:(id)arg1 ;
-(BOOL)realtimeContactIsSignificantOrSignificanceIsDisabled:(id)arg1 ;
-(BOOL)anyEmailAddressIsSignificant:(id)arg1 ;
-(BOOL)anyHandleIsSignificant:(id)arg1 ;
-(void)setCRLookupForTesting:(/*^block*/id)arg1 ;
-(void)registerSentMailMessage:(id)arg1 ;
-(void)registerSentTextMessage:(id)arg1 ;
-(BOOL)senderIsSignificantForMessage:(id)arg1 ;
-(BOOL)contactIsSignificant:(id)arg1 usingCoreRecents:(BOOL)arg2 ;
-(BOOL)mayHaveSentMessageToEmail:(id)arg1 ;
-(BOOL)mayHaveSentMessageToHandle:(id)arg1 ;
-(BOOL)recentsContainSomeOfEmails:(id)arg1 phoneNumbers:(id)arg2 instantMessageAddresses:(id)arg3 ;
-(BOOL)contactIsSignificantOrSignificanceIsDisabled:(id)arg1 usingCoreRecents:(BOOL)arg2 ;
-(BOOL)contactIsSignificant:(id)arg1 ;
-(BOOL)realtimeContactIsSignificant:(id)arg1 ;
-(id)normalizeHandleForRecipientFilterAndRemoveFromDetailsCache:(id)arg1 ;
-(void)_writeEventEntitiesToJournal:(id)arg1 ;
-(void)_writeReminderEntitiesToJournal:(id)arg1 ;
-(void)_writeContactEntityToJournal:(id)arg1 ;
-(void)_prunePseudoContactGeneratingEmails:(id)arg1 ;
-(void)_emitChangeNotifications:(id)arg1 ;
-(long long)writeEntity:(id)arg1 ;
-(id)_computePseudoContactContentHash:(id)arg1 contactDetails:(id)arg2 ;
-(long long)_writeOneEntityToDb:(id)arg1 ;
-(void)_addTimeRange:(id)arg1 toEntityWriteDictionary:(id)arg2 ;
-(void)_addLocations:(id)arg1 toEntityWriteDictionary:(id)arg2 ;
-(void)_writeEventEntityToJournal:(id)arg1 ;
-(long long)_writeMessageEntityToDb:(id)arg1 ;
-(long long)_writeGenericExtractionEntityToDb:(id)arg1 ;
-(void)_addIndexingTagsTo:(id)arg1 ;
-(void)_writeMessageEntityToSnippetsDb:(id)arg1 ;
-(void)_writeEntityParentageFor:(id)arg1 entityId:(long long)arg2 ;
-(void)_writeEntityToSnippetsDb:(id)arg1 ;
-(void)_writeFTSTermsForEntity:(id)arg1 entityId:(long long)arg2 ;
-(id)_journalEntryFromEntity:(id)arg1 ;
-(id)_journalEntryFromReminderEntity:(id)arg1 ;
-(id)_loadIdentityBlobs;
-(id)_labelIdentityBlobs:(id)arg1 ;
-(void)_writeLabeledBlobs:(id)arg1 isDelete:(BOOL)arg2 ;
-(long long)writeEntity:(id)arg1 withSpotlightReferenceForBundleIdentifier:(id)arg2 uniqueIdentifier:(id)arg3 domainIdentifier:(id)arg4 ;
-(void)_dumpTable:(id)arg1 columns:(id)arg2 limitTo:(int)arg3 ;
-(BOOL)entityWantsFullDownload:(id)arg1 ;
-(void)writeEntityGeocodeResultToDb:(id)arg1 ;
-(void)markEntityAsDupeByRecordId:(id)arg1 ;
-(void)writeIdentityBlobs:(id)arg1 forceRewrite:(BOOL)arg2 ;
-(void)_hashAttachedPseudoContacts:(id)arg1 ;
-(void)setLostMessageOverflow:(unsigned long long)arg1 ;
-(id)dbHandleForTesting;
-(id)snippetsDbHandleForTesting;
-(id)historyForTesting;
-(void)setParentMessagesLimitForTesting:(unsigned long long)arg1 ;
-(SGUnixTimestamp_)lastSeenTimestampForKey:(id)arg1 ;
-(long long)_popQueuedSerializedContactId;
-(void)writeSerializedContactPlaceholder:(long long)arg1 ;
-(BOOL)_processBatchOfSerializedContactJobs;
-(void)_trimSerializedContacts;
-(void)setSerializedContactsLimit:(unsigned long long)arg1 ;
-(unsigned long long)serializedContactsLimit;
-(void)writeSerializedContactAndUpdateEntityIDSet:(id)arg1 ;
-(void)deleteSerializedContactsForIdSet:(id)arg1 ;
-(id)loadSerializedContactForId:(long long)arg1 ;
-(id)loadAllSerializedContacts;
-(void)updateSerializedContacts:(id)arg1 ;
-(void)writeSerializedContact:(id)arg1 ;
-(id)serializedEntityIds;
-(void)deleteSerializedContactForId:(long long)arg1 ;
-(id)_loadMessageByKey:(id)arg1 ;
-(id)loadStorageContactByRecordId:(id)arg1 error:(id*)arg2 ;
-(id)loadContactDetailsWithWhereClause:(id)arg1 onPrep:(/*^block*/id)arg2 type:(unsigned long long)arg3 dedupeAgainst:(id)arg4 ;
-(id)loadAllContactDetailsWithWhereClause:(id)arg1 onPrep:(/*^block*/id)arg2 dedupeAgainst:(id)arg3 ;
-(id)allEntitiesOfType:(long long)arg1 limitedTo:(unsigned long long)arg2 ;
-(id)loadEntityByKey:(id)arg1 ;
-(id)allEntitiesOfType:(long long)arg1 limitedTo:(unsigned long long)arg2 onlyMLExtractions:(BOOL)arg3 ;
-(id)loadEventByKey:(id)arg1 ;
-(id)loadOriginByRecordId:(id)arg1 ;
-(id)loadEntitiesByEntityKey:(id)arg1 entityType:(long long)arg2 resolveDuplicates:(/*^block*/id)arg3 ;
-(id)loadEventByRecordId:(id)arg1 ;
-(id)loadContactForStorageContact:(id)arg1 usingSerializedContactCache:(BOOL)arg2 ;
-(id)loadStorageContactByRecordId:(id)arg1 ;
-(id)loadContactDetailsForRecordId:(id)arg1 type:(unsigned long long)arg2 ;
-(id)loadAllContactDetailsForRecordId:(id)arg1 ;
-(id)loadCuratedEventsStartingAt:(double)arg1 ;
-(id)allRemindersLimitedTo:(unsigned long long)arg1 ;
-(id)loadReminderByKey:(id)arg1 ;
-(id)loadReminderByRecordId:(id)arg1 ;
-(id)loadEventsWithInteractionIdentifiers:(id)arg1 fromBundleIdentifier:(id)arg2 ;
-(id)loadEntityByRecordId:(id)arg1 ;
-(void)deleteAllCNContactMatches;
-(void)refreshSuggestionsContact:(id)arg1 ;
-(id)_pendingCNContactIdsJobCache;
-(id)_popBatchOfCNContactIds;
-(void)syncContactsWithStore:(id)arg1 ;
-(void)_fullSyncContactsInBatches:(id)arg1 ;
-(void)setHasFullSync;
-(BOOL)needsFullSync;
-(void)_fullSyncContactsWithStore:(id)arg1 ;
-(void)_deltaSyncContactsWithChangeHistory:(id)arg1 ;
-(void)_enqueueBatchOfCNContactIds:(id)arg1 ;
-(void)deleteCNContactMatchForContactId:(id)arg1 ;
-(void)writeCNContactMatchForContact:(id)arg1 withMatches:(id)arg2 andMaxEntityID:(long long)arg3 ;
-(id)prematchedContactIdentifiers;
-(void)writeCNContactMissForRecordId:(id)arg1 ;
-(void)writeCNContactMatchAndUpdateSetForContact:(id)arg1 withMatches:(id)arg2 andMaxEntityID:(long long)arg3 ;
-(id)loadCNContactMatchesForContact:(id)arg1 andGetMaxEntityId:(long long*)arg2 ;
-(void)deleteAllCNContactMatchesForEntityID:(long long)arg1 ;
-(id)loadAllPrecomputedContactMatches;
-(id)cnContactMatchesForRecordId:(id)arg1 found:(BOOL*)arg2 ;
-(void)updateCNContactMatches:(id)arg1 ;
-(long long)getMaxEntityId;
-(void)deleteAllCNContactMatchesForIdSet:(id)arg1 ;
-(id)initForRawDatabaseAccessWithEntityPath:(id)arg1 snippetsPath:(id)arg2 error:(id*)arg3 ;
-(id)initForDbStatsOnlyWithError:(id*)arg1 ;
-(id)initWithEntityDbPath:(id)arg1 snippetDbPath:(id)arg2 isEphemeral:(BOOL)arg3 executeJournals:(BOOL)arg4 noMigrate:(BOOL)arg5 ;
-(void)closeDatabases;
-(void)addDeallocNotification:(/*^block*/id)arg1 ;
-(BOOL)corruptionMarkerPresent;
-(void)_removeCorruptionMarker;
-(void)clearMasterEntityCache;
-(unsigned long long)_unsignedIntegerFromPhoneIfPossible:(id)arg1 ;
-(void)_removePhoneNumberIntegerFromNoContactsCache:(unsigned long long)arg1 ;
-(void)_addPhoneNumberIntegerToNoContactsCache:(unsigned long long)arg1 ;
-(void)removeStringFromNoContactsCache:(id)arg1 ;
-(void)_addStringToNoContactsCache:(id)arg1 ;
-(void)removePhoneNumberFromNoDetailsCache:(id)arg1 ;
-(void)_addPhoneNumberToNoDetailsCache:(id)arg1 ;
-(BOOL)_isPhoneNumberInNoContactsCache:(id)arg1 ;
-(BOOL)_isStringInNoContactsCache:(id)arg1 ;
-(void)clearNoContactsCache;
-(id)nextPendingGeocode;
-(id)mostRecentParentKeyForDuplicateKey:(id)arg1 ;
-(id)parentKeysForDuplicateKey:(id)arg1 ;
-(BOOL)contactIsDisplayable:(id)arg1 ;
-(id)storageContactByMasterEntityId:(long long)arg1 ;
-(id)masterEntityIDsForMasterEntityQuery:(id)arg1 bindings:(/*^block*/id)arg2 ;
-(id)_contactsForMasterEntityIds:(id)arg1 ;
-(id)suggestContactsByMasterEntityQuery:(id)arg1 limit:(unsigned long long)arg2 bindings:(/*^block*/id)arg3 ;
-(id)suggestContactsWithPrefix:(id)arg1 limitTo:(unsigned long long)arg2 ;
-(id)suggestContactsWithContact:(id)arg1 limitTo:(unsigned long long)arg2 ;
-(void)filterOutRejectedDetailsFromContact:(id)arg1 ;
-(id)_buildUnknownMatchContactMatchForSGContact:(id)arg1 ;
-(double)_scoreSGContact:(id)arg1 bySimilarityToContact:(id)arg2 cnContactFullname:(id)arg3 ;
-(id)_rankSGContacts:(id)arg1 bySimilarityToContact:(id)arg2 ;
-(id)suggestContactMatchesWithContact:(id)arg1 limitTo:(unsigned long long)arg2 ;
-(id)_matchinfoForFTSMatchWhere:(id)arg1 bindings:(/*^block*/id)arg2 ;
-(id)suggestContactMatchesWithMessagingPrefix:(id)arg1 limitTo:(unsigned long long)arg2 ;
-(id)suggestContactMatchesWithFullTextSearch:(id)arg1 limitTo:(unsigned long long)arg2 ;
-(id)_queryForAllContactsWithLimit;
-(id)allContactsLimitedTo:(unsigned long long)arg1 ;
-(id)allContactsMasterEntityIdsLimitedTo:(unsigned long long)arg1 ;
-(id)suggestContactMatchesByPhoneNumber:(id)arg1 isMaybe:(BOOL)arg2 onlySignificant:(BOOL)arg3 ;
-(id)suggestContactMatchesByPhoneNumber:(id)arg1 ;
-(id)suggestContactMatchesByEmailAddress:(id)arg1 isMaybe:(BOOL)arg2 onlySignificant:(BOOL)arg3 ;
-(id)suggestContactMatchesByEmailAddress:(id)arg1 ;
-(id)storageContactByKey:(id)arg1 ;
-(id)suggestContactByKey:(id)arg1 ;
-(id)suggestContactByIdentityKey:(id)arg1 parentKey:(id)arg2 ;
-(id)storageContactByRecordId:(id)arg1 ;
-(id)suggestContactByRecordId:(id)arg1 ;
-(id)suggestContactMatchesByContactDetailTag:(id)arg1 ;
-(id)contactIdsMergedWithMasterEntityId:(id)arg1 ;
-(id)eventFromSqlResult:(sqlite3_stmtRef)arg1 ;
-(id)_filterOutOlderVersionsOfPseudoEvents:(id)arg1 ;
-(BOOL)eventIsCancelled:(id)arg1 ;
-(id)_filterOutCancelledEvents:(id)arg1 ;
-(id)_filterOutAllButAcceptedWithUpdatedFields:(id)arg1 ;
-(id)suggestEventsStartingAt:(SGUnixTimestamp_)arg1 endingAt:(SGUnixTimestamp_)arg2 limitTo:(unsigned long long)arg3 options:(unsigned)arg4 ;
-(id)suggestEventsStartingAt:(SGUnixTimestamp_)arg1 endingAt:(SGUnixTimestamp_)arg2 prefix:(id)arg3 limitTo:(unsigned long long)arg4 options:(unsigned)arg5 ;
-(id)suggestEventsStartingAt:(SGUnixTimestamp_)arg1 endingAt:(SGUnixTimestamp_)arg2 limitTo:(unsigned long long)arg3 ;
-(id)suggestEventsStartingAt:(SGUnixTimestamp_)arg1 endingAt:(SGUnixTimestamp_)arg2 prefix:(id)arg3 limitTo:(unsigned long long)arg4 ;
-(id)suggestEventsStartingAt:(SGUnixTimestamp_)arg1 endingAt:(SGUnixTimestamp_)arg2 limitTo:(unsigned long long)arg3 additionalWhereClause:(id)arg4 options:(unsigned)arg5 onPrep:(/*^block*/id)arg6 ;
-(void)confirmFieldValues:(id)arg1 forEntity:(id)arg2 ;
-(id)rejectFieldValuesForRecordId:(id)arg1 ;
-(id)confirmedFieldValuesForEntity:(id)arg1 ;
-(id)confirmedFieldValuesForEvent:(id)arg1 ;
-(BOOL)rejectRealtimeEvent:(id)arg1 error:(id*)arg2 ;
-(BOOL)confirmRealtimeEvent:(id)arg1 error:(id*)arg2 ;
-(BOOL)rejectRealtimeContact:(id)arg1 error:(id*)arg2 ;
-(BOOL)confirmRealtimeContact:(id)arg1 error:(id*)arg2 ;
-(BOOL)confirmStoredEvent:(id)arg1 error:(id*)arg2 ;
-(BOOL)confirm:(BOOL)arg1 orRejectContactByRecordID:(id)arg2 error:(id*)arg3 ;
-(BOOL)confirmContactByRecordID:(id)arg1 error:(id*)arg2 ;
-(BOOL)rejectContactByRecordID:(id)arg1 error:(id*)arg2 ;
-(BOOL)confirmContactDetailByRecordID:(id)arg1 error:(id*)arg2 ;
-(BOOL)rejectContactDetailByRecordID:(id)arg1 error:(id*)arg2 ;
-(BOOL)rejectStoredEvent:(id)arg1 error:(id*)arg2 ;
-(BOOL)confirmStoredReminder:(id)arg1 error:(id*)arg2 ;
-(BOOL)rejectStoredReminder:(id)arg1 error:(id*)arg2 ;
-(BOOL)reminderAlarmTriggeredForStorageReminder:(id)arg1 error:(id*)arg2 ;
-(id)duplicateKeysMatchingEmailAddressPrefix:(id)arg1 limitTo:(unsigned long long)arg2 ;
-(id)duplicateKeysMatchingAnyTag:(id)arg1 ;
-(id)duplicateKeysMatchingAnyEventHash:(id)arg1 ;
-(id)duplicateKeysMatchingAnyReminderHash:(id)arg1 ;
-(id)_hashWithDuplicateKeysMatchingTags:(id)arg1 ;
-(id)duplicateKeysMatchingInteractionBundleId:(id)arg1 andTags:(id)arg2 ;
-(id)loadFullDownloadRequestBatch:(unsigned long long)arg1 ;
-(void)resolveFullDownloadRequests:(id)arg1 ;
-(BOOL)waitForMigrations;
-(SGSpotlightContactsAdapter *)spotlightContactsAdapter;
-(SGSGtoCNContactsCacheUpdateAdapter *)sgToCNContactsCacheUpdateAdapter;
-(SGKeyValueCacheManager *)kvCacheManager;
-(void)tryExecuteSnippetsJournal;
-(void)registerJournalUnlockHandler;
-(id)selectMigrationQueue;
-(long long)migrateToVersion:(unsigned long long)arg1 ;
-(long long)runQuery:(id)arg1 onDb:(id)arg2 ;
-(BOOL)_renameTable:(id)arg1 to:(id)arg2 ;
-(BOOL)_createEntityFTSTableWithName:(id)arg1 ;
-(BOOL)_prepareToCopyFrom:(id)arg1 toNewTableNamed:(id)arg2 ;
-(void)prepMigrator;
-(void)_slowCopyFromTable:(id)arg1 toTable:(id)arg2 startingAtEntityId:(unsigned long long)arg3 ;
-(long long)runQueries:(id)arg1 forVersion:(unsigned)arg2 inTransactionOnDb:(id)arg3 ;
-(long long)fixupVersionMismatch;
-(long long)skipFromZeroSchema;
-(id)languageToUpdateEntityFTSTo;
-(void)updateLanguageForFTSTablesToLanguage:(id)arg1 ;
-(unsigned long long)maxKnownDbVersion;
-(long long)migration_deleteSerializedContacts;
-(id)initForMigratorTestWithEntityDb:(id)arg1 snippetDb:(id)arg2 ;
-(long long)configureMigratorThenMigrateToVersion:(unsigned long long)arg1 ;
-(long long)migration_MoveContentToSnippets;
-(long long)migration_AddAuthorColumnIfMissing;
-(long long)migration_AddNewishTablesIfMissing;
-(long long)migration_FixUpColumnsForDevicesWhoMissedTheImprovedLegacyMigration;
-(long long)migration_RebuildIdentityTables;
-(long long)migration_RecreateFTSTableWithITS;
-(long long)migration_CreateFTSTableWithITS;
-(long long)migration_DeduplicateIdentityPhones;
-(long long)migration_ConvertContentAndDupKeyHashesToBlobs;
-(long long)migration_DropMessagingTermsWithPhoneExtensions;
-(long long)migration_RemoveEntityReferencesWithoutBundleIdentifier;
-(long long)migration_FixupMergeGroups;
-(long long)migration_separateMessageEntities;
-(long long)migration_separateMessageSnippets;
-(long long)migration_rebuildFTSWithDetailEntityIDDocIDs;
-(long long)migration_deleteInteractions;
-(long long)migration_reimport;
-(long long)migration_deleteEmergencyExtractions;
-(long long)migration_deleteInternalExtractionsFromML;
-(long long)clearDatabase:(id)arg1 ;
-(id)duplicateKeysFromMailMessageKeys:(id)arg1 ;
-(id)recordIdForKey:(id)arg1 ;
-(void)addSpotlightReferenceToEmailRecordId:(id)arg1 withBundleIdentifier:(id)arg2 uniqueIdentifier:(id)arg3 domainIdentifier:(id)arg4 ;
-(id)duplicateKeysFromRecordIds:(id)arg1 ;
-(id)_duplicateKeysWithZeroSpotlightReferencesFromRecordIds:(id)arg1 ;
-(id)_recordIdsFromRemovingSpotlightReferencesWithBundleIdentifier:(id)arg1 uniqueIdentifiers:(id)arg2 ;
-(void)_markRecordsLostIfNoSpotlightReferences:(id)arg1 ;
-(void)_deleteIfNoSpotlightReferences:(id)arg1 addToRecentlyDeletedCache:(BOOL)arg2 ;
-(void)writeTombstoneForSpotlightReferenceWithBundleIdentifier:(id)arg1 domainIdentifiers:(id)arg2 ;
-(id)_selectingDomainsForDomainIdentifier:(id)arg1 ;
-(BOOL)_tombstoneExistsForBundleIdentifier:(id)arg1 ;
-(void)writeTombstoneForSpotlightReferenceWithBundleIdentifier:(id)arg1 uniqueIdentifiers:(id)arg2 ;
-(BOOL)_shouldContinueReindex:(int)arg1 ;
-(id)batchOf:(unsigned long long)arg1 contactsStartingAtEntityId:(unsigned long long)arg2 ;
-(unsigned long long)_minEntityIdFromMinEntityId:(unsigned long long)arg1 withContactIdentifiers:(id)arg2 ;
-(void)reindexSearchableItemsWithMinimumEntityId:(unsigned long long)arg1 searchableIndex:(id)arg2 acknowledgementHandler:(/*^block*/id)arg3 reindexCount:(int)arg4 ;
-(id)contactsWithIdentifiers:(id)arg1 ;
-(id)domainIdentifierForSpotlightReferenceForBundleIdentifier:(id)arg1 uniqueIdentifier:(id)arg2 ;
-(BOOL)hasSpotlightReferenceForBundleIdentifier:(id)arg1 uniqueIdentifier:(id)arg2 ;
-(BOOL)addSpotlightReferenceToEmailIfFullyDownloaded:(id)arg1 withBundleIdentifier:(id)arg2 uniqueIdentifier:(id)arg3 domainIdentifier:(id)arg4 ;
-(BOOL)isRecentlyDeleted:(id)arg1 ;
-(void)markLostSpotlightReferencesWithBundleIdentifier:(id)arg1 uniqueIdentifiers:(id)arg2 ;
-(void)deleteSpotlightReferencesWithNoBundleIdentifier;
-(void)writeTombstoneForSpotlightReferenceWithBundleIdentifier:(id)arg1 domainIdentifier:(id)arg2 ;
-(void)writeTombstoneForSpotlightReferenceWithBundleIdentifier:(id)arg1 uniqueIdentifier:(id)arg2 ;
-(void)writeTombstoneForSpotlightReferenceWithBundleIdentifier:(id)arg1 ;
-(void)clearAllTombstonesForSpotlightReferences;
-(BOOL)tombstoneExistsForSpotlightReferenceWithBundleIdentifier:(id)arg1 uniqueIdentifier:(id)arg2 domainIdentifier:(id)arg3 ;
-(id)displayableEntities:(id)arg1 ;
-(id)loadMessagesToRefresh;
-(void)updateMessages:(id)arg1 state:(unsigned long long)arg2 ;
-(void)markMessagesUndisplayablyLost:(id)arg1 ;
-(id)filterOutUndisplayableEntities:(id)arg1 ;
-(void)markMessagesLost:(id)arg1 ;
-(void)markMessagesFound:(id)arg1 ;
-(void)pruneLostMessagesWithSource:(id)arg1 count:(unsigned long long)arg2 ;
@end

