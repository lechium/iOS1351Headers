/*
                       * This header is generated by classdump-dyld 1.5
                       * on Wednesday, October 27, 2021 at 3:17:25 PM Mountain Standard Time
                       * Operating System: Version 13.5.1 (Build 17F80)
                       * Image Source: /System/Library/PrivateFrameworks/HomeKitDaemon.framework/HomeKitDaemon
                       * classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos. Updated by Kevin Bradley.
                       */

#import <libobjc.A.dylib/HMFLogging.h>
#import <libobjc.A.dylib/HMDDataStreamProtocol.h>
#import <libobjc.A.dylib/HMFTimerDelegate.h>

@protocol HMDDataStreamProtocolDelegate, OS_dispatch_queue;
@class NSObject, NSMapTable, NSString, NSMutableDictionary;

@interface HMDDataStreamBulkSendProtocol : NSObject <HMFLogging, HMDDataStreamProtocol, HMFTimerDelegate> {

	BOOL _isConnected;
	unsigned _nextSessionIdentifier;
	id<HMDDataStreamProtocolDelegate> _dataStream;
	NSObject*<OS_dispatch_queue> _queue;
	id _accessory;
	NSMapTable* _listeners;
	NSString* _logIdentifier;
	NSMapTable* _activeBulkSendSessions;
	NSMutableDictionary* _pendingBulkSendSessionContextBySessionIdentifier;
	/*^block*/id _bulkSendSessionContextFactory;

}

@property (nonatomic,retain) NSObject*<OS_dispatch_queue> queue;                                          //@synthesize queue=_queue - In the implementation block
@property (assign,nonatomic,__weak) id accessory;                                                         //@synthesize accessory=_accessory - In the implementation block
@property (nonatomic,retain) NSMapTable * listeners;                                                      //@synthesize listeners=_listeners - In the implementation block
@property (assign,nonatomic) BOOL isConnected;                                                            //@synthesize isConnected=_isConnected - In the implementation block
@property (nonatomic,copy,readonly) NSString * logIdentifier;                                             //@synthesize logIdentifier=_logIdentifier - In the implementation block
@property (assign) unsigned nextSessionIdentifier;                                                        //@synthesize nextSessionIdentifier=_nextSessionIdentifier - In the implementation block
@property (readonly) NSMapTable * activeBulkSendSessions;                                                 //@synthesize activeBulkSendSessions=_activeBulkSendSessions - In the implementation block
@property (readonly) NSMutableDictionary * pendingBulkSendSessionContextBySessionIdentifier;              //@synthesize pendingBulkSendSessionContextBySessionIdentifier=_pendingBulkSendSessionContextBySessionIdentifier - In the implementation block
@property (readonly) id bulkSendSessionContextFactory;                                                    //@synthesize bulkSendSessionContextFactory=_bulkSendSessionContextFactory - In the implementation block
@property (assign,nonatomic,__weak) id<HMDDataStreamProtocolDelegate> dataStream;                         //@synthesize dataStream=_dataStream - In the implementation block
@property (readonly) unsigned long long hash; 
@property (readonly) Class superclass; 
@property (copy,readonly) NSString * description; 
@property (copy,readonly) NSString * debugDescription; 
+(id)protocolName;
+(id)logCategory;
-(void)setQueue:(NSObject*<OS_dispatch_queue>)arg1 ;
-(NSObject*<OS_dispatch_queue>)queue;
-(NSMapTable *)listeners;
-(BOOL)isConnected;
-(unsigned)nextSessionIdentifier;
-(void)setNextSessionIdentifier:(unsigned)arg1 ;
-(void)setIsConnected:(BOOL)arg1 ;
-(void)removeListener:(id)arg1 ;
-(id)accessory;
-(void)setAccessory:(id)arg1 ;
-(void)setListeners:(NSMapTable *)arg1 ;
-(NSString *)logIdentifier;
-(void)timerDidFire:(id)arg1 ;
-(id<HMDDataStreamProtocolDelegate>)dataStream;
-(void)setDataStream:(id<HMDDataStreamProtocolDelegate>)arg1 ;
-(void)dataStream:(id)arg1 didFailWithError:(id)arg2 ;
-(void)dataStream:(id)arg1 didReceiveResponse:(id)arg2 header:(id)arg3 payload:(id)arg4 ;
-(void)dataStream:(id)arg1 didReceiveEvent:(id)arg2 header:(id)arg3 payload:(id)arg4 ;
-(void)dataStream:(id)arg1 didReceiveRequest:(id)arg2 header:(id)arg3 payload:(id)arg4 ;
-(void)dataStreamDidClose:(id)arg1 ;
-(void)dataStreamDidOpen:(id)arg1 ;
-(void)addListener:(id)arg1 fileType:(id)arg2 ;
-(id)initWithQueue:(id)arg1 accessory:(id)arg2 logIdentifier:(id)arg3 ;
-(void)startSessionForFileType:(id)arg1 queue:(id)arg2 callback:(/*^block*/id)arg3 ;
-(id)initWithQueue:(id)arg1 accessory:(id)arg2 logIdentifier:(id)arg3 bulkSendSessionContextFactory:(/*^block*/id)arg4 ;
-(NSMapTable *)activeBulkSendSessions;
-(void)_closeAllSessionsWithError:(id)arg1 ;
-(void)_handleDataMessage:(id)arg1 ;
-(void)_handleCloseMessage:(id)arg1 ;
-(void)_handleOpenWithRequestHeader:(id)arg1 payload:(id)arg2 ;
-(void)_startSessionCandidate:(id)arg1 queue:(id)arg2 callback:(/*^block*/id)arg3 ;
-(void)_rejectSessionCandidate:(id)arg1 status:(unsigned short)arg2 ;
-(void)_cancelSessionWithIdentifier:(id)arg1 reason:(unsigned short)arg2 hadReceivedEof:(BOOL)arg3 ;
-(id)_createSessionIdentifier;
-(void)_sendOpenResponseWithRequestHeader:(id)arg1 streamIdentifier:(id)arg2 ;
-(id)_createSessionFromCandidate:(id)arg1 queue:(id)arg2 ;
-(void)_pumpMessage:(id)arg1 session:(id)arg2 ;
-(void)_pumpReceiveFailure:(id)arg1 session:(id)arg2 ;
-(void)_sendOpenResponseWithRequestHeader:(id)arg1 bulkSendStatus:(unsigned short)arg2 ;
-(void)_sendOpenResponseWithRequestHeader:(id)arg1 status:(unsigned short)arg2 ;
-(id)_createSessionCandidateWithRequestHeader:(id)arg1 ;
-(id)_getBulkSendSessionForSessionIdentifier:(id)arg1 ;
-(void)_removeBulkSendSessionForSessionIdentifier:(id)arg1 ;
-(void)_sendAckMessageWithIdentifier:(id)arg1 ;
-(void)_sendCloseMessageWithIdentifier:(id)arg1 reason:(unsigned short)arg2 ;
-(void)_startSessionForFileType:(id)arg1 queue:(id)arg2 callback:(/*^block*/id)arg3 ;
-(id)bulkSendSessionContextFactory;
-(NSMutableDictionary *)pendingBulkSendSessionContextBySessionIdentifier;
-(void)asyncBulkSendSessionCandidate:(id)arg1 didAcceptOnQueue:(id)arg2 callback:(/*^block*/id)arg3 ;
-(void)asyncBulkSendSessionCandidate:(id)arg1 didRejectWithStatus:(unsigned short)arg2 ;
-(void)asyncBulkSendSessionDidCancelSessionWithIdentifier:(id)arg1 reason:(unsigned short)arg2 hadReceivedEof:(BOOL)arg3 ;
@end

