/*
                       * This header is generated by classdump-dyld 1.5
                       * on Wednesday, October 27, 2021 at 3:23:24 PM Mountain Standard Time
                       * Operating System: Version 13.5.1 (Build 17F80)
                       * Image Source: /System/Library/PrivateFrameworks/NanoPreferencesSync.framework/NanoPreferencesSync
                       * classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos. Updated by Kevin Bradley.
                       */


@protocol OS_dispatch_queue;
@class NSObject, NPSDomainAccessorInternal, NSString, NSUUID;

@interface NPSDomainAccessor : NSObject {

	BOOL _initializedWithActiveDevice;
	NSObject*<OS_dispatch_queue> _externalQueue;
	NSObject*<OS_dispatch_queue> _invalidationQueue;
	NPSDomainAccessorInternal* _internalAccessor;

}

@property (nonatomic,retain) NSObject*<OS_dispatch_queue> externalQueue;                  //@synthesize externalQueue=_externalQueue - In the implementation block
@property (nonatomic,retain) NSObject*<OS_dispatch_queue> invalidationQueue;              //@synthesize invalidationQueue=_invalidationQueue - In the implementation block
@property (nonatomic,retain) NPSDomainAccessorInternal * internalAccessor;                //@synthesize internalAccessor=_internalAccessor - In the implementation block
@property (assign,nonatomic) BOOL initializedWithActiveDevice;                            //@synthesize initializedWithActiveDevice=_initializedWithActiveDevice - In the implementation block
@property (nonatomic,readonly) NSString * domain; 
@property (nonatomic,readonly) NSUUID * pairingID; 
+(void)initialize;
+(void)resolveActivePairedDevicePairingID:(id*)arg1 pairingDataStore:(id*)arg2 ;
+(id)copyDomainListForPairingID:(id)arg1 pairingDataStore:(id)arg2 ;
+(id)copyDomainList;
-(id)dnds_bypassSettings;
-(void)dnds_setBypassSettings:(id)arg1 ;
-(id)dnds_scheduleSettingsWithLastUpdated:(id)arg1 ;
-(void)dnds_setScheduleSettings:(id)arg1 ;
-(void)dealloc;
-(void)invalidate;
-(id)queue;
-(id)synchronize;
-(NSString *)domain;
-(id)objectForKey:(id)arg1 ;
-(void)removeObjectForKey:(id)arg1 ;
-(void)setObject:(id)arg1 forKey:(id)arg2 ;
-(id)copyKeyList;
-(BOOL)boolForKey:(id)arg1 ;
-(id)dictionaryRepresentation;
-(id)stringForKey:(id)arg1 ;
-(id)arrayForKey:(id)arg1 ;
-(id)dictionaryForKey:(id)arg1 ;
-(id)dataForKey:(id)arg1 ;
-(id)stringArrayForKey:(id)arg1 ;
-(long long)integerForKey:(id)arg1 ;
-(long long)longForKey:(id)arg1 ;
-(float)floatForKey:(id)arg1 ;
-(double)doubleForKey:(id)arg1 ;
-(id)URLForKey:(id)arg1 ;
-(void)setInteger:(long long)arg1 forKey:(id)arg2 ;
-(void)setFloat:(float)arg1 forKey:(id)arg2 ;
-(void)setDouble:(double)arg1 forKey:(id)arg2 ;
-(void)setBool:(BOOL)arg1 forKey:(id)arg2 ;
-(void)setURL:(id)arg1 forKey:(id)arg2 ;
-(void)synchronizeWithCompletionHandler:(/*^block*/id)arg1 ;
-(id)initWithDomain:(id)arg1 ;
-(BOOL)boolForKey:(id)arg1 keyExistsAndHasValidFormat:(BOOL*)arg2 ;
-(NSUUID *)pairingID;
-(id)initWithDomain:(id)arg1 pairedDevice:(id)arg2 ;
-(id)initWithDomain:(id)arg1 pairingID:(id)arg2 pairingDataStore:(id)arg3 ;
-(double)doubleForKey:(id)arg1 keyExistsAndHasValidFormat:(BOOL*)arg2 ;
-(long long)integerForKey:(id)arg1 keyExistsAndHasValidFormat:(BOOL*)arg2 ;
-(NPSDomainAccessorInternal *)internalAccessor;
-(id)initWithDomain:(id)arg1 queue:(id)arg2 ;
-(id)initWithDomain:(id)arg1 queue:(id)arg2 pairingID:(id)arg3 pairingDataStore:(id)arg4 ;
-(id)initWithInternalDomainAccessor:(id)arg1 queue:(id)arg2 ;
-(id)shouldNotDoWork;
-(BOOL)activeDeviceChanged;
-(void)objectForKey:(id)arg1 completionHandler:(/*^block*/id)arg2 ;
-(void)setObject:(id)arg1 forKey:(id)arg2 completionHandler:(/*^block*/id)arg3 ;
-(long long)longForKey:(id)arg1 keyExistsAndHasValidFormat:(BOOL*)arg2 ;
-(float)floatForKey:(id)arg1 keyExistsAndHasValidFormat:(BOOL*)arg2 ;
-(NSObject*<OS_dispatch_queue>)externalQueue;
-(void)setExternalQueue:(NSObject*<OS_dispatch_queue>)arg1 ;
-(NSObject*<OS_dispatch_queue>)invalidationQueue;
-(void)setInvalidationQueue:(NSObject*<OS_dispatch_queue>)arg1 ;
-(void)setInternalAccessor:(NPSDomainAccessorInternal *)arg1 ;
-(BOOL)initializedWithActiveDevice;
-(void)setInitializedWithActiveDevice:(BOOL)arg1 ;
@end

