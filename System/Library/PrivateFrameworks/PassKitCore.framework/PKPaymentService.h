/*
                       * This header is generated by classdump-dyld 1.5
                       * on Friday, April 30, 2021 at 11:36:42 AM Mountain Standard Time
                       * Operating System: Version 13.5.1 (Build 17F80)
                       * Image Source: /System/Library/PrivateFrameworks/PassKitCore.framework/PassKitCore
                       * classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos. Updated by Kevin Bradley.
                       */

#import <PassKitCore/PassKitCore-Structs.h>
#import <libobjc.A.dylib/PKXPCServiceDelegate.h>
#import <libobjc.A.dylib/PKPaymentServiceExportedInterface.h>

@protocol PKPaymentServiceDelegate;
@class PKXPCService, NSMutableArray, PKFieldProperties, PKExpressTransactionState, NSString, PKPaymentWebServiceContext;

@interface PKPaymentService : NSObject <PKXPCServiceDelegate, PKPaymentServiceExportedInterface> {

	PKXPCService* _remoteService;
	unsigned long long _interfaceType;
	AB _cachedFieldPropertiesValid;
	BOOL _hasPaymentDeviceFieldProperties;
	BOOL _forceConnectionOnResume;
	os_unfair_lock_s _pendingInvitationRequestsLock;
	NSMutableArray* _pendingInvitationRequests;
	id<PKPaymentServiceDelegate> _delegate;

}

@property (nonatomic,readonly) BOOL hasPaymentDeviceFieldProperties; 
@property (nonatomic,__weak,readonly) PKFieldProperties * paymentDeviceFieldProperties; 
@property (nonatomic,readonly) PKExpressTransactionState * outstandingExpressTransactionState; 
@property (nonatomic,retain) NSString * defaultPaymentPassUniqueIdentifier; 
@property (nonatomic,retain) PKPaymentWebServiceContext * sharedPaymentWebServiceContext; 
@property (assign,nonatomic,__weak) id<PKPaymentServiceDelegate> delegate;                                  //@synthesize delegate=_delegate - In the implementation block
@property (readonly) unsigned long long hash; 
@property (readonly) Class superclass; 
@property (copy,readonly) NSString * description; 
@property (copy,readonly) NSString * debugDescription; 
-(id)init;
-(void)dealloc;
-(id<PKPaymentServiceDelegate>)delegate;
-(void)setDelegate:(id<PKPaymentServiceDelegate>)arg1 ;
-(id)initWithDelegate:(id)arg1 ;
-(id)_remoteObjectProxy;
-(void)defaultPaymentPassIngestionSpecificIdentifier:(/*^block*/id)arg1 ;
-(void)downloadAllPaymentPasses;
-(void)setDefaultPaymentPassUniqueIdentifier:(NSString *)arg1 ;
-(void)enforceUpgradedPasscodePolicyWithCompletion:(/*^block*/id)arg1 ;
-(void)featureApplicationsForProvisioningWithCompletion:(/*^block*/id)arg1 ;
-(void)performDeviceCheckInWithCompletion:(/*^block*/id)arg1 ;
-(void)storePassOwnershipToken:(id)arg1 withIdentifier:(id)arg2 ;
-(void)passOwnershipTokenWithIdentifier:(id)arg1 completion:(/*^block*/id)arg2 ;
-(void)startBackgroundVerificationObserverForPass:(id)arg1 verificationMethod:(id)arg2 ;
-(void)removeExpressPassWithUniqueIdentifier:(id)arg1 completion:(/*^block*/id)arg2 ;
-(void)performProductActionRequest:(id)arg1 completion:(/*^block*/id)arg2 ;
-(BOOL)willPassWithUniqueIdentifierAutomaticallyBecomeDefault:(id)arg1 ;
-(void)consistencyCheck;
-(void)setSharedPaymentWebServiceContext:(PKPaymentWebServiceContext *)arg1 ;
-(void)initializeSecureElementIfNecessaryWithCompletion:(/*^block*/id)arg1 ;
-(void)initializeSecureElement:(/*^block*/id)arg1 ;
-(void)sanitizeExpressPasses;
-(void)setExpressWithPassInformation:(id)arg1 credential:(id)arg2 handler:(/*^block*/id)arg3 ;
-(void)conflictingExpressPassIdentifiersForPassInformation:(id)arg1 withReferenceExpressState:(id)arg2 completion:(/*^block*/id)arg3 ;
-(void)conflictingExpressPassIdentifiersForPassInformation:(id)arg1 withCompletion:(/*^block*/id)arg2 ;
-(void)accountAttestationAnonymizationSaltWithCompletion:(/*^block*/id)arg1 ;
-(void)setAccountAttestationAnonymizationSalt:(id)arg1 withCompletion:(/*^block*/id)arg2 ;
-(void)updateMetadataOnPassWithIdentifier:(id)arg1 credential:(id)arg2 completion:(/*^block*/id)arg3 ;
-(void)addSharingInvitationReceipts:(id)arg1 onCredentialWithIdentifier:(id)arg2 completion:(/*^block*/id)arg3 ;
-(void)removeSharingInvitationReceiptWithIdentifiers:(id)arg1 onCredential:(id)arg2 completion:(/*^block*/id)arg3 ;
-(void)addSubcredential:(id)arg1 fromSharingInvitation:(id)arg2 withCompletion:(/*^block*/id)arg3 ;
-(void)removeSharingInvitation:(id)arg1 withCompletion:(/*^block*/id)arg2 ;
-(void)requestBackgroundRegistrationForCredentialWithIdentifier:(id)arg1 completion:(/*^block*/id)arg2 ;
-(void)subcredentialInvitationsWithCompletion:(/*^block*/id)arg1 ;
-(void)matchingInvitationOnDevice:(id)arg1 withTimeout:(unsigned long long)arg2 completion:(/*^block*/id)arg3 ;
-(void)credentialWithIdentifier:(id)arg1 completion:(/*^block*/id)arg2 ;
-(void)productsWithCompletion:(/*^block*/id)arg1 ;
-(NSString *)defaultPaymentPassUniqueIdentifier;
-(void)recomputeCategoryVisualizationMangitudesForPassUniqueID:(id)arg1 style:(long long)arg2 ;
-(BOOL)_hasInterfaceOfType:(unsigned long long)arg1 ;
-(id)_synchronousRemoteObjectProxyWithErrorHandler:(/*^block*/id)arg1 ;
-(id)_extendedRemoteObjectProxyWithFailureHandler:(/*^block*/id)arg1 ;
-(id)_remoteObjectProxyWithFailureHandler:(/*^block*/id)arg1 ;
-(id)_extendedRemoteObjectProxy;
-(id)_remoteObjectProxyWithErrorHandler:(/*^block*/id)arg1 ;
-(id)_extendedRemoteObjectProxyWithErrorHandler:(/*^block*/id)arg1 ;
-(void)remoteService:(id)arg1 didEstablishConnection:(id)arg2 ;
-(void)remoteService:(id)arg1 didInterruptConnection:(id)arg2 ;
-(void)remoteServiceDidSuspend:(id)arg1 ;
-(void)noteAccountDeleted;
-(void)insertOrUpdatePaymentTransaction:(id)arg1 forPassUniqueIdentifier:(id)arg2 paymentApplication:(id)arg3 completion:(/*^block*/id)arg4 ;
-(void)disbursementVoucherWithDisbursementSource:(unsigned long long)arg1 disbursementTarget:(unsigned long long)arg2 bundleIdentifier:(id)arg3 teamIdentifier:(id)arg4 completion:(/*^block*/id)arg5 ;
-(id)_remoteObjectProxyWithSemaphore:(id)arg1 ;
-(void)_accessDelegate:(/*^block*/id)arg1 ;
-(void)paymentDeviceDidEnterFieldWithProperties:(id)arg1 ;
-(void)paymentDeviceDidExitField;
-(void)didUpdateDefaultPaymentPassWithUniqueIdentifier:(id)arg1 ;
-(void)paymentPassWithUniqueIdentifier:(id)arg1 didReceiveMessage:(id)arg2 ;
-(void)paymentPassWithUniqueIdentifier:(id)arg1 didReceiveTransaction:(id)arg2 ;
-(void)paymentPassWithUniqueIdentifier:(id)arg1 didReceiveBalanceUpdate:(id)arg2 ;
-(void)paymentPassWithUniqueIdentifier:(id)arg1 didRemoveTransactionWithIdentifier:(id)arg2 ;
-(void)paymentPassWithUniqueIdentifier:(id)arg1 didEnableMessageService:(BOOL)arg2 ;
-(void)paymentPassWithUniqueIdentifier:(id)arg1 didEnableTransactionService:(BOOL)arg2 ;
-(void)passWithUniqueIdentifier:(id)arg1 didReceiveValueAddedServiceTransaction:(id)arg2 ;
-(void)paymentPassWithUniqueIdentifier:(id)arg1 didUpdateWithTransitPassProperties:(id)arg2 ;
-(void)paymentPassWithUniqueIdentifier:(id)arg1 didUpdateCategoryVisualizationWithStyle:(long long)arg2 ;
-(void)featureApplicationAdded:(id)arg1 ;
-(void)featureApplicationRemoved:(id)arg1 ;
-(void)featureApplicationChanged:(id)arg1 ;
-(void)didRecieveCredentialInvitation:(id)arg1 ;
-(void)paymentPassWithUniqueIdentifier:(id)arg1 didUpdateCredential:(id)arg2 ;
-(void)transactionWithIdentifier:(id)arg1 didDownloadTransactionReceipt:(id)arg2 ;
-(void)_transactionsAppLaunchTokenForPassWithUniqueIdentifier:(id)arg1 completion:(/*^block*/id)arg2 ;
-(void)_messagesAppLaunchTokenForPassWithUniqueIdentifier:(id)arg1 completion:(/*^block*/id)arg2 ;
-(void)submitVerificationCode:(id)arg1 verificationData:(id)arg2 forDPANIdentifier:(id)arg3 completion:(/*^block*/id)arg4 ;
-(void)removeMapsDataForTransactionWithIdentifier:(id)arg1 forPassUniqueIdentifier:(id)arg2 issueReportIdentifier:(id)arg3 completion:(/*^block*/id)arg4 ;
-(void)transactionsForPaymentPassWithUniqueIdentifier:(id)arg1 withTransactionSource:(unsigned long long)arg2 withBackingData:(unsigned long long)arg3 limit:(long long)arg4 completion:(/*^block*/id)arg5 ;
-(void)transactionCountByPeriodForPassWithUniqueIdentifier:(id)arg1 withTransactionSource:(unsigned long long)arg2 withBackingData:(unsigned long long)arg3 calendar:(id)arg4 unit:(unsigned long long)arg5 includePurchaseTotal:(BOOL)arg6 completion:(/*^block*/id)arg7 ;
-(void)cashbackByPeriodFromPassUniqueIdentifier:(id)arg1 withStartDate:(id)arg2 endDate:(id)arg3 calendar:(id)arg4 calendarUnit:(unsigned long long)arg5 type:(long long)arg6 completion:(/*^block*/id)arg7 ;
-(void)transactionsForPaymentPassWithUniqueIdentifier:(id)arg1 withPeerPaymentCounterpartHandle:(id)arg2 withTransactionSource:(unsigned long long)arg3 withBackingData:(unsigned long long)arg4 limit:(long long)arg5 completion:(/*^block*/id)arg6 ;
-(void)transactionsForPaymentPassWithUniqueIdentifier:(id)arg1 withMapsIdentifier:(unsigned long long)arg2 withTransactionSource:(unsigned long long)arg3 withBackingData:(unsigned long long)arg4 limit:(long long)arg5 completion:(/*^block*/id)arg6 ;
-(void)transactionsForPaymentPassWithUniqueIdentifier:(id)arg1 matchingMerchant:(id)arg2 withTransactionSource:(unsigned long long)arg3 withBackingData:(unsigned long long)arg4 limit:(long long)arg5 completion:(/*^block*/id)arg6 ;
-(void)transactionsForPaymentPassWithuniqueIdentifier:(id)arg1 withMerchantCategory:(long long)arg2 withTransactionSource:(unsigned long long)arg3 withBackingData:(unsigned long long)arg4 startDate:(id)arg5 endDate:(id)arg6 limit:(long long)arg7 completion:(/*^block*/id)arg8 ;
-(void)transactionsForPaymentPassWithUniqueIdentifier:(id)arg1 withTransactionType:(long long)arg2 withTransactionSource:(unsigned long long)arg3 withBackingData:(unsigned long long)arg4 startDate:(id)arg5 endDate:(id)arg6 limit:(long long)arg7 completion:(/*^block*/id)arg8 ;
-(void)approvedTransactionsForPassWithUniqueIdentifier:(id)arg1 withTransactionSource:(unsigned long long)arg2 withBackingData:(unsigned long long)arg3 startDate:(id)arg4 endDate:(id)arg5 limit:(long long)arg6 completion:(/*^block*/id)arg7 ;
-(void)pendingTransactionsForPassWithUniqueIdentifier:(id)arg1 withTransactionSource:(unsigned long long)arg2 withBackingData:(unsigned long long)arg3 startDate:(id)arg4 endDate:(id)arg5 limit:(long long)arg6 completion:(/*^block*/id)arg7 ;
-(void)transactionsWithTransactionSource:(unsigned long long)arg1 withBackingData:(unsigned long long)arg2 limit:(long long)arg3 completion:(/*^block*/id)arg4 ;
-(void)transactionWithTransactionIdentifier:(id)arg1 completion:(/*^block*/id)arg2 ;
-(void)transactionWithServiceIdentifier:(id)arg1 completion:(/*^block*/id)arg2 ;
-(void)transactionWithReferenceIdentifier:(id)arg1 completion:(/*^block*/id)arg2 ;
-(void)installmentTransactionsForInstallmentPlanIdentifier:(id)arg1 completion:(/*^block*/id)arg2 ;
-(void)installmentPlanTransactionsForPassUniqueIdentifier:(id)arg1 accountIdentifier:(id)arg2 withRedemptionType:(long long)arg3 startDate:(id)arg4 endDate:(id)arg5 completion:(/*^block*/id)arg6 ;
-(void)passUniqueIdentifierForTransactionWithIdentifier:(id)arg1 completion:(/*^block*/id)arg2 ;
-(void)passUniqueIdentifierForTransactionWithServiceIdentifier:(id)arg1 completion:(/*^block*/id)arg2 ;
-(void)mapsMerchantsWithCompletion:(/*^block*/id)arg1 ;
-(id)_extendedRemoteObjectProxyWithSemaphore:(id)arg1 ;
-(id)_extendedSynchronousRemoteObjectProxyWithErrorHandler:(/*^block*/id)arg1 ;
-(id)expressPassInformationForMode:(id)arg1 ;
-(id)defaultExpressTransitPassIdentifier;
-(void)setDefaultExpressTransitPassIdentifier:(id)arg1 withCredential:(id)arg2 completion:(/*^block*/id)arg3 ;
-(id)expressPassesInformationWithCardType:(long long)arg1 ;
-(void)setExpressWithPassInformation:(id)arg1 credential:(id)arg2 completion:(/*^block*/id)arg3 ;
-(void)removeExpressPassesWithCardType:(long long)arg1 completion:(/*^block*/id)arg2 ;
-(void)processTransitTransactionEventWithHistory:(id)arg1 transactionDate:(id)arg2 forPaymentApplication:(id)arg3 withPassUniqueIdentifier:(id)arg4 expressTransactionState:(id)arg5 ;
-(void)simulatePaymentPushTopic:(id)arg1 ;
-(void)scheduleDeviceCheckInWithStartTimeOffset:(double)arg1 ;
-(void)unscheduleDeviceCheckIn;
-(void)removeProductsCache;
-(void)scheduleAutomaticPresentationAvailableNotificationForPassWithUniqueIdentifier:(id)arg1 handler:(/*^block*/id)arg2 ;
-(PKFieldProperties *)paymentDeviceFieldProperties;
-(void)_defaultPaymentPassUniqueIdentifier:(/*^block*/id)arg1 ;
-(void)sharedPaymentWebServiceContextWithCompletion:(/*^block*/id)arg1 ;
-(void)requiresUpgradedPasscodeWithCompletion:(/*^block*/id)arg1 ;
-(void)featureApplicationsWithCompletion:(/*^block*/id)arg1 ;
-(void)featureApplicationWithIdentifier:(id)arg1 completion:(/*^block*/id)arg2 ;
-(void)submitApplyRequest:(id)arg1 completion:(/*^block*/id)arg2 ;
-(void)submitDocumentRequest:(id)arg1 completion:(/*^block*/id)arg2 ;
-(void)submitTermsRequest:(id)arg1 completion:(/*^block*/id)arg2 ;
-(void)submitDeleteRequest:(id)arg1 completion:(/*^block*/id)arg2 ;
-(void)submitTransactionAnswerForTransaction:(id)arg1 questionType:(unsigned long long)arg2 answer:(id)arg3 completion:(/*^block*/id)arg4 ;
-(void)transactionsRequiringReviewForAccountWithIdentifier:(id)arg1 completion:(/*^block*/id)arg2 ;
-(void)categoryVisualizationMagnitudesForPassUniqueID:(id)arg1 completion:(/*^block*/id)arg2 ;
-(void)setDeviceCheckInContextBuildVersion:(id)arg1 outstandingAction:(long long)arg2 forRegion:(id)arg3 ;
-(void)addPlaceholderPassWithConfiguration:(id)arg1 completion:(/*^block*/id)arg2 ;
-(void)registerCredentialsWithIdentifiers:(id)arg1 completion:(/*^block*/id)arg2 ;
-(void)revokeCredentialsWithIdentifiers:(id)arg1 completion:(/*^block*/id)arg2 ;
-(void)sharingInvitationWasInvalidated:(id)arg1 withCredentialIdentifier:(id)arg2 error:(id)arg3 completion:(/*^block*/id)arg4 ;
-(void)finishedKeyExchangeForCredential:(id)arg1 withCompletion:(/*^block*/id)arg2 ;
-(void)didReceiveSharingInvitationWithIdentifier:(id)arg1 fromOriginatorIDSHandle:(id)arg2 sharingSessionIdentifier:(id)arg3 metadata:(id)arg4 completion:(/*^block*/id)arg5 ;
-(void)didReceiveSharingInvitationRequest:(id)arg1 withCompletion:(/*^block*/id)arg2 ;
-(void)transactionReceiptWithUniqueID:(id)arg1 completion:(/*^block*/id)arg2 ;
-(void)transactionReceiptForTransactionWithIdentifier:(id)arg1 updateIfNecessary:(BOOL)arg2 completion:(/*^block*/id)arg3 ;
-(void)storeTransactionReceiptData:(id)arg1 completion:(/*^block*/id)arg2 ;
-(void)deleteTransactionReceiptWithUniqueID:(id)arg1 completion:(/*^block*/id)arg2 ;
-(id)_existingRemoteObjectProxy;
-(id)transactionsAppLaunchTokenForPassWithUniqueIdentifier:(id)arg1 ;
-(id)messagesAppLaunchTokenForPassWithUniqueIdentifier:(id)arg1 ;
-(void)submitVerificationCode:(id)arg1 verificationData:(id)arg2 forDPANIdentifier:(id)arg3 ;
-(void)transactionsForPaymentPassWithUniqueIdentifier:(id)arg1 withTransactionSource:(unsigned long long)arg2 withBackingData:(unsigned long long)arg3 startDate:(id)arg4 endDate:(id)arg5 limit:(long long)arg6 completion:(/*^block*/id)arg7 ;
-(void)transactionsForPaymentPassWithUniqueIdentifier:(id)arg1 withTransactionSource:(unsigned long long)arg2 withBackingData:(unsigned long long)arg3 startDate:(id)arg4 endDate:(id)arg5 orderedByDate:(long long)arg6 limit:(long long)arg7 completion:(/*^block*/id)arg8 ;
-(id)approvedTransactionsForPassWithUniqueIdentifier:(id)arg1 withTransactionSource:(unsigned long long)arg2 withBackingData:(unsigned long long)arg3 startDate:(id)arg4 endDate:(id)arg5 limit:(long long)arg6 ;
-(void)installmentPlansWithTransactionReferennceIdentifier:(id)arg1 completion:(/*^block*/id)arg2 ;
-(void)messagesForPaymentPassWithUniqueIdentifier:(id)arg1 completion:(/*^block*/id)arg2 ;
-(void)balancesForPaymentPassWithUniqueIdentifier:(id)arg1 completion:(/*^block*/id)arg2 ;
-(void)balanceReminderThresholdForBalance:(id)arg1 pass:(id)arg2 withCompletion:(/*^block*/id)arg3 ;
-(void)setBalanceReminder:(id)arg1 forBalance:(id)arg2 pass:(id)arg3 completion:(/*^block*/id)arg4 ;
-(void)commutePlanReminderForCommputePlan:(id)arg1 pass:(id)arg2 withCompletion:(/*^block*/id)arg3 ;
-(void)setCommutePlanReminder:(id)arg1 forCommutePlan:(id)arg2 pass:(id)arg3 completion:(/*^block*/id)arg4 ;
-(void)deletePaymentTransactionWithIdentifier:(id)arg1 forPassWithUniqueIdentifier:(id)arg2 ;
-(void)deleteAllTransactionsForPaymentPassWithUniqueIdentifier:(id)arg1 ;
-(void)deleteMessagesForPaymentPassWithUniqueIdentifier:(id)arg1 ;
-(void)archiveMessageWithIdentifier:(id)arg1 ;
-(void)insertOrUpdateValueAddedServiceTransaction:(id)arg1 forPassUniqueIdentifier:(id)arg2 paymentTransaction:(id)arg3 completion:(/*^block*/id)arg4 ;
-(void)valueAddedServiceTransactionsForPassWithUniqueIdentifier:(id)arg1 limit:(long long)arg2 completion:(/*^block*/id)arg3 ;
-(void)valueAddedServiceTransactionsForPaymentTransaction:(id)arg1 limit:(long long)arg2 completion:(/*^block*/id)arg3 ;
-(void)valueAddedServiceTransactionWithIdentifier:(id)arg1 completion:(/*^block*/id)arg2 ;
-(void)setDefaultPaymentApplication:(id)arg1 forPassUniqueIdentifier:(id)arg2 completion:(/*^block*/id)arg3 ;
-(id)defaultPaymentApplicationForPassUniqueIdentifier:(id)arg1 ;
-(id)defaultExpressFelicaTransitPassIdentifier;
-(void)setDefaultExpressFelicaTransitPassIdentifier:(id)arg1 withCredential:(id)arg2 completion:(/*^block*/id)arg3 ;
-(id)expressPassInformationWithPassUniqueIdentifier:(id)arg1 ;
-(id)expressPassesInformationWithAutomaticSelectionTechnologyType:(long long)arg1 ;
-(id)expressPassesInformation;
-(void)simulateDefaultExpressTransitPassIdentifier:(id)arg1 forExpressMode:(id)arg2 ;
-(void)transitStateWithPassUniqueIdentifier:(id)arg1 paymentApplication:(id)arg2 completion:(/*^block*/id)arg3 ;
-(void)simulatePaymentPush;
-(void)scheduleSetupReminders;
-(void)passbookUIServiceDidLaunch;
-(BOOL)hasPaymentDeviceFieldProperties;
-(PKExpressTransactionState *)outstandingExpressTransactionState;
-(PKPaymentWebServiceContext *)sharedPaymentWebServiceContext;
-(id)categoryVisualizationMagnitudesForPassUniqueID:(id)arg1 ;
-(void)didReceiveSharingInvitationWithIdentifier:(id)arg1 groupIdentifier:(id)arg2 metadata:(id)arg3 withCompletion:(/*^block*/id)arg4 ;
@end

