/*
                       * This header is generated by classdump-dyld 1.5
                       * on Wednesday, October 27, 2021 at 3:23:46 PM Mountain Standard Time
                       * Operating System: Version 13.5.1 (Build 17F80)
                       * Image Source: /System/Library/PrivateFrameworks/SpringBoard.framework/SpringBoard
                       * classdump-dyld is licensed under GPLv3, Copyright Â© 2013-2016 by Elias Limneos. Updated by Kevin Bradley.
                       */

#import <PrototypeTools/PTSettings.h>

@interface SBVolumeHUDSettings : PTSettings {

	BOOL _showDebugUI;
	BOOL _autoDismiss;
	BOOL _forceEUVolumeMode;
	BOOL _rampTickHapticIntensity;
	BOOL _shouldRouteChangeResultInPresentingVolumeHUD;
	float _EUVolumeLimit;
	float _volumeStepDelta;
	float _minimumTickHapticIntensity;
	float _maximumTickHapticIntensity;
	double _minMaxXScaleSpringRetargetImpulse;
	double _minMaxXScaleSpringDampingRatio;
	double _minMaxXScaleSpringResponse;
	double _minMaxXScaleSpringVolumeToMax;
	double _minMaxXScaleSpringVolumeToMin;
	double _minMaxYScaleSpringRetargetImpulse;
	double _minMaxYScaleSpringDampingRatio;
	double _minMaxYScaleSpringResponse;
	double _minMaxYScaleSpringVolumeToMax;
	double _minMaxYScaleSpringVolumeToMin;
	double _deflatorTargetDownScale;
	double _deflatorTargetCompleteDownScale;
	double _deflatorTargetFudgeFactor;
	double _deflatorTargetCompleteImpulse;
	double _positionXSpringRetargetImpulse;
	double _positionXSpringDampingRatio;
	double _positionXSpringResponse;
	double _positionXSpringResponseBeginDeflator;
	double _positionXSpringResponseFinishDeflate;
	double _positionYSpringRetargetImpulse;
	double _positionYSpringDampingRatio;
	double _positionYSpringResponse;
	double _scaleSpringRetargetImpulse;
	double _scaleSpringDampingRatio;
	double _scaleSpringResponse;
	double _scaleSpringResponseBeginDeflator;
	double _scaleSpringResponseFinishDeflate;
	double _scaleSpringBase;
	double _scaleSpringTracking;
	double _dimmingAlpha;
	double _dismissalInterval;
	double _legibilityStrength;
	double _labelMargin;
	double _onscreenTopMargin;
	double _onscreenLeadingMargin;
	double _offscreenTopMargin;
	double _offscreenLeadingMargin;
	double _landscapeScaleSpringVolumeDownInput;
	double _landscapeScaleSpringVolumeUpInput;
	double _portraitScaleSpringVolumeDownInput;
	double _portraitScaleSpringVolumeUpInput;
	double _landscapeState1CornerRadius;
	double _landscapeState2CornerRadius;
	double _landscapeState3CornerRadius;
	double _landscapeStateBaseCornerRadius;
	double _portraitState1CornerRadius;
	double _portraitState2CornerRadius;
	double _portraitState3CornerRadius;
	double _portraitStateBaseCornerRadius;
	double _landscapeState1Width;
	double _landscapeState2Width;
	double _landscapeState3Width;
	double _landscapeState1Height;
	double _landscapeState2Height;
	double _landscapeState3Height;
	double _portraitState1Width;
	double _portraitState2Width;
	double _portraitState3Width;
	double _portraitState1Height;
	double _portraitState2Height;
	double _portraitState3Height;
	double _volumeButtonsCenterY;

}

@property (assign,nonatomic) double minMaxXScaleSpringRetargetImpulse;                       //@synthesize minMaxXScaleSpringRetargetImpulse=_minMaxXScaleSpringRetargetImpulse - In the implementation block
@property (assign,nonatomic) double minMaxXScaleSpringDampingRatio;                          //@synthesize minMaxXScaleSpringDampingRatio=_minMaxXScaleSpringDampingRatio - In the implementation block
@property (assign,nonatomic) double minMaxXScaleSpringResponse;                              //@synthesize minMaxXScaleSpringResponse=_minMaxXScaleSpringResponse - In the implementation block
@property (assign,nonatomic) double minMaxXScaleSpringVolumeToMax;                           //@synthesize minMaxXScaleSpringVolumeToMax=_minMaxXScaleSpringVolumeToMax - In the implementation block
@property (assign,nonatomic) double minMaxXScaleSpringVolumeToMin;                           //@synthesize minMaxXScaleSpringVolumeToMin=_minMaxXScaleSpringVolumeToMin - In the implementation block
@property (assign,nonatomic) double minMaxYScaleSpringRetargetImpulse;                       //@synthesize minMaxYScaleSpringRetargetImpulse=_minMaxYScaleSpringRetargetImpulse - In the implementation block
@property (assign,nonatomic) double minMaxYScaleSpringDampingRatio;                          //@synthesize minMaxYScaleSpringDampingRatio=_minMaxYScaleSpringDampingRatio - In the implementation block
@property (assign,nonatomic) double minMaxYScaleSpringResponse;                              //@synthesize minMaxYScaleSpringResponse=_minMaxYScaleSpringResponse - In the implementation block
@property (assign,nonatomic) double minMaxYScaleSpringVolumeToMax;                           //@synthesize minMaxYScaleSpringVolumeToMax=_minMaxYScaleSpringVolumeToMax - In the implementation block
@property (assign,nonatomic) double minMaxYScaleSpringVolumeToMin;                           //@synthesize minMaxYScaleSpringVolumeToMin=_minMaxYScaleSpringVolumeToMin - In the implementation block
@property (assign,nonatomic) double deflatorTargetDownScale;                                 //@synthesize deflatorTargetDownScale=_deflatorTargetDownScale - In the implementation block
@property (assign,nonatomic) double deflatorTargetCompleteDownScale;                         //@synthesize deflatorTargetCompleteDownScale=_deflatorTargetCompleteDownScale - In the implementation block
@property (assign,nonatomic) double deflatorTargetFudgeFactor;                               //@synthesize deflatorTargetFudgeFactor=_deflatorTargetFudgeFactor - In the implementation block
@property (assign,nonatomic) double deflatorTargetCompleteImpulse;                           //@synthesize deflatorTargetCompleteImpulse=_deflatorTargetCompleteImpulse - In the implementation block
@property (assign,nonatomic) double positionXSpringRetargetImpulse;                          //@synthesize positionXSpringRetargetImpulse=_positionXSpringRetargetImpulse - In the implementation block
@property (assign,nonatomic) double positionXSpringDampingRatio;                             //@synthesize positionXSpringDampingRatio=_positionXSpringDampingRatio - In the implementation block
@property (assign,nonatomic) double positionXSpringResponse;                                 //@synthesize positionXSpringResponse=_positionXSpringResponse - In the implementation block
@property (assign,nonatomic) double positionXSpringResponseBeginDeflator;                    //@synthesize positionXSpringResponseBeginDeflator=_positionXSpringResponseBeginDeflator - In the implementation block
@property (assign,nonatomic) double positionXSpringResponseFinishDeflate;                    //@synthesize positionXSpringResponseFinishDeflate=_positionXSpringResponseFinishDeflate - In the implementation block
@property (assign,nonatomic) double positionYSpringRetargetImpulse;                          //@synthesize positionYSpringRetargetImpulse=_positionYSpringRetargetImpulse - In the implementation block
@property (assign,nonatomic) double positionYSpringDampingRatio;                             //@synthesize positionYSpringDampingRatio=_positionYSpringDampingRatio - In the implementation block
@property (assign,nonatomic) double positionYSpringResponse;                                 //@synthesize positionYSpringResponse=_positionYSpringResponse - In the implementation block
@property (assign,nonatomic) double scaleSpringRetargetImpulse;                              //@synthesize scaleSpringRetargetImpulse=_scaleSpringRetargetImpulse - In the implementation block
@property (assign,nonatomic) double scaleSpringDampingRatio;                                 //@synthesize scaleSpringDampingRatio=_scaleSpringDampingRatio - In the implementation block
@property (assign,nonatomic) double scaleSpringResponse;                                     //@synthesize scaleSpringResponse=_scaleSpringResponse - In the implementation block
@property (assign,nonatomic) double scaleSpringResponseBeginDeflator;                        //@synthesize scaleSpringResponseBeginDeflator=_scaleSpringResponseBeginDeflator - In the implementation block
@property (assign,nonatomic) double scaleSpringResponseFinishDeflate;                        //@synthesize scaleSpringResponseFinishDeflate=_scaleSpringResponseFinishDeflate - In the implementation block
@property (assign,nonatomic) double scaleSpringBase;                                         //@synthesize scaleSpringBase=_scaleSpringBase - In the implementation block
@property (assign,nonatomic) double scaleSpringTracking;                                     //@synthesize scaleSpringTracking=_scaleSpringTracking - In the implementation block
@property (assign,nonatomic) double dimmingAlpha;                                            //@synthesize dimmingAlpha=_dimmingAlpha - In the implementation block
@property (assign,nonatomic) double dismissalInterval;                                       //@synthesize dismissalInterval=_dismissalInterval - In the implementation block
@property (assign,nonatomic) double legibilityStrength;                                      //@synthesize legibilityStrength=_legibilityStrength - In the implementation block
@property (assign,nonatomic) double labelMargin;                                             //@synthesize labelMargin=_labelMargin - In the implementation block
@property (assign,nonatomic) double onscreenTopMargin;                                       //@synthesize onscreenTopMargin=_onscreenTopMargin - In the implementation block
@property (assign,nonatomic) double onscreenLeadingMargin;                                   //@synthesize onscreenLeadingMargin=_onscreenLeadingMargin - In the implementation block
@property (assign,nonatomic) double offscreenTopMargin;                                      //@synthesize offscreenTopMargin=_offscreenTopMargin - In the implementation block
@property (assign,nonatomic) double offscreenLeadingMargin;                                  //@synthesize offscreenLeadingMargin=_offscreenLeadingMargin - In the implementation block
@property (assign,nonatomic) double landscapeScaleSpringVolumeDownInput;                     //@synthesize landscapeScaleSpringVolumeDownInput=_landscapeScaleSpringVolumeDownInput - In the implementation block
@property (assign,nonatomic) double landscapeScaleSpringVolumeUpInput;                       //@synthesize landscapeScaleSpringVolumeUpInput=_landscapeScaleSpringVolumeUpInput - In the implementation block
@property (assign,nonatomic) double portraitScaleSpringVolumeDownInput;                      //@synthesize portraitScaleSpringVolumeDownInput=_portraitScaleSpringVolumeDownInput - In the implementation block
@property (assign,nonatomic) double portraitScaleSpringVolumeUpInput;                        //@synthesize portraitScaleSpringVolumeUpInput=_portraitScaleSpringVolumeUpInput - In the implementation block
@property (assign,nonatomic) double landscapeState1CornerRadius;                             //@synthesize landscapeState1CornerRadius=_landscapeState1CornerRadius - In the implementation block
@property (assign,nonatomic) double landscapeState2CornerRadius;                             //@synthesize landscapeState2CornerRadius=_landscapeState2CornerRadius - In the implementation block
@property (assign,nonatomic) double landscapeState3CornerRadius;                             //@synthesize landscapeState3CornerRadius=_landscapeState3CornerRadius - In the implementation block
@property (assign,nonatomic) double landscapeStateBaseCornerRadius;                          //@synthesize landscapeStateBaseCornerRadius=_landscapeStateBaseCornerRadius - In the implementation block
@property (assign,nonatomic) double portraitState1CornerRadius;                              //@synthesize portraitState1CornerRadius=_portraitState1CornerRadius - In the implementation block
@property (assign,nonatomic) double portraitState2CornerRadius;                              //@synthesize portraitState2CornerRadius=_portraitState2CornerRadius - In the implementation block
@property (assign,nonatomic) double portraitState3CornerRadius;                              //@synthesize portraitState3CornerRadius=_portraitState3CornerRadius - In the implementation block
@property (assign,nonatomic) double portraitStateBaseCornerRadius;                           //@synthesize portraitStateBaseCornerRadius=_portraitStateBaseCornerRadius - In the implementation block
@property (assign,nonatomic) double landscapeState1Width;                                    //@synthesize landscapeState1Width=_landscapeState1Width - In the implementation block
@property (assign,nonatomic) double landscapeState2Width;                                    //@synthesize landscapeState2Width=_landscapeState2Width - In the implementation block
@property (assign,nonatomic) double landscapeState3Width;                                    //@synthesize landscapeState3Width=_landscapeState3Width - In the implementation block
@property (assign,nonatomic) double landscapeState1Height;                                   //@synthesize landscapeState1Height=_landscapeState1Height - In the implementation block
@property (assign,nonatomic) double landscapeState2Height;                                   //@synthesize landscapeState2Height=_landscapeState2Height - In the implementation block
@property (assign,nonatomic) double landscapeState3Height;                                   //@synthesize landscapeState3Height=_landscapeState3Height - In the implementation block
@property (assign,nonatomic) double portraitState1Width;                                     //@synthesize portraitState1Width=_portraitState1Width - In the implementation block
@property (assign,nonatomic) double portraitState2Width;                                     //@synthesize portraitState2Width=_portraitState2Width - In the implementation block
@property (assign,nonatomic) double portraitState3Width;                                     //@synthesize portraitState3Width=_portraitState3Width - In the implementation block
@property (assign,nonatomic) double portraitState1Height;                                    //@synthesize portraitState1Height=_portraitState1Height - In the implementation block
@property (assign,nonatomic) double portraitState2Height;                                    //@synthesize portraitState2Height=_portraitState2Height - In the implementation block
@property (assign,nonatomic) double portraitState3Height;                                    //@synthesize portraitState3Height=_portraitState3Height - In the implementation block
@property (assign,nonatomic) double volumeButtonsCenterY;                                    //@synthesize volumeButtonsCenterY=_volumeButtonsCenterY - In the implementation block
@property (assign,nonatomic) BOOL showDebugUI;                                               //@synthesize showDebugUI=_showDebugUI - In the implementation block
@property (assign,nonatomic) BOOL autoDismiss;                                               //@synthesize autoDismiss=_autoDismiss - In the implementation block
@property (assign,nonatomic) BOOL forceEUVolumeMode;                                         //@synthesize forceEUVolumeMode=_forceEUVolumeMode - In the implementation block
@property (assign,nonatomic) float EUVolumeLimit;                                            //@synthesize EUVolumeLimit=_EUVolumeLimit - In the implementation block
@property (assign,nonatomic) float volumeStepDelta;                                          //@synthesize volumeStepDelta=_volumeStepDelta - In the implementation block
@property (assign,nonatomic) BOOL rampTickHapticIntensity;                                   //@synthesize rampTickHapticIntensity=_rampTickHapticIntensity - In the implementation block
@property (assign,nonatomic) float minimumTickHapticIntensity;                               //@synthesize minimumTickHapticIntensity=_minimumTickHapticIntensity - In the implementation block
@property (assign,nonatomic) float maximumTickHapticIntensity;                               //@synthesize maximumTickHapticIntensity=_maximumTickHapticIntensity - In the implementation block
@property (assign,nonatomic) BOOL shouldRouteChangeResultInPresentingVolumeHUD;              //@synthesize shouldRouteChangeResultInPresentingVolumeHUD=_shouldRouteChangeResultInPresentingVolumeHUD - In the implementation block
+(id)settingsControllerModule;
-(void)setDefaultValues;
-(double)legibilityStrength;
-(float)EUVolumeLimit;
-(double)labelMargin;
-(void)setEUVolumeLimit:(float)arg1 ;
-(double)dimmingAlpha;
-(void)setDimmingAlpha:(double)arg1 ;
-(BOOL)forceEUVolumeMode;
-(float)volumeStepDelta;
-(BOOL)shouldRouteChangeResultInPresentingVolumeHUD;
-(BOOL)showDebugUI;
-(double)scaleSpringTracking;
-(float)minimumTickHapticIntensity;
-(BOOL)rampTickHapticIntensity;
-(float)maximumTickHapticIntensity;
-(double)deflatorTargetDownScale;
-(double)scaleSpringDampingRatio;
-(double)scaleSpringResponseBeginDeflator;
-(double)positionXSpringDampingRatio;
-(double)positionXSpringResponseBeginDeflator;
-(double)scaleSpringResponseFinishDeflate;
-(double)positionXSpringResponseFinishDeflate;
-(double)deflatorTargetCompleteImpulse;
-(double)deflatorTargetCompleteDownScale;
-(double)dismissalInterval;
-(BOOL)autoDismiss;
-(double)minMaxXScaleSpringVolumeToMax;
-(double)minMaxYScaleSpringVolumeToMax;
-(double)minMaxXScaleSpringVolumeToMin;
-(double)minMaxYScaleSpringVolumeToMin;
-(double)portraitScaleSpringVolumeUpInput;
-(double)landscapeScaleSpringVolumeUpInput;
-(double)portraitScaleSpringVolumeDownInput;
-(double)landscapeScaleSpringVolumeDownInput;
-(double)positionYSpringDampingRatio;
-(double)positionYSpringResponse;
-(double)positionYSpringRetargetImpulse;
-(double)positionXSpringResponse;
-(double)positionXSpringRetargetImpulse;
-(double)scaleSpringResponse;
-(double)scaleSpringRetargetImpulse;
-(double)minMaxXScaleSpringDampingRatio;
-(double)minMaxXScaleSpringResponse;
-(double)minMaxXScaleSpringRetargetImpulse;
-(double)minMaxYScaleSpringDampingRatio;
-(double)minMaxYScaleSpringResponse;
-(double)minMaxYScaleSpringRetargetImpulse;
-(double)deflatorTargetFudgeFactor;
-(void)setAutoDismiss:(BOOL)arg1 ;
-(void)setPortraitState1Height:(double)arg1 ;
-(void)setLandscapeState1Height:(double)arg1 ;
-(void)setPortraitState2Height:(double)arg1 ;
-(void)setLandscapeState2Height:(double)arg1 ;
-(void)setPortraitState3Height:(double)arg1 ;
-(void)setLandscapeState3Height:(double)arg1 ;
-(void)setPortraitState1Width:(double)arg1 ;
-(void)setLandscapeState1Width:(double)arg1 ;
-(void)setPortraitState2Width:(double)arg1 ;
-(void)setLandscapeState2Width:(double)arg1 ;
-(void)setPortraitState3Width:(double)arg1 ;
-(void)setLandscapeState3Width:(double)arg1 ;
-(void)setVolumeButtonsCenterY:(double)arg1 ;
-(double)landscapeState1Width;
-(double)landscapeState1Height;
-(double)landscapeState2Width;
-(double)landscapeState2Height;
-(double)landscapeState3Width;
-(double)landscapeState3Height;
-(double)portraitState1Width;
-(double)portraitState1Height;
-(double)portraitState2Width;
-(double)portraitState2Height;
-(double)portraitState3Width;
-(double)portraitState3Height;
-(double)offscreenTopMargin;
-(double)onscreenTopMargin;
-(double)offscreenLeadingMargin;
-(double)onscreenLeadingMargin;
-(double)volumeButtonsCenterY;
-(double)scaleSpringBase;
-(double)landscapeStateBaseCornerRadius;
-(double)landscapeState1CornerRadius;
-(double)landscapeState2CornerRadius;
-(double)landscapeState3CornerRadius;
-(double)portraitStateBaseCornerRadius;
-(double)portraitState1CornerRadius;
-(double)portraitState2CornerRadius;
-(double)portraitState3CornerRadius;
-(void)setMinMaxXScaleSpringVolumeToMax:(double)arg1 ;
-(void)setMinMaxXScaleSpringVolumeToMin:(double)arg1 ;
-(void)setMinMaxXScaleSpringRetargetImpulse:(double)arg1 ;
-(void)setMinMaxXScaleSpringDampingRatio:(double)arg1 ;
-(void)setMinMaxXScaleSpringResponse:(double)arg1 ;
-(void)setMinMaxYScaleSpringVolumeToMax:(double)arg1 ;
-(void)setMinMaxYScaleSpringVolumeToMin:(double)arg1 ;
-(void)setMinMaxYScaleSpringRetargetImpulse:(double)arg1 ;
-(void)setMinMaxYScaleSpringDampingRatio:(double)arg1 ;
-(void)setMinMaxYScaleSpringResponse:(double)arg1 ;
-(void)setPositionXSpringRetargetImpulse:(double)arg1 ;
-(void)setPositionXSpringDampingRatio:(double)arg1 ;
-(void)setPositionXSpringResponse:(double)arg1 ;
-(void)setPositionYSpringRetargetImpulse:(double)arg1 ;
-(void)setPositionYSpringDampingRatio:(double)arg1 ;
-(void)setPositionYSpringResponse:(double)arg1 ;
-(void)setScaleSpringRetargetImpulse:(double)arg1 ;
-(void)setScaleSpringDampingRatio:(double)arg1 ;
-(void)setScaleSpringResponse:(double)arg1 ;
-(void)setScaleSpringBase:(double)arg1 ;
-(void)setScaleSpringTracking:(double)arg1 ;
-(void)setPositionXSpringResponseBeginDeflator:(double)arg1 ;
-(void)setPositionXSpringResponseFinishDeflate:(double)arg1 ;
-(void)setScaleSpringResponseBeginDeflator:(double)arg1 ;
-(void)setScaleSpringResponseFinishDeflate:(double)arg1 ;
-(void)setDeflatorTargetDownScale:(double)arg1 ;
-(void)setDeflatorTargetCompleteDownScale:(double)arg1 ;
-(void)setDeflatorTargetFudgeFactor:(double)arg1 ;
-(void)setDeflatorTargetCompleteImpulse:(double)arg1 ;
-(void)setDismissalInterval:(double)arg1 ;
-(void)setLegibilityStrength:(double)arg1 ;
-(void)setLabelMargin:(double)arg1 ;
-(void)setShowDebugUI:(BOOL)arg1 ;
-(void)setOnscreenTopMargin:(double)arg1 ;
-(void)setOnscreenLeadingMargin:(double)arg1 ;
-(void)setOffscreenTopMargin:(double)arg1 ;
-(void)setOffscreenLeadingMargin:(double)arg1 ;
-(void)setLandscapeScaleSpringVolumeDownInput:(double)arg1 ;
-(void)setLandscapeScaleSpringVolumeUpInput:(double)arg1 ;
-(void)setPortraitScaleSpringVolumeDownInput:(double)arg1 ;
-(void)setPortraitScaleSpringVolumeUpInput:(double)arg1 ;
-(void)setLandscapeState1CornerRadius:(double)arg1 ;
-(void)setLandscapeState2CornerRadius:(double)arg1 ;
-(void)setLandscapeState3CornerRadius:(double)arg1 ;
-(void)setLandscapeStateBaseCornerRadius:(double)arg1 ;
-(void)setPortraitState1CornerRadius:(double)arg1 ;
-(void)setPortraitState2CornerRadius:(double)arg1 ;
-(void)setPortraitState3CornerRadius:(double)arg1 ;
-(void)setPortraitStateBaseCornerRadius:(double)arg1 ;
-(void)setForceEUVolumeMode:(BOOL)arg1 ;
-(void)setVolumeStepDelta:(float)arg1 ;
-(void)setRampTickHapticIntensity:(BOOL)arg1 ;
-(void)setMinimumTickHapticIntensity:(float)arg1 ;
-(void)setMaximumTickHapticIntensity:(float)arg1 ;
-(void)setShouldRouteChangeResultInPresentingVolumeHUD:(BOOL)arg1 ;
@end

