//
//     Generated by classdumpios 1.0.1 (64 bit) (iOS port by DreamDevLost)(Debug version compiled Sep 26 2020 13:48:20).
//
//  Copyright (C) 1997-2019 Steve Nygard.
//

#pragma mark Blocks

typedef void (^CDUnknownBlockType)(void); // return type and parameters are unknown

#pragma mark Named Structures

struct Decoder {
    struct KeyTable {
        CDUnknownFunctionPointerType *_field1;
        struct unique_ptr<apnspack::Queue::EvictionPolicy, std::__1::default_delete<apnspack::Queue::EvictionPolicy>> _field2;
        struct GlobalMetrics *_field3;
        struct deque<std::__1::vector<unsigned char, std::__1::allocator<unsigned char>>, std::__1::allocator<std::__1::vector<unsigned char, std::__1::allocator<unsigned char>>>> _field4;
    } _field1;
    struct ValueTable {
        CDUnknownFunctionPointerType *_field1;
        struct unique_ptr<apnspack::Queue::EvictionPolicy, std::__1::default_delete<apnspack::Queue::EvictionPolicy>> _field2;
        struct GlobalMetrics *_field3;
        struct deque<std::__1::vector<unsigned char, std::__1::allocator<unsigned char>>, std::__1::allocator<std::__1::vector<unsigned char, std::__1::allocator<unsigned char>>>> _field4;
    } _field2;
    struct Metrics _field3;
    unsigned long long _field4;
    unsigned long long _field5;
    int _field6;
    struct basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>> _field7;
    void *_field8;
};

struct Encoder {
    struct KeyTable {
        CDUnknownFunctionPointerType *_field1;
        struct unique_ptr<apnspack::Queue::EvictionPolicy, std::__1::default_delete<apnspack::Queue::EvictionPolicy>> _field2;
        struct GlobalMetrics *_field3;
        struct Entry _field4;
        struct Entry *_field5[17];
        unsigned long long _field6;
    } _field1;
    struct ValueTable {
        CDUnknownFunctionPointerType *_field1;
        struct unique_ptr<apnspack::Queue::EvictionPolicy, std::__1::default_delete<apnspack::Queue::EvictionPolicy>> _field2;
        struct GlobalMetrics *_field3;
        struct Entry _field4;
        struct Entry *_field5[17];
        unsigned long long _field6;
    } _field2;
    struct Metrics _field3;
    unsigned long long _field4;
    unsigned long long _field5;
    int _field6;
    struct basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>> _field7;
    void *_field8;
};

struct Entry {
    struct vector<unsigned char, std::__1::allocator<unsigned char>> _field1;
    unsigned int _field2;
    unsigned int _field3;
    struct Entry *_field4;
    struct Entry *_field5;
    struct Entry *_field6;
};

struct EvictionPolicy;

struct FrameBuilder {
    struct Encoder *_field1;
    unsigned char _field2;
    struct vector<unsigned char, std::__1::allocator<unsigned char>> _field3;
    unsigned long long _field4;
};

struct GlobalMetrics;

struct Metrics {
    unsigned long long _field1;
    unsigned long long _field2;
    unsigned long long _field3;
};

struct basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>> {
    struct __compressed_pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char>>::__rep, std::__1::allocator<char>> {
        struct __rep {
            union {
                struct __long {
                    char *_field1;
                    unsigned long long _field2;
                    unsigned long long _field3;
                } _field1;
                struct __short {
                    char _field1[23];
                    struct {
                        unsigned char _field1;
                    } _field2;
                } _field2;
                struct __raw {
                    unsigned long long _field1[3];
                } _field3;
            } _field1;
        } _field1;
    } _field1;
};

struct deque<std::__1::vector<unsigned char, std::__1::allocator<unsigned char>>, std::__1::allocator<std::__1::vector<unsigned char, std::__1::allocator<unsigned char>>>> {
    struct __split_buffer<std::__1::vector<unsigned char, std::__1::allocator<unsigned char>>*, std::__1::allocator<std::__1::vector<unsigned char, std::__1::allocator<unsigned char>>*>> {
        struct vector<unsigned char, std::__1::allocator<unsigned char>> **_field1;
        struct vector<unsigned char, std::__1::allocator<unsigned char>> **_field2;
        struct vector<unsigned char, std::__1::allocator<unsigned char>> **_field3;
        struct __compressed_pair<std::__1::vector<unsigned char, std::__1::allocator<unsigned char>>**, std::__1::allocator<std::__1::vector<unsigned char, std::__1::allocator<unsigned char>>*>> {
            struct vector<unsigned char, std::__1::allocator<unsigned char>> **_field1;
        } _field4;
    } _field1;
    unsigned long long _field2;
    struct __compressed_pair<unsigned long, std::__1::allocator<std::__1::vector<unsigned char, std::__1::allocator<unsigned char>>>> {
        unsigned long long _field1;
    } _field3;
};

struct sockaddr {
    unsigned char _field1;
    unsigned char _field2;
    char _field3[14];
};

struct unique_ptr<apnspack::Queue::EvictionPolicy, std::__1::default_delete<apnspack::Queue::EvictionPolicy>> {
    struct __compressed_pair<apnspack::Queue::EvictionPolicy *, std::__1::default_delete<apnspack::Queue::EvictionPolicy>> {
        struct EvictionPolicy *_field1;
    } _field1;
};

struct vector<unsigned char, std::__1::allocator<unsigned char>> {
    char *_field1;
    char *_field2;
    struct __compressed_pair<unsigned char *, std::__1::allocator<unsigned char>> {
        char *_field1;
    } _field3;
};

