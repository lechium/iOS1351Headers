//
//     Generated by classdumpios 1.0.1 (64 bit) (iOS port by DreamDevLost)(Debug version compiled Sep 26 2020 13:48:20).
//
//  Copyright (C) 1997-2019 Steve Nygard.
//

#import <objc/NSObject.h>

#import "APSAppLaunchStatsDelegate-Protocol.h"
#import "APSConnectionServerDelegate-Protocol.h"
#import "APSCourierConnectionDelegate-Protocol.h"
#import "APSNetworkMonitorDelegate-Protocol.h"
#import "APSOutgoingMessageQueueDelegate-Protocol.h"
#import "APSProxyMasterDelegate-Protocol.h"
#import "APSProxySlaveDelegate-Protocol.h"
#import "APSSystemMonitorListener-Protocol.h"
#import "APSTTLCollectionDelegate-Protocol.h"
#import "APSTopicManagerDelegate-Protocol.h"
#import "PCCarrierBundleHelperDelegate-Protocol.h"
#import "PCInterfaceMonitorDelegate-Protocol.h"

@class APSConnectionHistory, APSCourierConnection, APSEnvironment, APSNetworkMonitor, APSOutgoingMessageQueue, APSOutgoingQueue, APSProxyMaster, APSProxySlave, APSPushHistory, APSRateLimiter, APSSymptomReporter, APSTTLCollection, APSTopicManager, CUTPowerAssertion, CUTWeakReference, NSCountedSet, NSData, NSDate, NSMutableArray, NSMutableDictionary, NSMutableSet, NSNumber, NSString, NSTimer, PCPersistentTimer;
@protocol APSCourierDelegate;

@interface APSCourier : NSObject <PCCarrierBundleHelperDelegate, APSTTLCollectionDelegate, APSTopicManagerDelegate, APSNetworkMonitorDelegate, APSCourierConnectionDelegate, APSConnectionServerDelegate, APSOutgoingMessageQueueDelegate, APSSystemMonitorListener, PCInterfaceMonitorDelegate, APSAppLaunchStatsDelegate, APSProxyMasterDelegate, APSProxySlaveDelegate>
{
    id <APSCourierDelegate> _delegate;	// 8 = 0x8
    APSEnvironment *_environment;	// 16 = 0x10
    NSMutableArray *_connections;	// 24 = 0x18
    unsigned long long _presenceMessageState[2];	// 32 = 0x20
    CUTPowerAssertion *_delayedKeepAlivePowerAssertion;	// 48 = 0x30
    NSMutableDictionary *_connectionPortNamesToConnections;	// 56 = 0x38
    NSMutableDictionary *_hashesToEnabledTopics;	// 64 = 0x40
    NSMutableDictionary *_hashesToIgnoredTopics;	// 72 = 0x48
    NSMutableDictionary *_hashesToOpportunisticTopics;	// 80 = 0x50
    APSTopicManager *_topicManagers[2];	// 88 = 0x58
    PCPersistentTimer *_criticalReliabilityTimer;	// 104 = 0x68
    void *_criticalReliabilityPowerAssertion;	// 112 = 0x70
    PCPersistentTimer *_pendingMessageReconnectTimer;	// 120 = 0x78
    PCPersistentTimer *_delayedReconnectTimer;	// 128 = 0x80
    PCPersistentTimer *_delayedSuspendKeepAliveTimer;	// 136 = 0x88
    APSNetworkMonitor *_networkMonitor;	// 144 = 0x90
    int _lastPushRAT;	// 152 = 0x98
    int _lastPushLQ;	// 156 = 0x9c
    _Bool _secureHandshakeEnabled[2];	// 160 = 0xa0
    NSNumber *_serverMaxKeepAliveInterval;	// 168 = 0xa8
    NSNumber *_serverExpectedKeepAliveInterval;	// 176 = 0xb0
    NSNumber *_serverMinKeepAliveInterval;	// 184 = 0xb8
    struct __SecIdentity *_clientIdentity;	// 192 = 0xc0
    NSMutableDictionary *_proxySlaves;	// 200 = 0xc8
    APSProxySlave *_proxySlaveWithOutstandingPresence;	// 208 = 0xd0
    APSProxyMaster *_proxyMaster;	// 216 = 0xd8
    APSPushHistory *_pushHistory;	// 224 = 0xe0
    APSCourierConnection *_courierConnection;	// 232 = 0xe8
    NSData *_cachedPublicToken;	// 240 = 0xf0
    NSData *_cachedUserPublicToken;	// 248 = 0xf8
    _Bool _shouldUseInternet;	// 256 = 0x100
    _Bool _shouldRun;	// 257 = 0x101
    _Bool _enabled;	// 258 = 0x102
    _Bool _enableCriticalReliability;	// 259 = 0x103
    NSTimer *_criticalFlushTimer;	// 264 = 0x108
    _Bool _isConnectedToService;	// 272 = 0x110
    unsigned long long _consecutiveConnectionFailureCount;	// 280 = 0x118
    unsigned long long _consecutiveTLSConnectionFailureCount;	// 288 = 0x120
    NSCountedSet *_consecutiveConnectionFailureReason[2];	// 296 = 0x128
    NSNumber *_tcpHandshakeTimeMilliseconds[2];	// 312 = 0x138
    NSNumber *_dnsResolutionTimeMilliseconds[2];	// 328 = 0x148
    NSNumber *_tlsHandshakeTimeMilliseconds[2];	// 344 = 0x158
    NSDate *_lastConnectionAttempt;	// 360 = 0x168
    double _lastClientRequestedKeepaliveTime;	// 368 = 0x170
    double _lastLateCriticalOutgoingMessageAcknowledgmentReconnectTime;	// 376 = 0x178
    NSNumber *_serverTimeBase;	// 384 = 0x180
    NSString *_latestGeoRegion;	// 392 = 0x188
    double _keepAliveV2TimeDriftMaximum;	// 400 = 0x190
    double _lastIPCachingTTLSeconds;	// 408 = 0x198
    unsigned long long _lastIPCachingPercentage;	// 416 = 0x1a0
    NSDate *_lastPresence;	// 424 = 0x1a8
    NSData *_certificate;	// 432 = 0x1b0
    NSData *_nonce;	// 440 = 0x1b8
    NSData *_signature;	// 448 = 0x1c0
    APSOutgoingMessageQueue *_outgoingMessageQueue;	// 456 = 0x1c8
    APSOutgoingQueue *_tokenRequestQueue;	// 464 = 0x1d0
    double _slowReceiveThreshold;	// 472 = 0x1d8
    _Bool _remainsConnectedWhenWWANSuspends;	// 480 = 0x1e0
    double _delayedReconnectIntervalWatchWiFi;	// 488 = 0x1e8
    double _delayedReconnectInterval;	// 496 = 0x1f0
    double _delayedReconnectMaxInterval;	// 504 = 0x1f8
    double _delayedReconnectTLSInterval;	// 512 = 0x200
    long long _delayedReconnectMinIntervalTrigger;	// 520 = 0x208
    long long _delayedReconnectMaxIntervalTrigger;	// 528 = 0x210
    long long _delayedReconnectTLSIntervalTrigger;	// 536 = 0x218
    APSConnectionHistory *_connectionHistory;	// 544 = 0x220
    APSSymptomReporter *_symptomReporter;	// 552 = 0x228
    NSMutableSet *_activeTaskServers;	// 560 = 0x230
    unsigned long long _nextTaskMessageId;	// 568 = 0x238
    CUTWeakReference *_weakSelf;	// 576 = 0x240
    APSTTLCollection *_tracingEnabledAcksCollection;	// 584 = 0x248
    APSRateLimiter *_suspendToggleHourlyLimiter;	// 592 = 0x250
    APSRateLimiter *_suspendToggleDailyLimiter;	// 600 = 0x258
    long long _suspendToggleHourlyLimit;	// 608 = 0x260
    long long _suspendToggleDailyLimit;	// 616 = 0x268
    double _delayedSuspendKeepAliveInterval;	// 624 = 0x270
    _Bool _pendingPostSuspensionWWANFlush;	// 632 = 0x278
    unsigned long long _cmaType;	// 640 = 0x280
}

+ (void)_postClientIdentityUpdatedNotification;	// IMP=0x0000000100029af8
- (void).cxx_destruct;	// IMP=0x000000010003c188
@property(nonatomic) unsigned long long cmaType; // @synthesize cmaType=_cmaType;
@property(retain, nonatomic) APSCourierConnection *courierConnection; // @synthesize courierConnection=_courierConnection;
@property(readonly, copy, nonatomic) NSString *latestGeoRegion; // @synthesize latestGeoRegion=_latestGeoRegion;
@property(retain, nonatomic) NSDate *lastPresence; // @synthesize lastPresence=_lastPresence;
@property(copy, nonatomic) NSData *signature; // @synthesize signature=_signature;
@property(copy, nonatomic) NSData *nonce; // @synthesize nonce=_nonce;
@property(copy, nonatomic) NSData *certificate; // @synthesize certificate=_certificate;
@property(readonly, retain, nonatomic) APSEnvironment *environment; // @synthesize environment=_environment;
@property(nonatomic) _Bool isConnectedToService; // @synthesize isConnectedToService=_isConnectedToService;
- (unsigned long long)getNextTaskMessageId;	// IMP=0x000000010003c0e4
- (void)removeTaskServer:(id)arg1;	// IMP=0x000000010003c0d4
- (void)addTaskServer:(id)arg1;	// IMP=0x000000010003c0c4
- (void)sendTaskControlMessageWithMetadata:(id)arg1 messageId:(unsigned long long)arg2;	// IMP=0x000000010003c05c
- (void)_clearKeepAliveResponseTimerOnInterface:(long long)arg1;	// IMP=0x000000010003c04c
- (void)_startKeepAliveResponseTimerOnInterface:(long long)arg1 shortInterval:(_Bool)arg2;	// IMP=0x000000010003c000
- (void)_clearConnectionEstablishTimerOnInterface:(long long)arg1;	// IMP=0x000000010003bff0
- (void)_startConnectionEstablishTimerOnInterface:(long long)arg1;	// IMP=0x000000010003bfb4
- (_Bool)shouldForceShortTimeouts;	// IMP=0x000000010003bf8c
- (void)outgoingMessageQueue:(id)arg1 requestToSendLowPriorityMessages:(id)arg2;	// IMP=0x000000010003bf88
- (void)outgoingMessageQueue:(id)arg1 requestCriticalMessageFlushWithPaddingLength:(unsigned long long)arg2;	// IMP=0x000000010003be70
- (void)outgoingMessageQueueShortMessageTimeoutExceeded:(id)arg1;	// IMP=0x000000010003bd8c
- (void)outgoingMessageQueue:(id)arg1 lateAcknowledgmentForCriticalOutgoingMessage:(id)arg2;	// IMP=0x000000010003bb48
- (void)_handleOutgoingMessageAcknowledgment:(id)arg1 onInterface:(long long)arg2;	// IMP=0x000000010003b8bc
- (void)_sendQueuedOutgoingMessages;	// IMP=0x000000010003b8ac
- (void)_sendQueuedOutgoingMessagesForTokenState:(id)arg1;	// IMP=0x000000010003b58c
- (void)_sendOutgoingMessage:(id)arg1;	// IMP=0x000000010003a3b4
- (void)_handleAppTokenGenerateResponse:(id)arg1 onInterface:(long long)arg2;	// IMP=0x000000010003a2b4
- (_Bool)_handleRedirectMessage:(id)arg1 onInterface:(long long)arg2;	// IMP=0x000000010003a0d4
- (void)_handleFlushMessage:(id)arg1 onInterface:(long long)arg2;	// IMP=0x0000000100039ee8
- (void)_handleKeepAliveAckMessage:(id)arg1 onInterface:(long long)arg2;	// IMP=0x0000000100039bfc
- (void)_handleKeepAliveResponseMessage:(id)arg1 onInterface:(long long)arg2;	// IMP=0x00000001000396fc
- (void)_submitKeepAliveFailedAWDonInterface:(long long)arg1;	// IMP=0x0000000100039358
- (void)_submitKeepAliveSucceededAWDonInterface:(long long)arg1;	// IMP=0x0000000100038f3c
- (void)_performKeepAliveOnInterface:(long long)arg1 shortInterval:(_Bool)arg2 withAction:(int)arg3;	// IMP=0x0000000100038924
- (void)_resetServerKeepAliveStatsOnInterface:(long long)arg1;	// IMP=0x00000001000388ac
- (_Bool)useServerKeepAliveStatsOnInterface:(long long)arg1;	// IMP=0x0000000100038848
- (void)performKeepAlive;	// IMP=0x00000001000386bc
- (void)_delayedPerformKeepAliveOnInterface:(long long)arg1;	// IMP=0x0000000100038568
- (void)_delayedPerformKeepAliveNonCellular;	// IMP=0x00000001000384c4
- (void)__delayedPerformKeepAliveNonCellular;	// IMP=0x000000010003846c
- (void)_delayedPerformKeepAliveWWAN;	// IMP=0x00000001000383c8
- (void)__delayedPerformKeepAliveWWAN;	// IMP=0x0000000100038370
- (void)_resetKeepAliveOnInterface:(long long)arg1;	// IMP=0x0000000100038304
- (void)_performFlushWithPaddingLength:(unsigned long long)arg1;	// IMP=0x0000000100038104
- (id)_copyParsedPayload:(id)arg1;	// IMP=0x0000000100037dd8
- (void)_handleMessageMessage:(id)arg1 onInterface:(long long)arg2 withGeneration:(unsigned long long)arg3 fromMaster:(_Bool)arg4;	// IMP=0x0000000100035724
- (_Bool)_wakeCausedByTopic:(id)arg1 tokenName:(id)arg2 interface:(long long)arg3 priorityVal:(unsigned long long)arg4 inWhiteList:(_Bool)arg5;	// IMP=0x0000000100035644
- (void)_notePush;	// IMP=0x0000000100035530
- (void)_notifyForIncomingMessage:(id)arg1 forConnection:(id)arg2;	// IMP=0x0000000100034ca4
- (void)_notifyForIncomingMessage:(id)arg1;	// IMP=0x0000000100034c94
- (void)_sendFilterMessageOnInterface:(long long)arg1 fromTopicManager:(id)arg2;	// IMP=0x0000000100034c84
- (void)_sendFilterMessageOnInterface:(long long)arg1 fromTopicManager:(id)arg2 resetKeepAlive:(_Bool)arg3;	// IMP=0x00000001000346b0
- (void)_forceReconnections;	// IMP=0x00000001000345d8
- (void)_processInvalidIdentity;	// IMP=0x00000001000344e4
- (void)_handleConnectedMessage:(id)arg1 onInterface:(long long)arg2;	// IMP=0x0000000100032f0c
- (void)_didFinishAssertingAllPresences:(long long)arg1;	// IMP=0x0000000100032bf8
- (void)_pendingMessageReconnectTimerFired;	// IMP=0x0000000100032a9c
- (_Bool)_useShortKeepAliveInterval;	// IMP=0x00000001000329e4
- (_Bool)isCellularWatch;	// IMP=0x00000001000329dc
- (void)_delayedReconnectTimerFired;	// IMP=0x00000001000328e4
- (void)_handleConnectionFailureOnInterface:(long long)arg1 forceDelayedReconnect:(_Bool)arg2;	// IMP=0x0000000100031de0
- (void)courierConnection:(id)arg1 errorOccured:(id)arg2 onInterface:(long long)arg3;	// IMP=0x0000000100031908
- (void)_useCachedLastIPIfPossible:(long long)arg1;	// IMP=0x0000000100031648
- (void)_cacheIPAddress:(id)arg1 onInterface:(long long)arg2;	// IMP=0x000000010003137c
- (void)courierConnection:(id)arg1 parserErrorMessage:(id)arg2 OnInterface:(long long)arg3;	// IMP=0x00000001000312a8
- (void)courierConnection:(id)arg1 streamEndedOnInterface:(long long)arg2;	// IMP=0x0000000100030f50
- (unsigned long long)courierConnection:(id)arg1 dataReceived:(id)arg2 onInterface:(long long)arg3 withGeneration:(unsigned long long)arg4;	// IMP=0x0000000100030074
- (void)courierConnectionHasConnected:(id)arg1 context:(id)arg2 enabledPackedFormat:(_Bool)arg3 secureHandshakeEnabled:(_Bool)arg4 onInterface:(long long)arg5;	// IMP=0x000000010002fe4c
- (void)courierConnection:(id)arg1 hasDeterminedServerHostname:(id)arg2 onInterface:(long long)arg3;	// IMP=0x000000010002fd08
- (void)courierConnection:(id)arg1 receivedServerBag:(id)arg2;	// IMP=0x000000010002eb80
- (void)_sendPresenceMessage:(long long)arg1 serverTime:(id)arg2;	// IMP=0x000000010002e758
- (void)courierConnection:(id)arg1 connectionEstablishTimerFiredOnInterface:(long long)arg2;	// IMP=0x000000010002e40c
- (void)courierConnection:(id)arg1 keepAliveResponseTimerFiredOnInterface:(long long)arg2;	// IMP=0x000000010002e068
- (void)courierConnection:(id)arg1 disconnectStreamOnInterface:(long long)arg2;	// IMP=0x000000010002ddc0
- (void)courierConnection:(id)arg1 connectionManager:(id)arg2 handleEvent:(int)arg3 context:(id)arg4 onInterface:(long long)arg5;	// IMP=0x000000010002d018
- (void)_delayedSuspendKeepAliveTimerFired:(id)arg1;	// IMP=0x000000010002cedc
- (void)_clearPostSuspensionFlushState;	// IMP=0x000000010002cea0
- (void)_handleConnectionAfterSuspensionRecoveryOnInterface:(long long)arg1 withKeepAlive:(_Bool)arg2;	// IMP=0x000000010002cc3c
- (void)_handleConnectionRecoverFromSuspensionOnInterface:(long long)arg1;	// IMP=0x000000010002c8fc
- (void)_handleConnectionSuspendedOnInterface:(long long)arg1;	// IMP=0x000000010002c844
- (void)interfaceRadioHotnessChanged:(id)arg1;	// IMP=0x000000010002c724
- (void)interfaceReachabilityChanged:(id)arg1;	// IMP=0x000000010002c718
- (void)interfaceLinkQualityChanged:(id)arg1 previousLinkQuality:(int)arg2;	// IMP=0x000000010002c5a4
- (void)networkMonitor:(id)arg1 enableWiFiAssertionForPiggybackConnection:(_Bool)arg2;	// IMP=0x000000010002c4a8
- (void)networkMonitorWiFiBecameAssociated:(id)arg1;	// IMP=0x000000010002c3e0
- (void)networkMonitor:(id)arg1 evaluateDualModeState:(_Bool)arg2;	// IMP=0x000000010002c250
- (void)topicManagerRequestToSendFilter:(id)arg1;	// IMP=0x000000010002c140
- (void)_requestToSendFilterOnTopicManager:(id)arg1;	// IMP=0x000000010002bf90
- (void)_logTopics;	// IMP=0x000000010002b900
- (void)_schedulePendingWorkUpdate;	// IMP=0x000000010002b8a4
- (void)_updatePendingWork;	// IMP=0x000000010002b618
- (void)_processLowPriorityIncomingMessage:(id)arg1;	// IMP=0x000000010002aeb0
- (void)_processPendingWorkForTopic:(id)arg1;	// IMP=0x000000010002ac58
- (void)resourceUpdate:(unsigned long long)arg1 withStatus:(unsigned long long)arg2;	// IMP=0x000000010002ab3c
- (void)pendingWorkCanProcess:(id)arg1;	// IMP=0x000000010002aa0c
- (void)_deleteClientIdentityRequestingReplacement;	// IMP=0x000000010002a7e4
- (struct __SecIdentity *)_getClientIdentity;	// IMP=0x000000010002a3c8
- (void)_copyClientIdentityFromKeychain:(struct __SecIdentity **)arg1;	// IMP=0x000000010002a240
- (void)systemDidUnlock;	// IMP=0x000000010002a154
- (void)systemDidLock;	// IMP=0x000000010002a068
- (void)_dumpLogsForInconsistencyIfNecessary;	// IMP=0x0000000100029ff0
- (void)__dumpLogsForInconsistencyIfNecessary;	// IMP=0x0000000100029ca8
- (_Bool)_isWiFiLinkQualityBetter;	// IMP=0x0000000100029b94
- (_Bool)_processPotentialIdentityChanged;	// IMP=0x0000000100029764
- (void)_disconnectStreamForInterface:(long long)arg1;	// IMP=0x000000010002915c
- (void)_disconnectAllStreams;	// IMP=0x0000000100029118
- (_Bool)_connectStreamWithInterfacePreference:(long long)arg1;	// IMP=0x0000000100027cf8
- (void)_adjustConnection;	// IMP=0x0000000100027ce8
- (_Bool)_adjustConnectionWithInterfacePreference:(long long)arg1;	// IMP=0x00000001000278a4
- (void)_processShouldUseInternetChangeIfNecessary;	// IMP=0x0000000100027510
- (id)_proxyManager;	// IMP=0x00000001000274c8
@property(readonly, nonatomic) _Bool shouldUseInternet;
- (_Bool)shouldRun;	// IMP=0x00000001000273e4
- (void)_processShouldRunChangeIfNecessary;	// IMP=0x00000001000272d8
- (void)setEnabled:(_Bool)arg1;	// IMP=0x000000010002714c
- (void)_processStoredOutgoingMessages;	// IMP=0x0000000100027148
- (void)_processStoredIncomingMessages;	// IMP=0x0000000100026de4
@property(readonly, nonatomic) double currentKeepAliveInterval; // @dynamic currentKeepAliveInterval;
- (void)setLargeMessageSize:(unsigned long long)arg1;	// IMP=0x0000000100026b8c
- (unsigned long long)largeMessageSize;	// IMP=0x0000000100026b20
- (void)setMessageSize:(unsigned long long)arg1;	// IMP=0x0000000100026904
@property(readonly, nonatomic) unsigned long long messageSize; // @dynamic messageSize;
- (void)_handleLostPushTokens;	// IMP=0x000000010002681c
- (id)userPublicToken;	// IMP=0x0000000100026788
- (void)setUserPublicToken:(id)arg1 fromServer:(_Bool)arg2;	// IMP=0x00000001000263ec
- (void)setPublicToken:(id)arg1 fromServer:(_Bool)arg2;	// IMP=0x0000000100026034
@property(readonly, retain, nonatomic) NSData *publicToken; // @dynamic publicToken;
@property(readonly, copy, nonatomic) NSString *ifname;
- (void)_adjustIsConnectedToService;	// IMP=0x0000000100025d04
- (void)_recreateCacheDictionaries;	// IMP=0x0000000100025b40
- (_Bool)hasListeningTopics;	// IMP=0x0000000100025ae4
- (void)_setTopicsForCategory:(long long)arg1;	// IMP=0x0000000100025598
- (void)_processIsPowerEfficientToSendChange;	// IMP=0x00000001000254b0
- (void)slave:(id)arg1 messageTracingWithStatus:(int)arg2 topic:(id)arg3 tracingUUID:(id)arg4 token:(id)arg5;	// IMP=0x00000001000252c4
- (void)slave:(id)arg1 requestAppTokenGenerateWithTopicHash:(id)arg2 baseToken:(id)arg3 appId:(id)arg4;	// IMP=0x0000000100024e34
- (void)slave:(id)arg1 requestSendOutgoingMessage:(id)arg2;	// IMP=0x00000001000249e8
- (void)slave:(id)arg1 requestPushAckResponse:(id)arg2 messageId:(id)arg3 token:(id)arg4 interface:(id)arg5 generation:(id)arg6;	// IMP=0x0000000100024750
- (void)slaveBecameInactive:(id)arg1;	// IMP=0x0000000100024650
- (void)requestFilterForSlave:(id)arg1;	// IMP=0x000000010002451c
- (void)pushTokenBecameInvalidForSlave:(id)arg1;	// IMP=0x000000010002442c
- (void)proxyMasterIsConnectedChanged:(_Bool)arg1;	// IMP=0x0000000100024334
- (void)proxyMasterReceivedAppTokenGenerateResponse:(id)arg1 error:(id)arg2;	// IMP=0x00000001000242ac
- (void)proxyMasterReceivedPush:(id)arg1 interface:(id)arg2 generation:(id)arg3;	// IMP=0x00000001000241f4
- (void)proxyMasterRequestFilter;	// IMP=0x00000001000240ac
- (void)receivedMessageSize:(id)arg1 largeMessageSize:(id)arg2;	// IMP=0x0000000100024014
- (void)receivedPushToken:(id)arg1;	// IMP=0x0000000100023f18
- (void)generateCert:(id *)arg1 nonce:(id *)arg2 sig:(id *)arg3 time:(id)arg4;	// IMP=0x0000000100023c44
- (void)_clearCachedSigNonceCert;	// IMP=0x0000000100023b3c
- (void)refreshCertNonceAndSignatureWithServerTime:(id)arg1;	// IMP=0x00000001000239bc
- (void)_sendSlaveFilter:(id)arg1 onInterface:(long long)arg2;	// IMP=0x00000001000235c0
- (void)_processPendingProxyPresences;	// IMP=0x0000000100022b4c
- (void)_clearPendingProxyPresence;	// IMP=0x0000000100022964
- (void)incomingPresenceWithGuid:(id)arg1 token:(id)arg2 hwVersion:(id)arg3 swVersion:(id)arg4 swBuild:(id)arg5 certificate:(id)arg6 nonce:(id)arg7 signature:(id)arg8;	// IMP=0x0000000100022540
- (void)canUseProxyChanged;	// IMP=0x0000000100022478
- (unsigned long long)_countConnectedSlaves;	// IMP=0x0000000100022320
- (unsigned long long)_countActiveSlaves;	// IMP=0x00000001000221c8
- (id)_findSlaveWithToken:(id)arg1;	// IMP=0x0000000100021ff8
- (id)_findConnectedSlaveWithToken:(id)arg1 onInterface:(long long)arg2;	// IMP=0x0000000100021e04
- (id)_findActiveSlaveWithToken:(id)arg1;	// IMP=0x0000000100021c14
- (void)periodicSignalFired;	// IMP=0x00000001000216ec
- (void)invalidateDeviceIdentity;	// IMP=0x0000000100021624
- (void)requestConnectionIfNeeded;	// IMP=0x0000000100021554
- (id)APSProcessModeNameForToken:(id)arg1;	// IMP=0x000000010002151c
- (id)APSProcessModeNameForMode:(unsigned long long)arg1;	// IMP=0x00000001000214f8
- (id)tokenForProcessMode:(unsigned long long)arg1;	// IMP=0x00000001000214b0
- (unsigned long long)processModeWithTopicManager:(id)arg1;	// IMP=0x0000000100021488
- (unsigned long long)processModeWithToken:(id)arg1;	// IMP=0x00000001000213bc
- (void)_criticalReliabilityTimerFired;	// IMP=0x00000001000212f0
- (void)_refreshCriticalReliabilityTimerWithShortKeepAlive:(_Bool)arg1;	// IMP=0x00000001000210d4
- (void)_criticalReliabilityFlushTimerFired;	// IMP=0x0000000100020f08
- (void)_requestKeepAlive:(_Bool)arg1 orConnection:(_Bool)arg2;	// IMP=0x0000000100020ef4
- (void)_requestKeepAlive:(_Bool)arg1 orConnection:(_Bool)arg2 shortInterval:(_Bool)arg3 onInterface:(long long)arg4;	// IMP=0x0000000100020b88
- (void)_recalculateCriticalReliability;	// IMP=0x0000000100020860
- (void)ttlCollection:(id)arg1 itemsDidExpire:(id)arg2 withStates:(id)arg3;	// IMP=0x0000000100020718
- (void)_triggerAutoBugCaptureIfMessageIsRetried:(id)arg1;	// IMP=0x0000000100020470
- (void)handleIncomingMessageReceiptWithTopic:(id)arg1 tracingUUID:(id)arg2;	// IMP=0x000000010002026c
- (void)connection:(id)arg1 handleAckIncomingMessageWithGuid:(id)arg2 topic:(id)arg3 tracingUUID:(id)arg4;	// IMP=0x000000010001ffdc
- (void)connection:(id)arg1 didInvalidatePerAppTokenForTopic:(id)arg2 identifier:(id)arg3;	// IMP=0x000000010001fdc0
- (void)connection:(id)arg1 didRequestPerAppTokenForTopic:(id)arg2 identifier:(id)arg3;	// IMP=0x000000010001f15c
- (void)connection:(id)arg1 didReceiveFakeMessageToSend:(id)arg2;	// IMP=0x000000010001eb28
- (void)connection:(id)arg1 didReceiveCancellationForOutgoingMessageWithID:(unsigned long long)arg2;	// IMP=0x000000010001ea44
- (void)connection:(id)arg1 didReceiveOutgoingMessageToSend:(id)arg2;	// IMP=0x000000010001e25c
- (void)_enqueueMessage:(id)arg1 forOriginator:(id)arg2;	// IMP=0x000000010001e070
- (void)connectionChangedCriticalReliability:(id)arg1;	// IMP=0x000000010001dfa8
- (_Bool)connectionDelegateIsConnectedToService:(id)arg1;	// IMP=0x000000010001dfa0
- (_Bool)connectionDelegateHasIdentity:(id)arg1;	// IMP=0x000000010001df94
- (void)__performIdleCheck;	// IMP=0x000000010001de58
- (void)_performIdleCheck;	// IMP=0x000000010001ddd4
- (void)connectionWasOpened:(id)arg1;	// IMP=0x000000010001dcb4
- (void)connectionWasClosed:(id)arg1;	// IMP=0x000000010001db7c
- (void)__processStoredIncomingMessagesForConnection:(id)arg1;	// IMP=0x000000010001d954
- (void)_processStoredIncomingMessagesForConnection:(id)arg1;	// IMP=0x000000010001d8b0
- (void)connectionTopicsChanged:(id)arg1;	// IMP=0x000000010001d854
- (void)clearDNSResolutionAndTLSHandshakeOnInterface:(long long)arg1;	// IMP=0x000000010001d71c
- (void)setConnectionStatistics:(id)arg1 onInterface:(long long)arg2;	// IMP=0x000000010001d518
- (id)tlsHandshakeTimeMillisecondsOnInterface:(long long)arg1;	// IMP=0x000000010001d410
- (id)dnsResolutionTimeMillisecondsOnInterface:(long long)arg1;	// IMP=0x000000010001d308
- (id)tcpHandshakeTimeMillisecondsOnInterface:(long long)arg1;	// IMP=0x000000010001d200
- (void)clearConsecutiveConnectionFailureReasonOnInterface:(long long)arg1;	// IMP=0x000000010001d0d4
- (void)setConnectionFailure:(id)arg1 onInterface:(long long)arg2;	// IMP=0x000000010001cf44
- (id)consecutiveConnectionFailureReasonOnInterface:(long long)arg1;	// IMP=0x000000010001ce3c
- (id)pcPersistentInterfaceManager;	// IMP=0x000000010001ce28
- (id)pcInterfaceMonitorOnInterface:(long long)arg1;	// IMP=0x000000010001cddc
- (id)pcInterfaceMonitorNonCellular;	// IMP=0x000000010001cdcc
- (id)pcInterfaceMonitorWWAN;	// IMP=0x000000010001cdbc
- (_Bool)_isInternetReachableOnInterface:(long long)arg1;	// IMP=0x000000010001cd5c
- (int)_linkQualityForInterface:(long long)arg1;	// IMP=0x000000010001ccfc
- (unsigned int)_keepAliveVersionForInterface:(long long)arg1;	// IMP=0x000000010001ccd0
- (unsigned int)_connectionTypeForInterface:(long long)arg1;	// IMP=0x000000010001ccc0
- (void)removeConnectionForConnectionPortName:(id)arg1;	// IMP=0x000000010001cc5c
- (id)connectionForConnectionPortName:(id)arg1;	// IMP=0x000000010001cc4c
@property(readonly, nonatomic) double serverTime;
@property(readonly, nonatomic) _Bool hasIdentity;
- (id)_getCurrentTokens;	// IMP=0x000000010001caf4
- (void)addConnection:(id)arg1;	// IMP=0x000000010001c940
@property(readonly, copy) NSString *debugDescription;
- (void)dealloc;	// IMP=0x000000010001c364
- (void)carrierBundleDidChange;	// IMP=0x000000010001c158
- (id)copyOperatorName;	// IMP=0x000000010001c0f4
- (id)dailySuspendToggleRateLimiter;	// IMP=0x000000010001c088
- (id)hourlySuspendToggleRateLimiter;	// IMP=0x000000010001c01c
- (id)initWithEnvironment:(id)arg1 delegate:(id)arg2;	// IMP=0x000000010001b5b4
- (id)copyAppSpecificIdentifierWithTopic:(id)arg1 identifier:(id)arg2;	// IMP=0x000000010001b518
- (struct __CFData *)copyTokenForDomain:(struct __CFString *)arg1 appSpecificIdentifier:(struct __CFString *)arg2 mode:(unsigned long long)arg3;	// IMP=0x000000010001b0a8
- (void)deleteAppSpecificTokensWithDomain:(struct __CFString *)arg1 mode:(unsigned long long)arg2;	// IMP=0x000000010001ae78
- (void)setToken:(struct __CFData *)arg1 withDomain:(struct __CFString *)arg2 appSpecificIdentifier:(struct __CFString *)arg3 mode:(unsigned long long)arg4 topic:(id)arg5;	// IMP=0x000000010001aa9c
- (void)setToken:(struct __CFData *)arg1 withDomain:(struct __CFString *)arg2 appSpecificIdentifier:(struct __CFString *)arg3 mode:(unsigned long long)arg4;	// IMP=0x000000010001aa8c
- (void)deleteAppSpecificTokensWithDomain:(struct __CFString *)arg1 forTopic:(id)arg2 mode:(unsigned long long)arg3;	// IMP=0x000000010001a95c
- (void)deleteAppSpecificTokensWithRefArray:(id)arg1;	// IMP=0x000000010001a784
- (id)copyAppSpecificTokensWithDomain:(struct __CFString *)arg1 forTopic:(id)arg2 mode:(unsigned long long)arg3 returnRef:(_Bool)arg4;	// IMP=0x000000010001a2a8
- (_Bool)isAppSpecificTokenValidWithDomain:(struct __CFString *)arg1 token:(id)arg2 mode:(unsigned long long)arg3;	// IMP=0x0000000100019e74

// Remaining properties
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

