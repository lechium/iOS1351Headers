//
//     Generated by classdumpios 1.0.1 (64 bit) (iOS port by DreamDevLost)(Debug version compiled Sep 26 2020 13:48:20).
//
//  Copyright (C) 1997-2019 Steve Nygard.
//

#import <objc/NSObject.h>

#import "CSDAVConferenceDelegate-Protocol.h"

@class NSMutableArray, NSMutableSet, NSString;
@protocol CSDAVConference, OS_dispatch_queue;

@interface CSDRelayConferenceInterface : NSObject <CSDAVConferenceDelegate>
{
    NSObject<OS_dispatch_queue> *_queue;	// 8 = 0x8
    NSMutableArray *_conferenceConnections;	// 16 = 0x10
    NSMutableSet *_conferencesAwaitingConnectionClose;	// 24 = 0x18
    CDUnknownBlockType _conferenceCreationBlock;	// 32 = 0x20
    double _connectionTimeout;	// 40 = 0x28
    double _closeConnectionTimeout;	// 48 = 0x30
    double _prepareToStopTimeout;	// 56 = 0x38
}

+ (id)sharedInstanceWithQueue:(id)arg1;	// IMP=0x0000000100090a9c
+ (id)sharedInstance;	// IMP=0x0000000100090a80
- (void).cxx_destruct;	// IMP=0x0000000100094ae4
@property(nonatomic) double prepareToStopTimeout; // @synthesize prepareToStopTimeout=_prepareToStopTimeout;
@property(nonatomic) double closeConnectionTimeout; // @synthesize closeConnectionTimeout=_closeConnectionTimeout;
@property(nonatomic) double connectionTimeout; // @synthesize connectionTimeout=_connectionTimeout;
@property(copy, nonatomic) CDUnknownBlockType conferenceCreationBlock; // @synthesize conferenceCreationBlock=_conferenceCreationBlock;
@property(retain, nonatomic) NSMutableSet *conferencesAwaitingConnectionClose; // @synthesize conferencesAwaitingConnectionClose=_conferencesAwaitingConnectionClose;
@property(retain, nonatomic) NSMutableArray *conferenceConnections; // @synthesize conferenceConnections=_conferenceConnections;
@property(retain, nonatomic) NSObject<OS_dispatch_queue> *queue; // @synthesize queue=_queue;
- (void)conference:(id)arg1 outputLevelChangedTo:(float)arg2;	// IMP=0x00000001000949d4
- (void)conference:(id)arg1 inputLevelChangedTo:(float)arg2;	// IMP=0x0000000100094944
- (void)conference:(id)arg1 outputFrequencyLevelChangedTo:(id)arg2;	// IMP=0x00000001000948cc
- (void)conference:(id)arg1 inputFrequencyLevelChangedTo:(id)arg2;	// IMP=0x0000000100094854
- (void)sendingAudioChangedForConference:(id)arg1;	// IMP=0x00000001000947a8
- (void)mutedChangedForConference:(id)arg1;	// IMP=0x00000001000946fc
- (void)connectionClosedForConference:(id)arg1;	// IMP=0x0000000100094644
- (void)conference:(id)arg1 endedWithReason:(long long)arg2 error:(id)arg3;	// IMP=0x00000001000942a8
- (void)conferenceStarted:(id)arg1;	// IMP=0x0000000100094114
- (void)conferenceFinishedPreparing:(id)arg1;	// IMP=0x0000000100093f54
- (void)conference:(id)arg1 didReceiveData:(id)arg2 forCallID:(long long)arg3;	// IMP=0x0000000100093d28
- (void)_postDidCloseNotificationForConference:(id)arg1;	// IMP=0x0000000100093c3c
- (void)_postDidCloseNotificationForConferenceIfNecessary:(id)arg1;	// IMP=0x0000000100093b7c
- (void)_stopConference:(id)arg1;	// IMP=0x00000001000939d4
- (void)_cleanUpConferenceConnection:(id)arg1 error:(id)arg2;	// IMP=0x00000001000936a8
- (void)_cleanUpAllConferenceConnectionsForConference:(id)arg1 withError:(id)arg2;	// IMP=0x0000000100093540
- (void)_prepareConferenceForConferenceConnection:(id)arg1 remoteInviteDictionary:(id)arg2;	// IMP=0x00000001000932fc
@property(readonly, nonatomic) id <CSDAVConference> activeConference;
- (id)_conferenceConnectionsForConference:(id)arg1;	// IMP=0x0000000100092f24
- (id)conferenceConnectionForIdentifier:(id)arg1;	// IMP=0x0000000100092d68
- (id)activeConferenceConnectionForIdentifier:(id)arg1;	// IMP=0x0000000100092b14
- (void)stopConferenceForIdentifier:(id)arg1;	// IMP=0x0000000100092958
- (void)prepareToStopConferenceForIdentifier:(id)arg1;	// IMP=0x00000001000924ec
- (void)setConferenceActiveForIdentifier:(id)arg1;	// IMP=0x0000000100092380
- (void)updateConferenceForIdentifier:(id)arg1 isUsingBaseband:(_Bool)arg2 disableAudio:(_Bool)arg3;	// IMP=0x00000001000920a8
- (void)sendData:(id)arg1 throughConferenceForIdentifier:(id)arg2;	// IMP=0x0000000100091f4c
- (void)startConferenceForIdentifier:(id)arg1 usingTransport:(id)arg2 remoteInviteDictionary:(id)arg3 didStartHandler:(CDUnknownBlockType)arg4 didStopHandler:(CDUnknownBlockType)arg5;	// IMP=0x0000000100091b18
- (void)prepareConferenceForCall:(id)arg1 remoteInviteDictionary:(id)arg2 completion:(CDUnknownBlockType)arg3;	// IMP=0x0000000100091a3c
- (void)prepareConferenceConnection:(id)arg1 remoteInviteDictionary:(id)arg2 completion:(CDUnknownBlockType)arg3;	// IMP=0x00000001000915a4
- (void)setSendingAudio:(_Bool)arg1 forIdentifier:(id)arg2;	// IMP=0x0000000100091384
- (long long)outputAudioPowerSpectrumTokenForIdentifier:(id)arg1;	// IMP=0x00000001000912b4
- (long long)inputAudioPowerSpectrumTokenForIdentifier:(id)arg1;	// IMP=0x00000001000911e4
- (_Bool)isSendingAudioForIdentifier:(id)arg1;	// IMP=0x0000000100091114
- (void)setMuted:(_Bool)arg1 forIdentifier:(id)arg2;	// IMP=0x0000000100090ee4
- (_Bool)isMutedForIdentifier:(id)arg1;	// IMP=0x0000000100090e10
- (void)uplinkMutedStatusChanged:(id)arg1;	// IMP=0x0000000100090d7c
- (void)dealloc;	// IMP=0x0000000100090d04
- (id)initWithSerialQueue:(id)arg1;	// IMP=0x0000000100090ba0

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

