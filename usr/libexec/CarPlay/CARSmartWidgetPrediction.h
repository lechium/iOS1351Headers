//
//     Generated by classdumpios 1.0.1 (64 bit) (iOS port by DreamDevLost)(Debug version compiled Sep 26 2020 13:48:20).
//
//  Copyright (C) 1997-2019 Steve Nygard.
//

#import <objc/NSObject.h>

@class CARObserverHashTable, NSArray, NSString, NSUUID, UIImage;
@protocol CARSmartWidgetPredictionDelegate;

@interface CARSmartWidgetPrediction : NSObject
{
    _Bool _showImageBorder;	// 8 = 0x8
    NSArray *_validRanges;	// 16 = 0x10
    NSUUID *_uniqueIdentifier;	// 24 = 0x18
    NSString *_title;	// 32 = 0x20
    NSString *_subtitle;	// 40 = 0x28
    UIImage *_image;	// 48 = 0x30
    CDUnknownBlockType _actionBlock;	// 56 = 0x38
    CARObserverHashTable *_observers;	// 64 = 0x40
    id <CARSmartWidgetPredictionDelegate> _delegate;	// 72 = 0x48
}

+ (SEL)isEqualClassSelector;	// IMP=0x000000010009c444
+ (long long)_scoreFor:(double)arg1 minValue:(double)arg2 maxValue:(double)arg3;	// IMP=0x000000010009c41c
+ (double)initialValidInterval;	// IMP=0x000000010009c3d0
- (void).cxx_destruct;	// IMP=0x000000010009c4e4
@property(nonatomic) __weak id <CARSmartWidgetPredictionDelegate> delegate; // @synthesize delegate=_delegate;
@property(retain, nonatomic) CARObserverHashTable *observers; // @synthesize observers=_observers;
@property(readonly, copy, nonatomic) CDUnknownBlockType actionBlock; // @synthesize actionBlock=_actionBlock;
@property(readonly, nonatomic) _Bool showImageBorder; // @synthesize showImageBorder=_showImageBorder;
@property(readonly, nonatomic) UIImage *image; // @synthesize image=_image;
@property(readonly, copy, nonatomic) NSString *subtitle; // @synthesize subtitle=_subtitle;
@property(readonly, copy, nonatomic) NSString *title; // @synthesize title=_title;
@property(copy, nonatomic) NSUUID *uniqueIdentifier; // @synthesize uniqueIdentifier=_uniqueIdentifier;
@property(retain, nonatomic) NSArray *validRanges; // @synthesize validRanges=_validRanges;
- (_Bool)_defaultIsEqualClass:(id)arg1;	// IMP=0x000000010009c450
- (void)updateRangeIfNeeded:(id)arg1;	// IMP=0x000000010009c418
- (void)invalidateValidIntervals;	// IMP=0x000000010009c408
- (id)defaultValidRanges;	// IMP=0x000000010009c3f8
- (double)initialValidInterval;	// IMP=0x000000010009c3dc
- (long long)predictionScore;	// IMP=0x000000010009c354
- (double)maxValue;	// IMP=0x000000010009c338
- (double)minValue;	// IMP=0x000000010009c31c
- (void)predictionDidUpdate;	// IMP=0x000000010009c2d4
- (_Bool)updateWithPrediction:(id)arg1;	// IMP=0x000000010009c228
- (id)predictedObjectDescription;	// IMP=0x000000010009c1b4
- (id)debugValidRangesText;	// IMP=0x000000010009bf20
- (id)debugScoreText;	// IMP=0x000000010009bf14
- (id)_debugScoreText;	// IMP=0x000000010009be34
- (void)traitCollectionDidChange:(id)arg1;	// IMP=0x000000010009be30
- (_Bool)isEqualToPrediction:(id)arg1;	// IMP=0x000000010009bd24
- (_Bool)isEqual:(id)arg1;	// IMP=0x000000010009bca4
- (id)description;	// IMP=0x000000010009ba10
- (void)removeObserver:(id)arg1;	// IMP=0x000000010009b9a4
- (void)addObserver:(id)arg1;	// IMP=0x000000010009b938
@property(readonly, nonatomic) long long score;
- (id)init;	// IMP=0x000000010009b3f8

@end

