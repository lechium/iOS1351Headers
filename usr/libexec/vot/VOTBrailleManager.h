//
//     Generated by classdumpios 1.0.1 (64 bit) (iOS port by DreamDevLost)(Debug version compiled Sep 26 2020 13:48:20).
//
//  Copyright (C) 1997-2019 Steve Nygard.
//

#import <objc/NSObject.h>

@class AXIndexMap, BRLTTable, NSArray, NSAttributedString, NSCondition, NSData, NSDictionary, NSMutableCharacterSet, SCRCTargetSelectorTimer, SCRCThreadKey, SCROBrailleClient, VOTElement, _KSTextReplacementClientStore, _VOTBrailleManagerStatus;

@interface VOTBrailleManager : NSObject
{
    VOTElement *_brailleElement;	// 8 = 0x8
    struct _NSRange _brailleDescriptionRange;	// 16 = 0x10
    struct _NSRange _brailleLineRange;	// 32 = 0x20
    SCRCTargetSelectorTimer *_hintTimer;	// 48 = 0x30
    unsigned long long _brailleElementIndex;	// 56 = 0x38
    _Bool _brailleEnabled;	// 64 = 0x40
    _Bool _usesBrailleSubstitutions;	// 65 = 0x41
    NSDictionary *_brailleSubstitutions;	// 72 = 0x48
    NSMutableCharacterSet *_delimiters;	// 80 = 0x50
    BRLTTable *_currentDefaultTable;	// 88 = 0x58
    BRLTTable *_currentSetTable;	// 96 = 0x60
    _VOTBrailleManagerStatus *_status;	// 104 = 0x68
    _Bool _hasActiveDisplay;	// 112 = 0x70
    _Bool _testingHasActiveDisplay;	// 113 = 0x71
    _Bool _testingKeyboardHelpOn;	// 114 = 0x72
    AXIndexMap *_commands;	// 120 = 0x78
    id _rotorSelection;	// 128 = 0x80
    _Bool _shouldPreferPositionOverRotorSelection;	// 136 = 0x88
    int _primaryDisplayToken;	// 140 = 0x8c
    _Bool _primaryDisplayIsBluetooth;	// 144 = 0x90
    SCROBrailleClient *_brailleClient;	// 152 = 0x98
    NSCondition *_brailleClientConnectionCondition;	// 160 = 0xa0
    int _lastBraillePanDirection;	// 168 = 0xa8
    SCRCThreadKey *_threadKey;	// 176 = 0xb0
    unsigned int _toggledModifiers;	// 184 = 0xb8
    _KSTextReplacementClientStore *_textReplacementStore;	// 192 = 0xc0
    NSArray *_textReplacementEntries;	// 200 = 0xc8
    NSData *_testingAggregatedStatus;	// 208 = 0xd0
    SCRCTargetSelectorTimer *_updateRealtimeStatusTimer;	// 216 = 0xd8
    double _lastRealtimeUpdate;	// 224 = 0xe0
    _Bool _testingBrailleElementLocked;	// 232 = 0xe8
    BRLTTable *_brailleTableFromSettings;	// 240 = 0xf0
    VOTElement *_previousTouchContainer;	// 248 = 0xf8
    long long _bookCursorPosition;	// 256 = 0x100
    SCROBrailleClient *_testingBrailleClient;	// 264 = 0x108
    NSArray *_testingTextShortcuts;	// 272 = 0x110
    double _threadWaitTime;	// 280 = 0x118
    CDUnknownBlockType _elementSetCallback;	// 288 = 0x120
    CDUnknownBlockType _keypressCallback;	// 296 = 0x128
    CDUnknownBlockType _brailleStringSetCallback;	// 304 = 0x130
}

+ (double)currentDefaultBrailleAlertTimeout;	// IMP=0x00000001000d2f0c
+ (id)manager;	// IMP=0x00000001000d2f00
+ (void)initialize;	// IMP=0x00000001000d2ec8
- (void).cxx_destruct;	// IMP=0x00000001000dec6c
@property(copy, nonatomic) CDUnknownBlockType brailleStringSetCallback; // @synthesize brailleStringSetCallback=_brailleStringSetCallback;
@property(copy, nonatomic) CDUnknownBlockType keypressCallback; // @synthesize keypressCallback=_keypressCallback;
@property(copy, nonatomic) CDUnknownBlockType elementSetCallback; // @synthesize elementSetCallback=_elementSetCallback;
@property(nonatomic) double threadWaitTime; // @synthesize threadWaitTime=_threadWaitTime;
@property(nonatomic) _Bool testingBrailleElementLocked; // @synthesize testingBrailleElementLocked=_testingBrailleElementLocked;
@property(retain, nonatomic) NSArray *testingTextShortcuts; // @synthesize testingTextShortcuts=_testingTextShortcuts;
@property(retain, nonatomic) SCROBrailleClient *testingBrailleClient; // @synthesize testingBrailleClient=_testingBrailleClient;
@property(nonatomic) long long bookCursorPosition; // @synthesize bookCursorPosition=_bookCursorPosition;
@property(readonly, nonatomic) struct _NSRange brailleLineRange; // @synthesize brailleLineRange=_brailleLineRange;
@property(retain, nonatomic) VOTElement *previousTouchContainer; // @synthesize previousTouchContainer=_previousTouchContainer;
@property(retain, nonatomic) BRLTTable *brailleTableFromSettings; // @synthesize brailleTableFromSettings=_brailleTableFromSettings;
@property(retain) NSDictionary *brailleSubstitutions; // @synthesize brailleSubstitutions=_brailleSubstitutions;
@property(nonatomic) _Bool usesBrailleSubstitutions; // @synthesize usesBrailleSubstitutions=_usesBrailleSubstitutions;
@property(nonatomic) _Bool brailleEnabled; // @synthesize brailleEnabled=_brailleEnabled;
- (void)resetTestingAggregatedStatus;	// IMP=0x00000001000deb1c
- (id)testingAggregatedStatus;	// IMP=0x00000001000deaf8
- (_Bool)testingKeyboardHelpIsOn;	// IMP=0x00000001000deaf0
- (void)configureForUnitTesting;	// IMP=0x00000001000dea98
- (void)unitTestHandleBrailleKeypress:(id)arg1;	// IMP=0x00000001000dea8c
- (struct _NSRange)rangeOfCellRepresentingCharacterAtIndex:(long long)arg1;	// IMP=0x00000001000de958
@property(readonly, nonatomic) NSAttributedString *testingMainAttributedString;
- (id)testingBrailleElement;	// IMP=0x00000001000de940
@property(readonly, nonatomic) unsigned long long testingBrailleElementIndex;
@property(nonatomic) _Bool testingHasActiveDisplay;
- (id)_localeIdentifierForCurrentTable;	// IMP=0x00000001000de760
- (id)_tableIdentifierFromDefaultRotorItem:(id)arg1 forLocale:(id)arg2;	// IMP=0x00000001000de6a0
- (id)_defaultLanguageRotorItem;	// IMP=0x00000001000de508
- (void)handleBrailleStartEditing;	// IMP=0x00000001000de1c0
- (void)handleBrailleDidShowNextAnnouncement:(id)arg1;	// IMP=0x00000001000de120
- (void)handleBrailleDidShowPreviousAnnouncement:(id)arg1;	// IMP=0x00000001000de080
- (void)_handleDisplayModeChanged:(id)arg1;	// IMP=0x00000001000ddfe8
- (void)handleDisplayModeChanged:(id)arg1;	// IMP=0x00000001000ddf68
- (void)_handleBraillePlayCommandNotSupportedSound;	// IMP=0x00000001000ddef0
- (void)handleBraillePlayCommandNotSupportedSound;	// IMP=0x00000001000dde94
- (void)_handleBraillePlayBorderHitSound;	// IMP=0x00000001000dde1c
- (void)handleBraillePlayBorderHitSound;	// IMP=0x00000001000dddc0
- (void)_handleBraillePlayDisplayConnectionSound:(id)arg1;	// IMP=0x00000001000ddd20
- (void)handleBraillePlayDisplayConnectionSound:(id)arg1;	// IMP=0x00000001000ddca0
@property(nonatomic) unsigned int persistentKeyModifiers;
- (void)_dispatchBrailleDidPanWithSuccess:(id)arg1 elementToken:(id)arg2 appToken:(id)arg3 direction:(id)arg4;	// IMP=0x00000001000dd6b4
- (_Bool)_brailleShouldTryToTurnPage:(id)arg1 direction:(long long)arg2;	// IMP=0x00000001000dd620
- (void)handleBrailleDisplayCopyStringToClipboard:(id)arg1;	// IMP=0x00000001000dd5b0
- (void)handleBrailleDidPanRight:(id)arg1 elementToken:(id)arg2 appToken:(id)arg3;	// IMP=0x00000001000dd478
- (void)handleBrailleDidPanLeft:(id)arg1 elementToken:(id)arg2 appToken:(id)arg3;	// IMP=0x00000001000dd340
- (void)handleBrailleDeletedUntranslatedText:(id)arg1 speakLiterally:(_Bool)arg2;	// IMP=0x00000001000dd06c
- (void)handleBrailleInsertedUntranslatedText:(id)arg1 speakLiterally:(_Bool)arg2;	// IMP=0x00000001000dcd98
- (void)_handleBrailleReplaceTextRange:(id)arg1 withString:(id)arg2 cursor:(id)arg3;	// IMP=0x00000001000dc218
- (void)_handleBrailleKeypress:(id)arg1;	// IMP=0x00000001000daac8
- (void)handleBrailleReplaceTextRange:(struct _NSRange)arg1 withString:(id)arg2 cursor:(unsigned long long)arg3;	// IMP=0x00000001000da560
- (void)handleBrailleKeypress:(id)arg1;	// IMP=0x00000001000da4ac
- (void)_updateOnscreenKeyboardSettings;	// IMP=0x00000001000da134
- (void)_handleBrailleConfigurationChanged:(id)arg1;	// IMP=0x00000001000d9d34
- (void)handleBrailleDidReconnect:(id)arg1;	// IMP=0x00000001000d9cdc
- (void)handleBrailleDidDisconnect:(id)arg1;	// IMP=0x00000001000d9c84
- (void)handleBrailleConfigurationChanged:(id)arg1;	// IMP=0x00000001000d9bc0
- (void)_displayBrailleElementHint;	// IMP=0x00000001000d993c
@property(retain, nonatomic) VOTElement *brailleElement; // @synthesize brailleElement=_brailleElement;
- (void)_refreshBrailleLinePreferringPositionOverRotorSelection:(_Bool)arg1 knownLineRange:(_Bool)arg2;	// IMP=0x00000001000d942c
- (void)_refreshBrailleLine;	// IMP=0x00000001000d9418
- (void)refreshBrailleLine;	// IMP=0x00000001000d940c
- (void)_resetBrailleCursor;	// IMP=0x00000001000d93f4
- (void)_setBrailleElement:(id)arg1 resetBrailleCursor:(id)arg2 rotorSelection:(id)arg3;	// IMP=0x00000001000d9230
- (void)setBrailleElement:(id)arg1 resetBrailleCursor:(_Bool)arg2 rotorSelection:(id)arg3;	// IMP=0x00000001000d911c
- (void)_setBrailleString:(id)arg1 type:(id)arg2 timeout:(id)arg3 priority:(id)arg4 langCode:(id)arg5 brailleLineRangeValue:(id)arg6;	// IMP=0x00000001000d8990
- (void)setBrailleString:(id)arg1 type:(int)arg2 timeout:(double)arg3 langCode:(id)arg4 brailleLineRange:(struct _NSRange)arg5 isBrailleLineRangeKnown:(_Bool)arg6;	// IMP=0x00000001000d87b8
- (void)_filterUnacceptableBrailleStrings:(id)arg1;	// IMP=0x00000001000d8678
- (void)applyBrailleSubstitutions:(id)arg1;	// IMP=0x00000001000d83f4
- (void)_handleStatusRouterForIndex:(long long)arg1;	// IMP=0x00000001000d81e4
- (void)_updateStatusCells;	// IMP=0x00000001000d782c
- (_Bool)statusCellShowsText;	// IMP=0x00000001000d781c
- (_Bool)statusCellShowsGeneral;	// IMP=0x00000001000d780c
- (void)_updateStatusCellPrefs;	// IMP=0x00000001000d76b8
@property(readonly, nonatomic) _Bool bluetoothBrailleDisplayConnected;
- (void)setSingleLetterQuickNavOn:(_Bool)arg1;	// IMP=0x00000001000d7688
- (void)_updateHelpEnabled;	// IMP=0x00000001000d75e0
- (void)_updateBrailleKeyDebouncePrefs;	// IMP=0x00000001000d7584
- (void)_updateWordWrapPrefs;	// IMP=0x00000001000d7524
- (void)_initializeExpandedStatusCellDictionaries;	// IMP=0x00000001000d6f20
- (void)_handleBrailleTranslate:(id)arg1;	// IMP=0x00000001000d6f1c
- (void)_handleBrailleStatusRouter:(id)arg1;	// IMP=0x00000001000d6e94
- (void)_handleBrailleRouter:(id)arg1;	// IMP=0x00000001000d687c
- (void)_handleBrailleAnnouncementModeOn:(id)arg1;	// IMP=0x00000001000d682c
- (void)testingExitDisplayMode;	// IMP=0x00000001000d67d0
- (void)_exitDisplayMode;	// IMP=0x00000001000d67c0
- (void)_handleBrailleToggleEightDot:(id)arg1;	// IMP=0x00000001000d6620
- (void)_handleBrailleNextOutputMode:(id)arg1;	// IMP=0x00000001000d6610
- (void)_handleBrailleNextInputMode:(id)arg1;	// IMP=0x00000001000d6600
- (void)_handleBrailleMode:(id)arg1 input:(_Bool)arg2;	// IMP=0x00000001000d636c
- (void)updateBrailleMode:(_Bool)arg1;	// IMP=0x00000001000d628c
- (long long)inputContractionMode;	// IMP=0x00000001000d6218
- (long long)outputContractionMode;	// IMP=0x00000001000d61a4
- (_Bool)_supportsMode:(long long)arg1;	// IMP=0x00000001000d6104
- (void)_handleBrailleToggleContractions:(id)arg1;	// IMP=0x00000001000d5fac
- (void)_handleBraillePanRight:(id)arg1;	// IMP=0x00000001000d5f40
- (void)_handleBraillePanLeft:(id)arg1;	// IMP=0x00000001000d5ed4
- (void)_initializeCommands;	// IMP=0x00000001000d5b18
- (void)_handleEvent:(id)arg1;	// IMP=0x00000001000d5a00
- (void)handleEvent:(id)arg1;	// IMP=0x00000001000d5980
- (void)updateStatusCellPrefs;	// IMP=0x00000001000d5924
- (void)handleSettingsChange:(id)arg1;	// IMP=0x00000001000d57fc
- (_Bool)_languageIsCJK;	// IMP=0x00000001000d56d4
- (void)setTextSearchModeOn:(_Bool)arg1;	// IMP=0x00000001000d56c4
- (void)updateUsesNemethForMath;	// IMP=0x00000001000d5664
- (void)_setBrailleSubstitutionLanguage:(id)arg1;	// IMP=0x00000001000d524c
- (void)_setBrailleTable:(id)arg1;	// IMP=0x00000001000d5138
- (void)updateBrailleLanguage;	// IMP=0x00000001000d4ff8
- (long long)_adjustedRotorIndex:(long long)arg1 inDirection:(long long)arg2 rotorItems:(id)arg3;	// IMP=0x00000001000d4fac
- (_Bool)_shouldIncludeServiceNameForSpokenBrailleRotorAnnouncementOfTable:(id)arg1 rotorItems:(id)arg2 locale:(id)arg3;	// IMP=0x00000001000d4bf4
- (long long)_indexOfBrailleTable:(id)arg1 inRotorItems:(id)arg2;	// IMP=0x00000001000d4a54
- (void)announceBrailleTable:(id)arg1 isDefault:(_Bool)arg2;	// IMP=0x00000001000d488c
- (id)adjustBrailleLanguageRotorInDirection:(long long)arg1 isDefault:(out _Bool *)arg2;	// IMP=0x00000001000d4560
- (void)_updateRealtimeElementStatus;	// IMP=0x00000001000d4098
- (void)_updateRealtimeElementStatusFromTimer;	// IMP=0x00000001000d404c
- (void)updateRealtimeElements:(id)arg1;	// IMP=0x00000001000d4008
- (void)_waitForBrailleClientConnection;	// IMP=0x00000001000d3f70
- (void)_setBrailleClientEnabled:(id)arg1;	// IMP=0x00000001000d3df8
- (void)_updateBrailleInputSettings;	// IMP=0x00000001000d3cc4
- (void)updateBrailleInputSettings;	// IMP=0x00000001000d3c8c
- (void)updateBrailleOutputSettings;	// IMP=0x00000001000d3c54
- (void)_updateBrailleOutputSettings;	// IMP=0x00000001000d3bb8
- (void)_textShortcutsDidChange;	// IMP=0x00000001000d3b78
- (void)textShortcutsDidChange;	// IMP=0x00000001000d3b58
- (void)dealloc;	// IMP=0x00000001000d3aec
- (id)init;	// IMP=0x00000001000d2f68

@end

