//
//     Generated by classdumpios 1.0.1 (64 bit) (iOS port by DreamDevLost)(Debug version compiled Sep 26 2020 13:48:20).
//
//  Copyright (C) 1997-2019 Steve Nygard.
//

#import "VOTGesturedTextInputManager.h"

#import "BKSAccelerometerDelegate-Protocol.h"
#import "VOTBrailleGestureTranslatorDelegate-Protocol.h"
#import "VOTGesturedTextInputManagerRequiredMethods-Protocol.h"

@class AXDispatchTimer, BKSAccelerometer, NSArray, NSDictionary, NSMutableDictionary, NSString, VOTBrailleGestureSpellingSuggestionHandler, VOTBrailleGestureTranslator, VOTTextMovementManager;
@protocol BSInvalidatable, VOTBrailleGestureManagerDelegate;

@interface VOTBrailleGestureManager : VOTGesturedTextInputManager <VOTBrailleGestureTranslatorDelegate, BKSAccelerometerDelegate, VOTGesturedTextInputManagerRequiredMethods>
{
    VOTBrailleGestureTranslator *_gestureTranslator;	// 8 = 0x8
    VOTBrailleGestureSpellingSuggestionHandler *_spellingSuggestionHandler;	// 16 = 0x10
    BKSAccelerometer *_accelerometer;	// 24 = 0x18
    NSMutableDictionary *_allTouchLocationsByIdentifier;	// 32 = 0x20
    NSMutableDictionary *_firstTouchLocationsByIdentifier;	// 40 = 0x28
    _Bool _shouldUpdateDotPositions;	// 48 = 0x30
    _Bool _exploring;	// 49 = 0x31
    _Bool _splitting;	// 50 = 0x32
    _Bool _didMoveFingersTooFarForInput;	// 51 = 0x33
    _Bool _didAnnounceExplorationMode;	// 52 = 0x34
    _Bool _didAnnounceBrailleTypingProperties;	// 53 = 0x35
    _Bool _didStartFullGesture;	// 54 = 0x36
    _Bool _didEnterInvalidGesture;	// 55 = 0x37
    int _keyboardOrientation;	// 56 = 0x38
    id <VOTBrailleGestureManagerDelegate> _brailleGestureManagerDelegate;	// 64 = 0x40
    long long _typingMode;	// 72 = 0x48
    NSString *_lastPrintBrailleCharacter;	// 80 = 0x50
    NSDictionary *_lastTouchLocationsByIdentifier;	// 88 = 0x58
    AXDispatchTimer *_speakingDelayTimer;	// 96 = 0x60
    AXDispatchTimer *_brailleTypingPropertiesAnnouncementTimer;	// 104 = 0x68
    AXDispatchTimer *_warningTonesTimer;	// 112 = 0x70
    AXDispatchTimer *_lockScreenDimmingTimer;	// 120 = 0x78
    AXDispatchTimer *_logBSIUsageTimer;	// 128 = 0x80
    id <BSInvalidatable> _disableIdleTimerAssertion;	// 136 = 0x88
    VOTTextMovementManager *_movementManager;	// 144 = 0x90
    NSArray *_calibrationStartTouchPoints;	// 152 = 0x98
}

- (void).cxx_destruct;	// IMP=0x00000001000ffe7c
@property(retain, nonatomic) NSArray *calibrationStartTouchPoints; // @synthesize calibrationStartTouchPoints=_calibrationStartTouchPoints;
@property(retain, nonatomic) VOTTextMovementManager *movementManager; // @synthesize movementManager=_movementManager;
@property(retain, nonatomic) id <BSInvalidatable> disableIdleTimerAssertion; // @synthesize disableIdleTimerAssertion=_disableIdleTimerAssertion;
@property(retain, nonatomic) AXDispatchTimer *logBSIUsageTimer; // @synthesize logBSIUsageTimer=_logBSIUsageTimer;
@property(retain, nonatomic) AXDispatchTimer *lockScreenDimmingTimer; // @synthesize lockScreenDimmingTimer=_lockScreenDimmingTimer;
@property(nonatomic) _Bool didEnterInvalidGesture; // @synthesize didEnterInvalidGesture=_didEnterInvalidGesture;
@property(nonatomic) _Bool didStartFullGesture; // @synthesize didStartFullGesture=_didStartFullGesture;
@property(retain, nonatomic) AXDispatchTimer *warningTonesTimer; // @synthesize warningTonesTimer=_warningTonesTimer;
@property(retain, nonatomic) AXDispatchTimer *brailleTypingPropertiesAnnouncementTimer; // @synthesize brailleTypingPropertiesAnnouncementTimer=_brailleTypingPropertiesAnnouncementTimer;
@property(retain, nonatomic) AXDispatchTimer *speakingDelayTimer; // @synthesize speakingDelayTimer=_speakingDelayTimer;
@property(retain, nonatomic) NSDictionary *lastTouchLocationsByIdentifier; // @synthesize lastTouchLocationsByIdentifier=_lastTouchLocationsByIdentifier;
@property(copy, nonatomic) NSString *lastPrintBrailleCharacter; // @synthesize lastPrintBrailleCharacter=_lastPrintBrailleCharacter;
@property(nonatomic) int keyboardOrientation; // @synthesize keyboardOrientation=_keyboardOrientation;
@property(nonatomic) _Bool didAnnounceBrailleTypingProperties; // @synthesize didAnnounceBrailleTypingProperties=_didAnnounceBrailleTypingProperties;
@property(nonatomic) _Bool didAnnounceExplorationMode; // @synthesize didAnnounceExplorationMode=_didAnnounceExplorationMode;
@property(nonatomic) _Bool didMoveFingersTooFarForInput; // @synthesize didMoveFingersTooFarForInput=_didMoveFingersTooFarForInput;
@property(nonatomic, getter=isSplitting) _Bool splitting; // @synthesize splitting=_splitting;
@property(nonatomic, getter=isExploring) _Bool exploring; // @synthesize exploring=_exploring;
@property(nonatomic) _Bool shouldUpdateDotPositions; // @synthesize shouldUpdateDotPositions=_shouldUpdateDotPositions;
@property(nonatomic) long long typingMode; // @synthesize typingMode=_typingMode;
@property(nonatomic) __weak id <VOTBrailleGestureManagerDelegate> brailleGestureManagerDelegate; // @synthesize brailleGestureManagerDelegate=_brailleGestureManagerDelegate;
- (void)accelerometer:(id)arg1 didChangeDeviceOrientation:(int)arg2;	// IMP=0x00000001000ffb00
- (void)accelerometer:(id)arg1 didAccelerateWithTimeStamp:(double)arg2 x:(float)arg3 y:(float)arg4 z:(float)arg5 eventType:(int)arg6;	// IMP=0x00000001000ffafc
- (void)_cancelWarningTones;	// IMP=0x00000001000ffaa4
- (void)_playWarningTones:(unsigned long long)arg1 completion:(CDUnknownBlockType)arg2;	// IMP=0x00000001000ff824
- (void)_playWarningTone;	// IMP=0x00000001000ff7ac
- (void)_playBonk;	// IMP=0x00000001000ff734
- (id)_outputRequestForText:(id)arg1 hint:(id)arg2 useKeyboardLanguage:(_Bool)arg3 shouldQueue:(_Bool)arg4 isInsert:(_Bool)arg5 isSuggestion:(_Bool)arg6 isDelete:(_Bool)arg7 speakLiterally:(_Bool)arg8 otherLanguage:(id)arg9;	// IMP=0x00000001000ff208
- (void)_speakText:(id)arg1 hint:(id)arg2 useKeyboardLanguage:(_Bool)arg3 shouldQueue:(_Bool)arg4 isInsert:(_Bool)arg5 isSuggestion:(_Bool)arg6 isDelete:(_Bool)arg7 speakLiterally:(_Bool)arg8 otherLanguage:(id)arg9;	// IMP=0x00000001000ff128
- (void)_speakText:(id)arg1 hint:(id)arg2;	// IMP=0x00000001000ff0b8
- (void)_speakText:(id)arg1 useKeyboardLanguage:(_Bool)arg2 shouldQueue:(_Bool)arg3 isInsert:(_Bool)arg4 isDelete:(_Bool)arg5 speakLiterally:(_Bool)arg6;	// IMP=0x00000001000ff070
- (void)_speakText:(id)arg1 useKeyboardLanguage:(_Bool)arg2 shouldQueue:(_Bool)arg3;	// IMP=0x00000001000ff058
- (void)_speakText:(id)arg1 useKeyboardLanguage:(_Bool)arg2;	// IMP=0x00000001000ff048
- (void)_flashInsertedTextIfAllowed:(id)arg1;	// IMP=0x00000001000fefa4
- (void)_updateBrailleUI;	// IMP=0x00000001000fee60
- (void)_handleTouchPoints:(id)arg1;	// IMP=0x00000001000fe7ac
- (_Bool)_handleCarriageReturnSwipe;	// IMP=0x00000001000fe70c
- (id)_languageCodeForSpeakingAndBrailleTranslation;	// IMP=0x00000001000fe498
- (id)_languageCodeForSpellChecking;	// IMP=0x00000001000fe434
- (id)_languageCodeForBrailleTable;	// IMP=0x00000001000fe364
- (void)_handleTranslateImmediately;	// IMP=0x00000001000fe2b0
- (void)_handleChangeBrailleMode:(_Bool)arg1;	// IMP=0x00000001000fdde0
- (id)_printBrailleForTouchPoints:(id)arg1;	// IMP=0x00000001000fdcdc
- (void)_inputBrailleFromSeriesOfTouchPoints:(id)arg1;	// IMP=0x00000001000fdc64
- (void)_inputBrailleFromTouchPoints:(id)arg1;	// IMP=0x00000001000fdba4
- (_Bool)_isAdjustTextSegmentTypeEvent:(id)arg1;	// IMP=0x00000001000fdae0
- (_Bool)_isAdjustTextSegmentEvent:(id)arg1;	// IMP=0x00000001000fda1c
- (_Bool)_isSelectEvent:(id)arg1;	// IMP=0x00000001000fd958
- (_Bool)_isCarriageReturnSwipeEvent:(id)arg1;	// IMP=0x00000001000fd8fc
- (_Bool)_isToggleLockedConfigurationEvent:(id)arg1;	// IMP=0x00000001000fd8a0
- (_Bool)_isTranslateImmediatelyEvent:(id)arg1;	// IMP=0x00000001000fd844
- (_Bool)_isPreviousBrailleModeEvent:(id)arg1;	// IMP=0x00000001000fd7e8
- (_Bool)_isNextBrailleModeEvent:(id)arg1;	// IMP=0x00000001000fd78c
- (void)_scheduleExploringModeIfNeeded;	// IMP=0x00000001000fd5e4
- (void)_updateDotNumberCirclesForPrintBraille:(id)arg1;	// IMP=0x00000001000fd480
- (id)_newBrailleInput;	// IMP=0x00000001000fd418
- (void)_handleFingersOnScreen:(id)arg1 didAddOrRemoveFingers:(_Bool)arg2;	// IMP=0x00000001000fce58
- (void)_cleanUpTouchesIncludingCalibrationStartPoints:(_Bool)arg1;	// IMP=0x00000001000fcd4c
- (_Bool)_handleAllFingersLifted;	// IMP=0x00000001000fca74
- (void)_handleCalibrationTimeout;	// IMP=0x00000001000fc9c4
- (id)_spokenStringForPrintBraille:(id)arg1 useLongForm:(_Bool)arg2;	// IMP=0x00000001000fc764
- (id)_spokenStringForPrintBraille:(id)arg1;	// IMP=0x00000001000fc754
- (void)_enumerateDotNumbersForPrintBraille:(id)arg1 usingBlock:(CDUnknownBlockType)arg2;	// IMP=0x00000001000fc5e8
- (void)_speakPrintBrailleForExploration;	// IMP=0x00000001000fc364
- (void)_calibrateWithTouchPoints:(id)arg1;	// IMP=0x00000001000fc2b8
- (id)_stringWithFirstPart:(id)arg1 secondPart:(id)arg2;	// IMP=0x00000001000fc250
- (void)_endExploringDotPatterns;	// IMP=0x00000001000fc204
- (void)_beginExploringDotPatterns;	// IMP=0x00000001000fc14c
- (id)_touchPointsForCalibrationGivenFirstPoints:(id)arg1 lastPoints:(id)arg2;	// IMP=0x00000001000fc0b8
- (_Bool)_isCalibrationEndPattern:(id)arg1;	// IMP=0x00000001000fc034
- (_Bool)_isCalibrationStartPattern:(id)arg1;	// IMP=0x00000001000fbfb0
- (_Bool)_patternIncludesEveryFinger:(id)arg1;	// IMP=0x00000001000fbf08
- (_Bool)_deviceSupportsMoreThanFiveTouches;	// IMP=0x00000001000fbf04
- (_Bool)_requiresLaTeXInput;	// IMP=0x00000001000fbdec
- (_Bool)_shouldUseContractedBraille;	// IMP=0x00000001000fbdd4
- (_Bool)_hasContractedBraillePreference;	// IMP=0x00000001000fbd7c
- (_Bool)_canUseContractedBraille;	// IMP=0x00000001000fbd30
- (void)_updateShouldUseContractedBraille;	// IMP=0x00000001000fbcd4
- (void)_updateBrailleTypingPropertiesAndDelayAnnouncement:(_Bool)arg1 forUnlockConfiguration:(_Bool)arg2;	// IMP=0x00000001000fb7e4
- (void)_updateBrailleTypingPropertiesAndDelayAnnouncement:(_Bool)arg1;	// IMP=0x00000001000fb7d4
- (void)_announceBrailleTypingPropertiesIncludingOrientation:(_Bool)arg1 typingMode:(_Bool)arg2 brailleMode:(_Bool)arg3 forUnlockConfiguration:(_Bool)arg4;	// IMP=0x00000001000fb468
- (id)_descriptionForCurrentBrailleMode;	// IMP=0x00000001000fb374
- (void)_appendOrientationToAnnouncement:(id)arg1;	// IMP=0x00000001000fb008
- (unsigned long long)_numberOfDots;	// IMP=0x00000001000fafdc
- (_Bool)_shouldUseEightDotBraille;	// IMP=0x00000001000faf64
- (void)eventFactoryDidBeginSplitGesture:(id)arg1;	// IMP=0x00000001000faeb8
- (id)hintForAppLaunch;	// IMP=0x00000001000fae9c
- (_Bool)shouldAllowRotorEvents;	// IMP=0x00000001000fae6c
- (void)didInputWordBackspace;	// IMP=0x00000001000fae54
- (void)didInputBackspace;	// IMP=0x00000001000fae0c
- (_Bool)performCustomWordBackspace;	// IMP=0x00000001000fabf8
- (_Bool)performCustomBackspace;	// IMP=0x00000001000faa60
- (void)applyPreviousSuggestionToElement:(id)arg1;	// IMP=0x00000001000faa50
- (void)applyNextSuggestionToElement:(id)arg1;	// IMP=0x00000001000faa40
- (void)_applySuggestionToElement:(id)arg1 direction:(long long)arg2;	// IMP=0x00000001000fa830
- (void)_outputChosenSuggestion:(id)arg1;	// IMP=0x00000001000fa760
- (void)_insertCurrentSelectedSuggestion:(id)arg1;	// IMP=0x00000001000fa644
- (_Bool)performNextKeyboardLanguage;	// IMP=0x00000001000fa544
- (_Bool)isNextKeyboardLanguageEvent:(id)arg1;	// IMP=0x00000001000fa4e8
- (_Bool)isLaunchAppEvent:(id)arg1;	// IMP=0x00000001000fa44c
- (_Bool)isPreviousSuggestionEvent:(id)arg1;	// IMP=0x00000001000fa3f0
- (_Bool)isNextSuggestionEvent:(id)arg1;	// IMP=0x00000001000fa394
- (_Bool)isWordBackspaceEvent:(id)arg1;	// IMP=0x00000001000fa338
- (_Bool)isBackspaceEvent:(id)arg1;	// IMP=0x00000001000fa2dc
- (_Bool)isSpaceEvent:(id)arg1;	// IMP=0x00000001000fa280
- (_Bool)isReturnKeyEvent:(id)arg1;	// IMP=0x00000001000fa224
@property(readonly, nonatomic) unsigned long long mode;
- (_Bool)_handleAdjustTextSegmentTypeEvent:(id)arg1;	// IMP=0x00000001000fa08c
- (_Bool)_shouldReverseDots;	// IMP=0x00000001000fa038
- (void)updateWithString:(id)arg1;	// IMP=0x00000001000f9fa4
- (void)_handleWordBreak:(id)arg1;	// IMP=0x00000001000f9ec0
- (void)sendCarriageReturnForElement:(id)arg1;	// IMP=0x00000001000f9e18
- (void)pressReturnKeyForElement:(id)arg1;	// IMP=0x00000001000f9c18
- (void)inputSpaceForElement:(id)arg1;	// IMP=0x00000001000f99d0
- (_Bool)processTouchLocations:(id)arg1 isFirstTouch:(_Bool)arg2;	// IMP=0x00000001000f9804
- (_Bool)processTapWithFingerCount:(unsigned long long)arg1;	// IMP=0x00000001000f97fc
- (_Bool)processEvent:(id)arg1;	// IMP=0x00000001000f92bc
- (void)clearCurrentString;	// IMP=0x00000001000f9264
- (void)setActive:(_Bool)arg1;	// IMP=0x00000001000f8bb0
- (void)dealloc;	// IMP=0x00000001000f8b3c
- (id)init;	// IMP=0x00000001000f88cc

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

