//
//     Generated by classdumpios 1.0.1 (64 bit) (iOS port by DreamDevLost)(Debug version compiled Sep 26 2020 13:48:20).
//
//  Copyright (C) 1997-2019 Steve Nygard.
//

#import <objc/NSObject.h>

#import "VOTCustomActionContext-Protocol.h"
#import "VOTDirectTouchManagementProtocol-Protocol.h"
#import "VOTElementFetchDelegateProtocol-Protocol.h"
#import "VOTElementManagementProtocol-Protocol.h"
#import "VOTElementRotorDelegate-Protocol.h"
#import "VOTExplorerElementManagerDelegate-Protocol.h"
#import "VOTOutputManagerObserver-Protocol.h"
#import "VOTOutputRequestCompletionProtocol-Protocol.h"
#import "VOTPointerEventObserver-Protocol.h"
#import "VOTRotorManagementProtocol-Protocol.h"
#import "VOTTVGestureRepeaterDelegate-Protocol.h"
#import "VOTVisionEngineResultUpdateDelegate-Protocol.h"

@class AXDragManager, AXIndexMap, NSArray, NSData, NSDictionary, NSLock, NSMutableArray, NSMutableDictionary, NSMutableSet, NSMutableString, NSNumber, NSSet, NSString, SCRCTargetSelectorTimer, SCRCThread, SCRCThreadKey, VOTDragOutputManager, VOTElement, VOTElementFetcher, VOTElementRotor, VOTElementUniqueIdentification, VOTEvent, VOTExplorerElementManager, VOTOutputRequest, VOTRotor, VOTTVGestureRepeater, VOTTVSpeechRequestManager, VOTTextMovementManager, VOTUpdateFocusContext, _VOTTextMarkerRange;
@protocol VOTElementUpdateProtocol;

@interface VOTElementManager : NSObject <VOTExplorerElementManagerDelegate, VOTTVGestureRepeaterDelegate, VOTElementRotorDelegate, VOTCustomActionContext, VOTPointerEventObserver, VOTOutputManagerObserver, VOTOutputRequestCompletionProtocol, VOTElementFetchDelegateProtocol, VOTDirectTouchManagementProtocol, VOTRotorManagementProtocol, VOTVisionEngineResultUpdateDelegate, VOTElementManagementProtocol>
{
    AXIndexMap *_commands;	// 8 = 0x8
    VOTElement *_lastValidElement;	// 16 = 0x10
    NSArray *_currentApplications;	// 24 = 0x18
    VOTElement *_touchContainer;	// 32 = 0x20
    long long _touchContainersTouchedCount;	// 40 = 0x28
    long long _autofillElementIndex;	// 48 = 0x30
    long long _readWordCyclingCount;	// 56 = 0x38
    VOTElement *_currentElement;	// 64 = 0x40
    VOTElement *_anyThreadCurrentElement;	// 72 = 0x48
    struct os_unfair_lock_s _anyThreadCurrentElementLock;	// 80 = 0x50
    VOTElement *_currentOpaqueParent;	// 88 = 0x58
    VOTElementFetcher *_fetchManager;	// 96 = 0x60
    NSMutableString *_elementTypingBuffer;	// 104 = 0x68
    struct _NSRange _elementSelectionRangeBufferInternal;	// 112 = 0x70
    struct _NSRange _elementSelectionRangeBufferForValueChange;	// 128 = 0x80
    struct _NSRange _elementSelectionRangeBufferForSelectionChange;	// 144 = 0x90
    NSString *_webSelectionText;	// 160 = 0xa0
    unsigned long long _elementMathIndex;	// 168 = 0xa8
    NSArray *_elementMathSegments;	// 176 = 0xb0
    unsigned long long _elementMathSegmentGranularity;	// 184 = 0xb8
    struct _NSRange _highlightedCharacterRange;	// 192 = 0xc0
    _Bool _textRangeBeingDisplayed;	// 208 = 0xd0
    VOTElement *_firstResponderElement;	// 216 = 0xd8
    VOTElement *_previousTouchTypingKey;	// 224 = 0xe0
    struct _NSRange _previousTableOrCollectionViewIndexPath;	// 232 = 0xe8
    double _previousTableOrCollectionViewRowTime;	// 248 = 0xf8
    double _lastAdjustValueTime;	// 256 = 0x100
    double _lastLiveRegionUpdate;	// 264 = 0x108
    double _lastPopupTime;	// 272 = 0x110
    double _lastTextInsertionAnnouncementTime;	// 280 = 0x118
    double _lastItemSelectionFromTouch;	// 288 = 0x120
    double _lastSentBannerTimerReset;	// 296 = 0x128
    SCRCTargetSelectorTimer *_updateLayoutTimer;	// 304 = 0x130
    SCRCTargetSelectorTimer *_containerFrameDrawingTimer;	// 312 = 0x138
    SCRCTargetSelectorTimer *_visualRotorFadeTimer;	// 320 = 0x140
    SCRCTargetSelectorTimer *_webPageLoadingSoundTimer;	// 328 = 0x148
    SCRCTargetSelectorTimer *_appSuspensionSoundTimer;	// 336 = 0x150
    SCRCTargetSelectorTimer *_simulatedPressOutputTimer;	// 344 = 0x158
    SCRCTargetSelectorTimer *_updateSwipeFramesTimer;	// 352 = 0x160
    SCRCTargetSelectorTimer *_simulatedForceLiftTimer;	// 360 = 0x168
    SCRCTargetSelectorTimer *_updateAppFromTimer;	// 368 = 0x170
    SCRCTargetSelectorTimer *_updateWithNativeFocusTimer;	// 376 = 0x178
    SCRCTargetSelectorTimer *_reachabilityWaitForTrackingTimer;	// 384 = 0x180
    SCRCTargetSelectorTimer *_elementMonitorTimer;	// 392 = 0x188
    NSMutableDictionary *_elementMonitorCache;	// 400 = 0x190
    SCRCTargetSelectorTimer *_pointerSpeakElementTimer;	// 408 = 0x198
    VOTElement *_lastSpeakUnderPointerElement;	// 416 = 0x1a0
    SCRCTargetSelectorTimer *_keyboardAlternativeModeActivationTimer;	// 424 = 0x1a8
    SCRCTargetSelectorTimer *_alternativeKeyDismissalTimer;	// 432 = 0x1b0
    _Bool _keyboardAlternativesVisible;	// 440 = 0x1b8
    struct CGPoint _keyboardAlternativeVisibleTrackingPoint;	// 448 = 0x1c0
    struct CGPoint _keyboardAlternativeVisibleStartPoint;	// 464 = 0x1d0
    NSString *_lastScrollStatus;	// 480 = 0x1e0
    struct CGPoint _fingerLocation;	// 488 = 0x1e8
    struct CGPoint _lastValidElementLocation;	// 504 = 0x1f8
    VOTElementRotor *_elementRotor;	// 520 = 0x208
    VOTRotor *_speechRotor;	// 528 = 0x210
    NSMutableArray *_cachedSpringBoardIcons;	// 536 = 0x218
    long long _selectedTextStartLocation;	// 544 = 0x220
    long long _selectedTextOperation;	// 552 = 0x228
    NSMutableDictionary *_lastSeenFontProperties;	// 560 = 0x230
    NSDictionary *_lastSeenLineAndColumn;	// 568 = 0x238
    int _lastSeenApplicationOrientation;	// 576 = 0x240
    NSData *_textMarker;	// 584 = 0x248
    _VOTTextMarkerRange *_textMarkerRange;	// 592 = 0x250
    NSArray *_lineArray;	// 600 = 0x258
    long long _lineArrayPosition;	// 608 = 0x260
    struct CGRect _lineFrame;	// 616 = 0x268
    NSMutableDictionary *_flowFromElements;	// 648 = 0x288
    NSString *_bookLineString;	// 656 = 0x290
    _Bool _bookUpdatedCurrentLine;	// 664 = 0x298
    long long _bookLineNumber;	// 672 = 0x2a0
    struct _NSRange _bookLineRange;	// 680 = 0x2a8
    long long _bookCursorPosition;	// 696 = 0x2b8
    NSString *_bookPageScrollString;	// 704 = 0x2c0
    VOTElement *_bookSubelement;	// 712 = 0x2c8
    long long _bookLastContentMovementDirection;	// 720 = 0x2d0
    long long _bookLastContentMovementUnit;	// 728 = 0x2d8
    VOTOutputRequest *_bookPageContentOutputRequest;	// 736 = 0x2e0
    VOTOutputRequest *_readAllOutputRequest;	// 744 = 0x2e8
    VOTOutputRequest *_announcementRequest;	// 752 = 0x2f0
    int _announcementPid;	// 760 = 0x2f8
    NSString *_announcementOriginalString;	// 768 = 0x300
    VOTElement *_elementBeforeAlert;	// 776 = 0x308
    VOTElement *_elementBeforePopup;	// 784 = 0x310
    VOTElement *_elementBeforeStatusBarMovement;	// 792 = 0x318
    VOTElement *_webFormControlBeforeInteraction;	// 800 = 0x320
    double _lastWebKeyboardDismissTime;	// 808 = 0x328
    NSDictionary *_keyboardKeyCommands;	// 816 = 0x330
    struct CGPoint _passthroughFinish;	// 824 = 0x338
    struct CGPoint _passthroughOffset;	// 840 = 0x348
    struct CGPoint _passthroughStart;	// 856 = 0x358
    NSMutableSet *_directInteractionElements;	// 872 = 0x368
    NSString *_continuousPathSuggestion;	// 880 = 0x370
    SCRCTargetSelectorTimer *_continuousPathIdleTimer;	// 888 = 0x378
    double _webPageLoadingProgress;	// 896 = 0x380
    long long _cursorBorderHitCount;	// 904 = 0x388
    NSString *_lastTitleElemenTitle;	// 912 = 0x390
    NSLock *_trackingLock;	// 920 = 0x398
    VOTEvent *_mostRecentTrackingEvent;	// 928 = 0x3a0
    VOTElementUniqueIdentification *_labeledElementIdentification;	// 936 = 0x3a8
    VOTElement *_cachedLabelElement;	// 944 = 0x3b0
    long long _customActionIndex;	// 952 = 0x3b8
    NSString *_customActionIdentifier;	// 960 = 0x3c0
    NSDictionary *_currentPublicCustomRotorItemResult;	// 968 = 0x3c8
    NSString *_dataComprehensionActionIdentifier;	// 976 = 0x3d0
    NSArray *_allElements;	// 984 = 0x3d8
    VOTElement *_previousItemChooserElement;	// 992 = 0x3e0
    struct SCRCMathAverageValue _roadTravelAngle;	// 1000 = 0x3e8
    VOTElement *_upcomingRoadElement;	// 1440 = 0x5a0
    struct CGPoint _firstRoadTravelPoint;	// 1448 = 0x5a8
    struct CGPoint _lastRoadTravelPoint;	// 1464 = 0x5b8
    struct CGPoint _intersectionTravelPoint;	// 1480 = 0x5c8
    _Bool _playingMapSound;	// 1496 = 0x5d8
    _Bool _shouldContinueRoadTracking;	// 1497 = 0x5d9
    SCRCTargetSelectorTimer *_switchRoadsAtIntersectionTimer;	// 1504 = 0x5e0
    VOTOutputRequest *_switchRoadsOutputRequest;	// 1512 = 0x5e8
    VOTOutputRequest *_endOfRoadApproachingRequest;	// 1520 = 0x5f0
    VOTOutputRequest *_startTrackingRoadRequest;	// 1528 = 0x5f8
    double _switchedToRoadTime;	// 1536 = 0x600
    _Bool _approachingEndOfRoad;	// 1544 = 0x608
    struct CGPoint _explorationStartPoint;	// 1552 = 0x610
    NSString *_webSearchText;	// 1568 = 0x620
    int _countOutputBlockGeneration;	// 1576 = 0x628
    NSMutableDictionary *_focusedElementsByElementCommunityIdentifier;	// 1584 = 0x630
    SCRCThread *_elementManagerThread;	// 1592 = 0x638
    SCRCThread *_systemEventThread;	// 1600 = 0x640
    SCRCThreadKey *_threadKey;	// 1608 = 0x648
    struct {
        _Bool lastEventWasIdle;
        _Bool elementCenterSoundPlaying;
        _Bool inStatusBar;
        _Bool focusIsOnElement;
        _Bool tapShouldHandleAutofill;
        _Bool tapShouldHandleTextOperation;
        _Bool usePenumbraForKeyboardKeys;
        _Bool shouldSpeakNextLayoutChange;
        _Bool visualRotorDisplayed;
        _Bool touchingOnNothing;
        _Bool isReadingAll;
        _Bool isReadingAllBook;
        _Bool previousScrollWasBookContentMovement;
        _Bool performedFlickNavigation;
        _Bool performedKeyboardNavigation;
        _Bool performedRotorTextNavigation;
        _Bool performedSearch;
        _Bool performedElementUpdateForSelectionChange;
        _Bool inPassthroughMode;
        _Bool didTouchTypingOutputStart;
        _Bool inSearchTextMode;
        _Bool itemChooserVisible;
        _Bool shouldSpeakSameLineTouched;
        _Bool inDirectTouchMode;
        _Bool currentElementAllowsDirectTouch;
        _Bool shouldTurnTrackingIntoDirectTouch;
        _Bool shouldUpdateRotorForElement;
        _Bool avoidAnnouncingDirectTouchArea;
        _Bool wasSendingToNativeSlide;
        _Bool preventCustomRotorItemIndexReset;
        _Bool shouldTriggerAlternativeKeyActivation;
        _Bool setReachabilityIsActiveWhileFingerDown;
        _Bool watchDisplayDidTurnOn;
        _Bool inKeyboardTextSelectionMode;
        _Bool continuousPathActivationDesired;
        _Bool continuousPathKeyboardBegan;
        _Bool isContinuousPathOutsideBounds;
        _Bool isMonitoringElements;
    } _flags;	// 1616 = 0x650
    double _lastAnnouncementNotificationTime;	// 1656 = 0x678
    double _lastLockScreenAlertSpokenTime;	// 1664 = 0x680
    struct _NSRange _keyboardTextSelectionStartRange;	// 1672 = 0x688
    _Bool _inTextProcessingRotorMode;	// 1688 = 0x698
    long long _lastUserTextSelectionDirection;	// 1696 = 0x6a0
    VOTElement *_currentSubElement;	// 1704 = 0x6a8
    long long _misspelledWordReplacementCycleIndex;	// 1712 = 0x6b0
    double _performedTextSelectionOperation;	// 1720 = 0x6b8
    _Bool _didPeekEvent;	// 1728 = 0x6c0
    _Bool _isInPreview;	// 1729 = 0x6c1
    NSMutableArray *_touchEventElements;	// 1736 = 0x6c8
    unsigned long long _lastTableRow;	// 1744 = 0x6d0
    _Bool _systemIsSleeping;	// 1752 = 0x6d8
    unsigned long long _elementSearchGeneration;	// 1760 = 0x6e0
    long long _elementUnitIndex;	// 1768 = 0x6e8
    struct _NSRange _elementUnitOutputRange;	// 1776 = 0x6f0
    SCRCTargetSelectorTimer *_elementUpdatesFrequentlyTimer;	// 1792 = 0x700
    NSString *_cachedFrequentUpdateText;	// 1800 = 0x708
    unsigned long long _lastSeenLineStartPositionForFontProperties;	// 1808 = 0x710
    _Bool _inUnitTestingMode;	// 1816 = 0x718
    _Bool _speakNonfocusableElementsAfterDelay;	// 1817 = 0x719
    _Bool _shouldSilenceAnnouncements;	// 1818 = 0x71a
    long long _tvInteractionMode;	// 1824 = 0x720
    _Bool _shouldEnableSoundEffects;	// 1832 = 0x728
    _Bool _explorerElementsNeedUpdate;	// 1833 = 0x729
    _Bool _shouldReadExplorerElementsAfterSpeechFinished;	// 1834 = 0x72a
    SCRCTargetSelectorTimer *_readExplorerElementsAfterSpeechFinishedTimer;	// 1840 = 0x730
    SCRCTargetSelectorTimer *_updateVisualsTimer;	// 1848 = 0x738
    SCRCTargetSelectorTimer *_updatePreferredTVInteractionModeTimer;	// 1856 = 0x740
    _Bool _isShowingVoiceOverEnabledWarningBanner;	// 1864 = 0x748
    double _lastUserEventNotificationTime;	// 1872 = 0x750
    NSString *_lastSpokenGuideElementHeaderText;	// 1880 = 0x758
    _Bool _systemNotificationInProgress;	// 1888 = 0x760
    AXDragManager *_dragManager;	// 1896 = 0x768
    VOTDragOutputManager *_dragOutputManager;	// 1904 = 0x770
    NSNumber *_lastScreenChangeSourceIdentifier;	// 1912 = 0x778
    _Bool _lastHandledEventWasRotorMovement;	// 1920 = 0x780
    _Bool _didIgnoreLastFirstResponderChangeOnSelectionChange;	// 1921 = 0x781
    _Bool _unitTestingMode;	// 1922 = 0x782
    _Bool _didReceiveForceUpdateChangeToken;	// 1923 = 0x783
    _Bool _didCacheSideAppDividerElement;	// 1924 = 0x784
    _Bool _shouldSnarfCrown;	// 1925 = 0x785
    _Bool _inTextSelection;	// 1926 = 0x786
    _Bool _selectingRightward;	// 1927 = 0x787
    _Bool _isUpdatingFocus;	// 1928 = 0x788
    _Bool _needsUpdateFocus;	// 1929 = 0x789
    _Bool _waitingToRetryFocus;	// 1930 = 0x78a
    id <VOTElementUpdateProtocol> _updateDelegate;	// 1936 = 0x790
    double _timeSpentOnNothing;	// 1944 = 0x798
    double _lastNothingSoundTime;	// 1952 = 0x7a0
    double _lastAlertTime;	// 1960 = 0x7a8
    double _lastSelectionChangeTime;	// 1968 = 0x7b0
    double _lastScreenChangeNotificationTime;	// 1976 = 0x7b8
    double _lastPressOnMediaSessionElement;	// 1984 = 0x7c0
    double _touchTypingStartTime;	// 1992 = 0x7c8
    double _lastFirstResponderChangeTime;	// 2000 = 0x7d0
    double _lastCursorBorderHitTime;	// 2008 = 0x7d8
    double _lastTemporaryQuickNavDisableTime;	// 2016 = 0x7e0
    double _lastEventOccurredTime;	// 2024 = 0x7e8
    NSString *_lastEventCommand;	// 2032 = 0x7f0
    double _lastValueChangeTime;	// 2040 = 0x7f8
    double _lastWebPageLoadTime;	// 2048 = 0x800
    double _lastSearchForElementsTime;	// 2056 = 0x808
    unsigned long long _currentSimilarTraits;	// 2064 = 0x810
    VOTElement *_previousFirstResponder;	// 2072 = 0x818
    NSString *_previousFirstResponderValue;	// 2080 = 0x820
    NSMutableDictionary *_fingersFromTouchCommands;	// 2088 = 0x828
    unsigned long long _lastTextPressAction;	// 2096 = 0x830
    VOTElement *_nativeFocusElement;	// 2104 = 0x838
    VOTElement *_initialReadAllElement;	// 2112 = 0x840
    CDUnknownBlockType _elementManagerHandledEventCallback;	// 2120 = 0x848
    CDUnknownBlockType _currentElementChangedCallback;	// 2128 = 0x850
    double _lastActivationTime;	// 2136 = 0x858
    double _lastSilencedAlertTime;	// 2144 = 0x860
    double _lastScreenWakeViaPlayPause;	// 2152 = 0x868
    double _lastExternalUnlockTime;	// 2160 = 0x870
    double _lastFolderOperationTime;	// 2168 = 0x878
    double _lastHomeButtonPressTime;	// 2176 = 0x880
    double _lastBlockedRequestBySiriOrDictationTime;	// 2184 = 0x888
    VOTElement *_nextElementToFocus;	// 2192 = 0x890
    NSString *_nextStringToSpeakOnScreenChange;	// 2200 = 0x898
    VOTElement *_previousTableOrCollectionView;	// 2208 = 0x8a0
    VOTElement *_previousTableOrCollectionViewApplication;	// 2216 = 0x8a8
    VOTElement *_cachedSideAppDividerElement;	// 2224 = 0x8b0
    NSArray *_cachedAdditionalElementCommunities;	// 2232 = 0x8b8
    VOTElement *_mostRecentElementCommunity;	// 2240 = 0x8c0
    VOTElement *_firstTrackedAppInGesture;	// 2248 = 0x8c8
    NSString *_springBoardActionHandlerIdentifier;	// 2256 = 0x8d0
    VOTOutputRequest *_delayedNotificationAnnouncementRequest;	// 2264 = 0x8d8
    long long _lastElementChangeAction;	// 2272 = 0x8e0
    VOTElement *_lastTrackingUpdateAppsFailureApplication;	// 2280 = 0x8e8
    double _lastTrackingUpdateAppsFailureTime;	// 2288 = 0x8f0
    double _continuousPathTimeout;	// 2296 = 0x8f8
    NSDictionary *_previousContextDescriptors;	// 2304 = 0x900
    NSDictionary *_currentContextDescriptors;	// 2312 = 0x908
    VOTElement *_lastElementForAttemptToShowContextMenu;	// 2320 = 0x910
    double _lastAttemptToShowContextMenuTime;	// 2328 = 0x918
    VOTExplorerElementManager *_explorerElementManager;	// 2336 = 0x920
    VOTTVSpeechRequestManager *_tvSpeechRequestManager;	// 2344 = 0x928
    VOTTVGestureRepeater *_tvGestureRepeater;	// 2352 = 0x930
    long long _forceUpdateMask;	// 2360 = 0x938
    long long _lastElementHeadingLevel;	// 2368 = 0x940
    long long _lastElementBlockquoteLevel;	// 2376 = 0x948
    NSLock *_tvAccessLock;	// 2384 = 0x950
    VOTUpdateFocusContext *_updateFocusContext;	// 2392 = 0x958
    long long _focusRetryAttempts;	// 2400 = 0x960
    VOTElement *_lastContainerForCustomRotorHint;	// 2408 = 0x968
    NSSet *_previousCustomRotorsForRotorHint;	// 2416 = 0x970
    VOTTextMovementManager *_textSelectionMovementManager;	// 2424 = 0x978
    NSString *_previouslySpokenComputerVisionSummary;	// 2432 = 0x980
    VOTOutputRequest *_lastRequestBlockedBySiriOrDictation;	// 2440 = 0x988
}

+ (void)_exitThread:(id)arg1;	// IMP=0x000000010005b9b8
+ (void)initialize;	// IMP=0x000000010005a5fc
- (void).cxx_destruct;	// IMP=0x00000001000b21a0
@property(retain, nonatomic) VOTOutputRequest *lastRequestBlockedBySiriOrDictation; // @synthesize lastRequestBlockedBySiriOrDictation=_lastRequestBlockedBySiriOrDictation;
@property(retain, nonatomic) NSString *previouslySpokenComputerVisionSummary; // @synthesize previouslySpokenComputerVisionSummary=_previouslySpokenComputerVisionSummary;
@property(retain, nonatomic) VOTTextMovementManager *textSelectionMovementManager; // @synthesize textSelectionMovementManager=_textSelectionMovementManager;
@property(retain, nonatomic) NSSet *previousCustomRotorsForRotorHint; // @synthesize previousCustomRotorsForRotorHint=_previousCustomRotorsForRotorHint;
@property(retain, nonatomic) VOTElement *lastContainerForCustomRotorHint; // @synthesize lastContainerForCustomRotorHint=_lastContainerForCustomRotorHint;
@property(nonatomic) _Bool waitingToRetryFocus; // @synthesize waitingToRetryFocus=_waitingToRetryFocus;
@property(nonatomic) long long focusRetryAttempts; // @synthesize focusRetryAttempts=_focusRetryAttempts;
@property(retain, nonatomic) VOTUpdateFocusContext *updateFocusContext; // @synthesize updateFocusContext=_updateFocusContext;
@property(retain, nonatomic) NSLock *tvAccessLock; // @synthesize tvAccessLock=_tvAccessLock;
@property(nonatomic) long long lastElementBlockquoteLevel; // @synthesize lastElementBlockquoteLevel=_lastElementBlockquoteLevel;
@property(nonatomic) long long lastElementHeadingLevel; // @synthesize lastElementHeadingLevel=_lastElementHeadingLevel;
@property(nonatomic) long long tvInteractionMode; // @synthesize tvInteractionMode=_tvInteractionMode;
@property(nonatomic) long long forceUpdateMask; // @synthesize forceUpdateMask=_forceUpdateMask;
@property(nonatomic) _Bool needsUpdateFocus; // @synthesize needsUpdateFocus=_needsUpdateFocus;
@property(nonatomic) _Bool isUpdatingFocus; // @synthesize isUpdatingFocus=_isUpdatingFocus;
@property(retain, nonatomic) VOTTVGestureRepeater *tvGestureRepeater; // @synthesize tvGestureRepeater=_tvGestureRepeater;
@property(retain, nonatomic) VOTTVSpeechRequestManager *tvSpeechRequestManager; // @synthesize tvSpeechRequestManager=_tvSpeechRequestManager;
@property(retain, nonatomic) VOTExplorerElementManager *explorerElementManager; // @synthesize explorerElementManager=_explorerElementManager;
@property(nonatomic) double lastAttemptToShowContextMenuTime; // @synthesize lastAttemptToShowContextMenuTime=_lastAttemptToShowContextMenuTime;
@property(retain, nonatomic) VOTElement *lastElementForAttemptToShowContextMenu; // @synthesize lastElementForAttemptToShowContextMenu=_lastElementForAttemptToShowContextMenu;
@property(retain, nonatomic) NSDictionary *currentContextDescriptors; // @synthesize currentContextDescriptors=_currentContextDescriptors;
@property(retain, nonatomic) NSDictionary *previousContextDescriptors; // @synthesize previousContextDescriptors=_previousContextDescriptors;
@property(nonatomic) double continuousPathTimeout; // @synthesize continuousPathTimeout=_continuousPathTimeout;
@property(nonatomic) double lastTrackingUpdateAppsFailureTime; // @synthesize lastTrackingUpdateAppsFailureTime=_lastTrackingUpdateAppsFailureTime;
@property(retain, nonatomic) VOTElement *lastTrackingUpdateAppsFailureApplication; // @synthesize lastTrackingUpdateAppsFailureApplication=_lastTrackingUpdateAppsFailureApplication;
@property(nonatomic) long long lastElementChangeAction; // @synthesize lastElementChangeAction=_lastElementChangeAction;
@property(retain, nonatomic) VOTOutputRequest *delayedNotificationAnnouncementRequest; // @synthesize delayedNotificationAnnouncementRequest=_delayedNotificationAnnouncementRequest;
@property(nonatomic) _Bool selectingRightward; // @synthesize selectingRightward=_selectingRightward;
@property(nonatomic) _Bool inTextSelection; // @synthesize inTextSelection=_inTextSelection;
@property(nonatomic) _Bool shouldSnarfCrown; // @synthesize shouldSnarfCrown=_shouldSnarfCrown;
@property(copy, nonatomic) NSString *springBoardActionHandlerIdentifier; // @synthesize springBoardActionHandlerIdentifier=_springBoardActionHandlerIdentifier;
@property(retain, nonatomic) VOTElement *firstTrackedAppInGesture; // @synthesize firstTrackedAppInGesture=_firstTrackedAppInGesture;
@property(retain, nonatomic) VOTElement *mostRecentElementCommunity; // @synthesize mostRecentElementCommunity=_mostRecentElementCommunity;
@property(retain, nonatomic) NSArray *cachedAdditionalElementCommunities; // @synthesize cachedAdditionalElementCommunities=_cachedAdditionalElementCommunities;
@property(retain, nonatomic) VOTElement *cachedSideAppDividerElement; // @synthesize cachedSideAppDividerElement=_cachedSideAppDividerElement;
@property(nonatomic) _Bool didCacheSideAppDividerElement; // @synthesize didCacheSideAppDividerElement=_didCacheSideAppDividerElement;
@property(retain, nonatomic) VOTElement *previousTableOrCollectionViewApplication; // @synthesize previousTableOrCollectionViewApplication=_previousTableOrCollectionViewApplication;
@property(retain, nonatomic) VOTElement *previousTableOrCollectionView; // @synthesize previousTableOrCollectionView=_previousTableOrCollectionView;
@property(nonatomic) _Bool didReceiveForceUpdateChangeToken; // @synthesize didReceiveForceUpdateChangeToken=_didReceiveForceUpdateChangeToken;
@property(retain, nonatomic) NSString *nextStringToSpeakOnScreenChange; // @synthesize nextStringToSpeakOnScreenChange=_nextStringToSpeakOnScreenChange;
@property(retain, nonatomic) VOTElement *nextElementToFocus; // @synthesize nextElementToFocus=_nextElementToFocus;
@property(nonatomic) double lastBlockedRequestBySiriOrDictationTime; // @synthesize lastBlockedRequestBySiriOrDictationTime=_lastBlockedRequestBySiriOrDictationTime;
@property(nonatomic) double lastHomeButtonPressTime; // @synthesize lastHomeButtonPressTime=_lastHomeButtonPressTime;
@property(nonatomic) double lastFolderOperationTime; // @synthesize lastFolderOperationTime=_lastFolderOperationTime;
@property(nonatomic) double lastExternalUnlockTime; // @synthesize lastExternalUnlockTime=_lastExternalUnlockTime;
@property(nonatomic) double lastScreenWakeViaPlayPause; // @synthesize lastScreenWakeViaPlayPause=_lastScreenWakeViaPlayPause;
@property(nonatomic) double lastSilencedAlertTime; // @synthesize lastSilencedAlertTime=_lastSilencedAlertTime;
@property(nonatomic) double lastActivationTime; // @synthesize lastActivationTime=_lastActivationTime;
@property(copy, nonatomic) CDUnknownBlockType currentElementChangedCallback; // @synthesize currentElementChangedCallback=_currentElementChangedCallback;
@property(copy, nonatomic) CDUnknownBlockType elementManagerHandledEventCallback; // @synthesize elementManagerHandledEventCallback=_elementManagerHandledEventCallback;
@property(nonatomic) _Bool unitTestingMode; // @synthesize unitTestingMode=_unitTestingMode;
@property(retain, nonatomic) VOTElement *initialReadAllElement; // @synthesize initialReadAllElement=_initialReadAllElement;
@property(retain, nonatomic) VOTElement *nativeFocusElement; // @synthesize nativeFocusElement=_nativeFocusElement;
@property(nonatomic) unsigned long long lastTextPressAction; // @synthesize lastTextPressAction=_lastTextPressAction;
@property(nonatomic) _Bool didIgnoreLastFirstResponderChangeOnSelectionChange; // @synthesize didIgnoreLastFirstResponderChangeOnSelectionChange=_didIgnoreLastFirstResponderChangeOnSelectionChange;
@property(retain, nonatomic) NSMutableDictionary *fingersFromTouchCommands; // @synthesize fingersFromTouchCommands=_fingersFromTouchCommands;
@property(copy, nonatomic) NSString *previousFirstResponderValue; // @synthesize previousFirstResponderValue=_previousFirstResponderValue;
@property(retain, nonatomic) VOTElement *previousFirstResponder; // @synthesize previousFirstResponder=_previousFirstResponder;
@property(nonatomic) unsigned long long currentSimilarTraits; // @synthesize currentSimilarTraits=_currentSimilarTraits;
@property(nonatomic) double lastSearchForElementsTime; // @synthesize lastSearchForElementsTime=_lastSearchForElementsTime;
@property(nonatomic) double lastWebPageLoadTime; // @synthesize lastWebPageLoadTime=_lastWebPageLoadTime;
@property(nonatomic) double lastValueChangeTime; // @synthesize lastValueChangeTime=_lastValueChangeTime;
@property(retain, nonatomic) NSString *lastEventCommand; // @synthesize lastEventCommand=_lastEventCommand;
@property(nonatomic) double lastEventOccurredTime; // @synthesize lastEventOccurredTime=_lastEventOccurredTime;
@property(nonatomic) double lastTemporaryQuickNavDisableTime; // @synthesize lastTemporaryQuickNavDisableTime=_lastTemporaryQuickNavDisableTime;
@property(nonatomic) double lastCursorBorderHitTime; // @synthesize lastCursorBorderHitTime=_lastCursorBorderHitTime;
@property(nonatomic) double lastFirstResponderChangeTime; // @synthesize lastFirstResponderChangeTime=_lastFirstResponderChangeTime;
@property(nonatomic) double touchTypingStartTime; // @synthesize touchTypingStartTime=_touchTypingStartTime;
@property(nonatomic) double lastPressOnMediaSessionElement; // @synthesize lastPressOnMediaSessionElement=_lastPressOnMediaSessionElement;
@property(nonatomic) double lastScreenChangeNotificationTime; // @synthesize lastScreenChangeNotificationTime=_lastScreenChangeNotificationTime;
@property(nonatomic) double lastSelectionChangeTime; // @synthesize lastSelectionChangeTime=_lastSelectionChangeTime;
@property(nonatomic) double lastAlertTime; // @synthesize lastAlertTime=_lastAlertTime;
@property(nonatomic) double lastNothingSoundTime; // @synthesize lastNothingSoundTime=_lastNothingSoundTime;
@property(nonatomic) double timeSpentOnNothing; // @synthesize timeSpentOnNothing=_timeSpentOnNothing;
@property(nonatomic) __weak id <VOTElementUpdateProtocol> updateDelegate; // @synthesize updateDelegate=_updateDelegate;
@property(retain, nonatomic) VOTElement *touchContainer; // @synthesize touchContainer=_touchContainer;
- (void)fillCacheWithElements:(id)arg1;	// IMP=0x00000001000b1c48
- (void)_setFetchManager:(id)arg1;	// IMP=0x00000001000b1bc8
- (id)_fetchManager;	// IMP=0x00000001000b1bc0
- (id)_lastSeenFontProperties;	// IMP=0x00000001000b1bb8
- (void)outputManager:(id)arg1 willProcessNextRequest:(id)arg2;	// IMP=0x00000001000b1bb4
- (void)outputManagerDidFinishProcessingQueuedRequests:(id)arg1;	// IMP=0x00000001000b1bb0
- (long long)actionsRotorAddBehaviorForElementRotor:(id)arg1;	// IMP=0x00000001000b1b90
- (long long)tvInteractionModeForElementRotor:(id)arg1;	// IMP=0x00000001000b1b84
- (void)rotor:(id)arg1 didChangeFrom:(long long)arg2 to:(long long)arg3 userInitiated:(_Bool)arg4;	// IMP=0x00000001000b1aac
- (id)elementRotor;	// IMP=0x00000001000b1aa4
- (void)moveToElementMatchingRotorType:(long long)arg1 inDirection:(long long)arg2;	// IMP=0x00000001000b1a8c
- (void)resetFrequentUpdateTextCache;	// IMP=0x00000001000b1a7c
- (void)_elementUpdatesFrequently;	// IMP=0x00000001000b165c
- (_Bool)_elementMonitoringOutputElement:(id)arg1 userMonitored:(_Bool)arg2;	// IMP=0x00000001000b1350
- (_Bool)stringIsTextAttachment:(id)arg1;	// IMP=0x00000001000b1280
- (id)_textAttachmentElementForString:(id)arg1 inRange:(struct _NSRange)arg2;	// IMP=0x00000001000b11b0
- (void)outputTextSegmentForRange:(struct _NSRange)arg1 string:(id)arg2 element:(id)arg3 usePhonetics:(_Bool)arg4;	// IMP=0x00000001000b0c08
- (id)_listItemLabelForAXAttributedString:(id)arg1;	// IMP=0x00000001000b0b38
- (void)updateIndexesForOutputRange:(struct _NSRange)arg1 segment:(long long)arg2 direction:(long long)arg3 outputStringLength:(unsigned long long)arg4;	// IMP=0x00000001000b0b0c
- (struct _NSRange)outputRangeForTextSegmentUnit:(long long)arg1 direction:(long long)arg2 string:(id)arg3 element:(id)arg4;	// IMP=0x00000001000b0a0c
- (void)outputNextTextSegmentUnit:(long long)arg1 direction:(long long)arg2 string:(id)arg3 element:(id)arg4;	// IMP=0x00000001000b0920
- (struct _NSRange)_outputRangeForCharacterSegment:(id)arg1 direction:(long long)arg2;	// IMP=0x00000001000b0824
- (void)gestureRepeater:(id)arg1 repeaterEventDidFire:(long long)arg2;	// IMP=0x00000001000b0788
- (void)gestureRepeaterWillSendFirstRepeaterEvent:(id)arg1;	// IMP=0x00000001000b0710
- (void)_sendUserEventOccurredIfNeeded;	// IMP=0x00000001000b0664
- (void)explorerElementManager:(id)arg1 didFinishReadAll:(_Bool)arg2;	// IMP=0x00000001000b0590
- (void)explorerElementManager:(id)arg1 willReadElement:(id)arg2;	// IMP=0x00000001000b050c
- (_Bool)explorerElementManagerShouldBeInUnitTestingMode:(id)arg1;	// IMP=0x00000001000b0500
- (void)explorerElementManager:(id)arg1 didSetExplorerElementFocus:(id)arg2;	// IMP=0x00000001000b04f4
- (void)willBeginReadAll:(id)arg1;	// IMP=0x00000001000b04ec
- (void)_updateExplorerElementsIfNeeded;	// IMP=0x00000001000b02fc
- (void)__interruptSpeachAndPlayBorderHitSound;	// IMP=0x00000001000b01f8
- (void)_interruptSpeachAndPlayBorderHitSound;	// IMP=0x00000001000b01d4
- (void)__sendOutputRequest:(id)arg1;	// IMP=0x00000001000b0144
- (void)_speakMessages:(id)arg1 cannotBeInterrupted:(_Bool)arg2 pitch:(long long)arg3 announcement:(_Bool)arg4 brailleOnly:(_Bool)arg5;	// IMP=0x00000001000afcf8
- (void)_speakMessages:(id)arg1 cannotBeInterrupted:(_Bool)arg2 pitch:(long long)arg3;	// IMP=0x00000001000afce4
- (void)_speak:(id)arg1 cannotBeInterrupted:(_Bool)arg2 pitch:(long long)arg3 announcement:(_Bool)arg4 brailleOnly:(_Bool)arg5;	// IMP=0x00000001000afbf0
- (void)_speak:(id)arg1 cannotBeInterrupted:(_Bool)arg2 pitch:(long long)arg3;	// IMP=0x00000001000afbdc
- (void)_speak:(id)arg1 cannotBeInterrupted:(_Bool)arg2 announcement:(_Bool)arg3 brailleOnly:(_Bool)arg4;	// IMP=0x00000001000afbc4
- (void)_speak:(id)arg1 cannotBeInterrupted:(_Bool)arg2;	// IMP=0x00000001000afbac
- (void)__tvOS_handleValueChangedWithType:(id)arg1 oldValue:(id)arg2 newValue:(id)arg3 insertedTextOrNil:(id)arg4 isSecureText:(_Bool)arg5;	// IMP=0x00000001000af660
- (void)_readExplorerElementsAfterSpeechFinishedTimerFired;	// IMP=0x00000001000af4f4
- (void)__tvOS_handleUpdatePreferredTVInteractionModeTimer;	// IMP=0x00000001000af444
- (void)__handleUpdateVisualsTimer;	// IMP=0x00000001000af3d0
- (void)__updateVoiceOverEnabledWarningBannerVisibility;	// IMP=0x00000001000af3cc
- (void)_performTouchPadTapAtLocation:(struct CGPoint)arg1;	// IMP=0x00000001000af3c8
- (id)__targetElementForFocusElement:(id)arg1 mustBeAccessibilityElement:(_Bool)arg2;	// IMP=0x00000001000af290
- (id)__consumeAppTransitionForAnnouncingIfNeeded:(id)arg1;	// IMP=0x00000001000af0a8
- (_Bool)_bundleIdentifierIsHostedByPineBoard:(id)arg1;	// IMP=0x00000001000aefe0
- (void)_tvOS_updateWithNativeFocus;	// IMP=0x00000001000ae394
- (void)_tvOS_retryUpdateWithNativeFocus;	// IMP=0x00000001000ae21c
- (id)_focusElementForFocusUpdate:(id)arg1;	// IMP=0x00000001000ae0b0
- (void)_tvOS_handleUpdateWithNativeFocusFromTimer;	// IMP=0x00000001000ae020
- (void)_tvOS_updateWithNativeFocus:(id)arg1 withDelay:(double)arg2;	// IMP=0x00000001000ade50
- (void)_tvOS_updateWithNativeFocus:(id)arg1 withDelayNumber:(id)arg2;	// IMP=0x00000001000addf4
- (_Bool)_didFocusUpdateOriginateFromFocusedApp:(id)arg1;	// IMP=0x00000001000adc14
- (void)__updateElementVisuals;	// IMP=0x00000001000adae0
- (void)__tvOS_toggleSilenceAnnouncementsUserPreference;	// IMP=0x00000001000ad99c
- (long long)_tvOS_userPreferredNonDirectTouchInteractionMode;	// IMP=0x00000001000ad994
- (void)__tvOS_toggleSpeakNonfocusableElementsAfterDelayUserPreference;	// IMP=0x00000001000ad850
- (void)__tvOS_toggleAudioDescriptions;	// IMP=0x00000001000ad6a8
- (void)__sendHIDEvents:(id)arg1 postEventDelays:(id)arg2;	// IMP=0x00000001000ad3d8
- (void)__sendTVRemoteCommand:(unsigned long long)arg1;	// IMP=0x00000001000acfe0
- (_Bool)_sendTVRemoteCommandOverrideForAXCommand:(long long)arg1;	// IMP=0x00000001000acf2c
- (void)__handleTVSelectButtonClicked;	// IMP=0x00000001000acbf8
- (void)__handleTVMenuButtonClicked;	// IMP=0x00000001000acae8
- (_Bool)handleTVSelectButtonClicked;	// IMP=0x00000001000acae0
- (_Bool)handleTVMenuButtonClicked;	// IMP=0x00000001000aca78
- (_Bool)_isDictationInProgressForCurrentApp;	// IMP=0x00000001000ac9d4
@property(nonatomic) _Bool shouldEnableSoundEffects;
@property(nonatomic) _Bool shouldSilenceAnnouncements;
@property(nonatomic) _Bool speakNonfocusableElementsAfterDelay;
- (id)focusedApplication:(id)arg1;	// IMP=0x00000001000ac478
- (void)_setLastSeenDeviceOrientation:(int)arg1;	// IMP=0x00000001000ac470
- (void)_handlePerformEjectButtonPress:(id)arg1;	// IMP=0x00000001000ac458
- (void)_handlePerformVolumeDownButtonPress:(id)arg1;	// IMP=0x00000001000ac440
- (void)_handlePerformVolumeUpButtonPress:(id)arg1;	// IMP=0x00000001000ac428
- (_Bool)shouldAllowSpeaking;	// IMP=0x00000001000ac3f4
- (void)_handleKeyboardCommandEvent:(id)arg1;	// IMP=0x00000001000aba14
- (void)_handleBrailleWordWrapToggleEvent:(id)arg1;	// IMP=0x00000001000ab8e4
- (void)_handleBrailleRefreshEvent:(id)arg1;	// IMP=0x00000001000ab7d8
- (void)_handleBrailleEvent:(id)arg1;	// IMP=0x00000001000ab768
- (void)_handleActivateBrailleScreenInput:(id)arg1;	// IMP=0x00000001000ab750
- (void)_handleAnnounceQuickNav:(id)arg1;	// IMP=0x00000001000ab4d4
- (void)_handleToggleQuickNav:(id)arg1;	// IMP=0x00000001000ab42c
- (void)_handleToggleSingleLetterQuickNav:(id)arg1;	// IMP=0x00000001000ab0b4
- (void)_handleToggleVoiceOverModifierKeyLock:(id)arg1;	// IMP=0x00000001000aafac
- (void)_handleSiriFinishedListening:(id)arg1;	// IMP=0x00000001000aaf90
- (void)_handleSiriStartedListening:(id)arg1;	// IMP=0x00000001000aaf28
- (void)_handleSiriFinishedTalking:(id)arg1;	// IMP=0x00000001000aae7c
- (void)_handleSiriStartedTalking:(id)arg1;	// IMP=0x00000001000aae60
- (void)_handleHomeButtonPress;	// IMP=0x00000001000aab30
- (void)handleHomeButtonPress;	// IMP=0x00000001000aaac0
- (void)handlePlayPauseButtonPress;	// IMP=0x00000001000aaa9c
- (void)_handlePlayPauseButtonPress;	// IMP=0x00000001000aaa64
- (_Bool)_shouldSuppressSpeechForPlayPause;	// IMP=0x00000001000aaa34
- (void)handleStateReset;	// IMP=0x00000001000aaa10
- (void)_handleStateReset;	// IMP=0x00000001000aa9a4
- (void)_handleDecreaseVolume:(id)arg1;	// IMP=0x00000001000aa930
- (void)_handleIncreaseVolume:(id)arg1;	// IMP=0x00000001000aa8c0
- (void)_handleVolumeChange:(float)arg1;	// IMP=0x00000001000aa748
- (void)_handleRotateOrientation:(id)arg1;	// IMP=0x00000001000aa6d8
- (_Bool)_shouldAllowSpeakThisGesture;	// IMP=0x00000001000aa634
- (_Bool)allowsSystemControlEventForPosition:(int)arg1;	// IMP=0x00000001000aa54c
- (void)_handleSiriShortcutEvent:(id)arg1;	// IMP=0x00000001000aa4d4
- (void)_handleSystemCommandSwitchToNextApp:(id)arg1;	// IMP=0x00000001000aa488
- (void)_handleSystemCommandSwitchToPreviousApp:(id)arg1;	// IMP=0x00000001000aa43c
- (void)_handleSystemCommandTakeScreenshot:(id)arg1;	// IMP=0x00000001000aa3f4
- (void)_handleSystemCommandToggleReachability:(id)arg1;	// IMP=0x00000001000aa3ac
- (void)_handleSystemCommandActivateAccessibilityShortcut:(id)arg1;	// IMP=0x00000001000aa364
- (void)_handleSystemCommandSpotlight:(id)arg1;	// IMP=0x00000001000aa31c
- (void)_handleSystemCommandActivateLockButton:(id)arg1;	// IMP=0x00000001000aa2d4
- (void)_handleSystemCommandToggleAppSwitcher:(id)arg1;	// IMP=0x00000001000aa28c
- (void)_handleSystemCommandToggleDock:(id)arg1;	// IMP=0x00000001000aa244
- (void)_handleSystemCommandActivateSpeakScreen:(id)arg1;	// IMP=0x00000001000aa238
- (void)_handleSystemCommandControlCenter:(id)arg1;	// IMP=0x00000001000aa1f0
- (void)_handleSystemCommandNotificationCenter:(id)arg1;	// IMP=0x00000001000aa1a8
- (void)_handleSystemControlActivation:(id)arg1;	// IMP=0x00000001000aa030
- (void)_handleScrollByPageNotification:(id)arg1;	// IMP=0x00000001000a8f54
- (void)_handleAutoCorrectionMadeNotification:(id)arg1;	// IMP=0x00000001000a8d0c
- (void)_handleKeyboardChangedNotification;	// IMP=0x00000001000a8c90
- (void)_handleAutoCorrectionDisplayNotification:(id)arg1;	// IMP=0x00000001000a8a98
- (id)continuousPathSuggestion;	// IMP=0x00000001000a8a90
- (void)_handleUnmuteEligibleEventOccured;	// IMP=0x00000001000a8a48
- (void)_handleReleaseExclusiveAudioHardware;	// IMP=0x00000001000a8a2c
- (void)_handleRequestExclusiveAudioHardware;	// IMP=0x00000001000a8984
- (void)_handleStopSpeaking;	// IMP=0x00000001000a88f8
- (void)_handleScreenOffSilently;	// IMP=0x00000001000a88d8
- (void)_handleScreenOnSilently;	// IMP=0x00000001000a88b8
- (void)_handleScreenOff;	// IMP=0x00000001000a8820
- (void)_handleScreenOn;	// IMP=0x00000001000a87b4
- (void)_handleDidReceiveVisionEngineResult:(id)arg1;	// IMP=0x00000001000a846c
- (void)_handleCaptionsDisplayedNotification:(id)arg1;	// IMP=0x00000001000a8350
- (void)_captionsDisplayedWithTextRuns:(id)arg1;	// IMP=0x00000001000a80e4
- (void)_handleVisualsUpdate:(id)arg1;	// IMP=0x00000001000a80d8
- (void)_handleWebPageLoaded:(id)arg1;	// IMP=0x00000001000a7ce8
- (void)_webPageLoadingSound;	// IMP=0x00000001000a7c20
- (void)_clearWebLoadedSound;	// IMP=0x00000001000a7bec
- (void)_handleScreenChange:(id)arg1 sound:(id)arg2;	// IMP=0x00000001000a73f8
- (void)_updateDisplayWithCurrentElement;	// IMP=0x00000001000a73a8
- (void)_handleAlertReceived:(id)arg1 forApplication:(id)arg2;	// IMP=0x00000001000a699c
- (id)_retrieveDefaultElementForPosition:(struct CGPoint)arg1;	// IMP=0x00000001000a6644
- (void)_systemNotificationInProgressForRequest:(id)arg1;	// IMP=0x00000001000a65d0
- (void)_handleAnnouncementWithData:(id)arg1 pid:(int)arg2;	// IMP=0x00000001000a4978
- (void)_handleAnnouncement:(id)arg1;	// IMP=0x00000001000a4968
- (void)handleAnnouncement:(id)arg1;	// IMP=0x00000001000a4928
- (void)_handleAnnouncementNotification:(id)arg1;	// IMP=0x00000001000a4770
- (void)_reupdateTextSelectionInformation;	// IMP=0x00000001000a472c
- (void)_handleInvalidTextInputNotification:(id)arg1;	// IMP=0x00000001000a46b4
- (void)_handleInvalidStatusChanged:(id)arg1;	// IMP=0x00000001000a4600
- (void)_handleExpandedStatusChanged:(id)arg1;	// IMP=0x00000001000a4584
- (void)__handleExpandedStatusChanged;	// IMP=0x00000001000a4214
- (void)_handleAppSuspendAnimationProgressNotification:(id)arg1;	// IMP=0x00000001000a4114
- (void)_appSuspensionSoundTimer;	// IMP=0x00000001000a405c
- (void)_handleKeyboardKeySelectedNotification:(id)arg1;	// IMP=0x00000001000a3d80
- (void)_handleElementMoved:(struct __AXUIElement *)arg1;	// IMP=0x00000001000a3ba0
- (void)_processSilentValueChange;	// IMP=0x00000001000a3ac4
- (void)_processValueChangeWithFirstResponder:(id)arg1 existingFirstResponder:(_Bool)arg2 changeType:(id)arg3 changeOrigination:(long long)arg4 isQuiet:(_Bool)arg5;	// IMP=0x00000001000a2188
- (void)resetTextAndSelectionCaches;	// IMP=0x00000001000a2138
- (void)_handleTextReplacementOccurredNotification:(id)arg1;	// IMP=0x00000001000a20a0
- (void)_handleValueChangedNotification:(id)arg1;	// IMP=0x00000001000a1b0c
- (long long)typingFeedbackForKeyboardType;	// IMP=0x00000001000a1988
- (void)_cancelPreviousElementSearch;	// IMP=0x00000001000a196c
- (void)_updateCurrentElementForTextInputSelectionChangeIfNeeded;	// IMP=0x00000001000a1584
- (void)_elementSelectionRangeDidChange:(struct _NSRange)arg1 reason:(long long)arg2;	// IMP=0x00000001000a154c
- (void)_handleSelectionChangedNotification:(id)arg1;	// IMP=0x000000010009fcf0
- (_Bool)_isKeyboardLineMovement;	// IMP=0x000000010009fc48
- (void)_handleWebSelectionChangedNotification:(id)arg1;	// IMP=0x000000010009f71c
- (_Bool)_hasCurrentApplicationMatchingBlock:(CDUnknownBlockType)arg1;	// IMP=0x000000010009f6e0
- (id)_currentApplicationMatchingBlock:(CDUnknownBlockType)arg1;	// IMP=0x000000010009f6d0
- (_Bool)_hasApplicationMatchingBlock:(CDUnknownBlockType)arg1 inApplications:(id)arg2;	// IMP=0x000000010009f65c
- (id)_applicationMatchingBlock:(CDUnknownBlockType)arg1 inApplications:(id)arg2;	// IMP=0x000000010009f508
- (void)_outputWebLineWithMarkerRange:(id)arg1 withElement:(id)arg2;	// IMP=0x000000010009f298
- (_Bool)_shouldSwitchToFirstResponder:(id)arg1;	// IMP=0x000000010009f138
- (void)_handleFirstResponderChangedNotification:(id)arg1;	// IMP=0x000000010009ebfc
- (void)_handleNativeFocusItemChangedNotification:(id)arg1;	// IMP=0x000000010009e9bc
- (id)_firstResponderFromCurrentApplications;	// IMP=0x000000010009e888
- (void)_handleMoveToElementNotification:(id)arg1;	// IMP=0x000000010009e478
- (void)_moveToElement:(id)arg1 shouldPlaySound:(_Bool)arg2 echoSameTouchContainer:(_Bool)arg3 moveToElementNotification:(_Bool)arg4;	// IMP=0x000000010009e094
- (_Bool)_finishHandlingMoveToElementNotification:(id)arg1 shouldSyncNativeFocusElement:(id)arg2;	// IMP=0x000000010009dd90
- (id)_verifiedElementWithElement:(id)arg1 atPoint:(struct CGPoint)arg2;	// IMP=0x000000010009dc98
- (id)_verifiedElementWithElement:(id)arg1;	// IMP=0x000000010009d8a0
- (_Bool)_shouldAnnounceCustomRotorHintForElement:(id)arg1;	// IMP=0x000000010009d4f4
- (void)elementFetchFoundDirectTouchElements:(id)arg1;	// IMP=0x000000010009d4b4
- (void)_elementFetchFoundDirectTouchElements:(id)arg1;	// IMP=0x000000010009d3f8
- (void)updateCurrentElementFrame;	// IMP=0x000000010009d388
- (void)_updateCursorFrameForLineFrameMovement:(id)arg1;	// IMP=0x000000010009d25c
- (void)_updateCursorFrameForElementIfNeeded:(id)arg1;	// IMP=0x000000010009d1e0
- (void)_updateCurrentElementFrame;	// IMP=0x000000010009d168
- (void)_updateFirstResponder;	// IMP=0x000000010009d040
- (struct __AXUIElement *)_firstResponderAXUIElementRefFromCurrentApplications;	// IMP=0x000000010009cdec
- (void)setFirstResponder:(id)arg1;	// IMP=0x000000010009cd28
- (void)setCurrentElement:(id)arg1;	// IMP=0x000000010009ccb4
- (void)_updateFirstResponderTypingBuffer;	// IMP=0x000000010009cbb0
- (void)_handleLayoutChange:(_Bool)arg1;	// IMP=0x000000010009b190
- (void)_handleLayoutChangeFromTimer;	// IMP=0x000000010009b180
- (void)_handleElementChangedNotification:(id)arg1;	// IMP=0x000000010009aef0
- (void)_handleSystemLockedOutputBehavior:(id)arg1 shouldSendRequest:(_Bool *)arg2 startElement:(id *)arg3;	// IMP=0x000000010009ab1c
- (id)_firstElementWithCurrentElement:(id)arg1 focusedApplications:(id)arg2;	// IMP=0x000000010009a9e4
- (id)_getAutoSpeakWatchFaceElements:(id)arg1;	// IMP=0x000000010009a92c
- (void)_updateApplicationAndSpeak:(id)arg1;	// IMP=0x00000001000987c0
- (void)_testingSetApplications:(id)arg1;	// IMP=0x00000001000987b4
- (_Bool)_addApplicationLabelsAndSummariesToRequest:(id)arg1 applicationNames:(id *)arg2 summaryElements:(id *)arg3;	// IMP=0x00000001000982d4
- (id)_stringForApplicationWithName:(id)arg1 inApplications:(id)arg2 withRole:(long long)arg3;	// IMP=0x0000000100098008
- (id)_retrieveCachedFocusedElementForElementCommunity:(id)arg1;	// IMP=0x0000000100097d9c
- (void)_cacheFocusedElement:(id)arg1 forElementCommunity:(id)arg2;	// IMP=0x0000000100097ce4
- (id)_elementCommunityForElement:(id)arg1;	// IMP=0x0000000100097b60
- (id)_firstElementForFocusFromElementCommunities:(id)arg1 currentElement:(id)arg2;	// IMP=0x00000001000978ec
- (id)_firstResponderForApplications:(id)arg1;	// IMP=0x00000001000977ac
- (void)updateApplicationAndSpeak:(id)arg1;	// IMP=0x0000000100097724
- (void)voiceOverDidRegisterWithSystem;	// IMP=0x00000001000976dc
- (void)_handleUpdateAppFromTimer;	// IMP=0x000000010009761c
- (_Bool)_reDispatchUpdateAppFromTimerIfBundlesAreNotReady;	// IMP=0x00000001000973f8
- (id)_cachedSpringBoardIcon:(id)arg1;	// IMP=0x00000001000971ac
- (void)outputRequestFinished:(id)arg1;	// IMP=0x000000010009716c
- (void)_outputRequestFinished:(id)arg1;	// IMP=0x0000000100096aa0
- (double)_alternativeKeyActivateTime;	// IMP=0x0000000100096a2c
- (id)_updateTouchContainerForElement:(id)arg1 playSound:(_Bool)arg2;	// IMP=0x0000000100096874
- (void)_echoDifferentElement:(id)arg1 forEvent:(id)arg2;	// IMP=0x000000010009681c
- (void)_echoDifferentElement:(id)arg1 forEvent:(id)arg2 onlyOutputTouchContainerAndSounds:(_Bool)arg3 shouldPlayGuideWireSound:(_Bool)arg4 isProtectedApp:(_Bool)arg5;	// IMP=0x000000010009679c
- (void)_echoDifferentElement:(id)arg1 forEvent:(id)arg2 onlyOutputTouchContainerAndSounds:(_Bool)arg3 canSetAsCurrentElement:(_Bool)arg4 shouldPlayGuideWireSound:(_Bool)arg5 isProtectedApp:(_Bool)arg6 includeHint:(_Bool)arg7;	// IMP=0x000000010009565c
- (id)_getSpeakableContainerForContainer:(id)arg1;	// IMP=0x0000000100095520
- (void)_echoDifferentElement:(id)arg1 forEvent:(id)arg2 onlyOutputTouchContainerAndSounds:(_Bool)arg3 shouldPlayGuideWireSound:(_Bool)arg4;	// IMP=0x00000001000954b4
- (_Bool)_addElementCommunityNameIfNeededToRequest:(id)arg1 oldElementCommunity:(id)arg2 newElementCommunity:(id)arg3;	// IMP=0x0000000100095200
- (id)_echoDifferentTouchContainer:(id)arg1 forEvent:(id)arg2;	// IMP=0x0000000100094ff0
- (void)_drawTouchContainerFrame;	// IMP=0x0000000100094fe0
- (void)_echoNoElementForEvent:(id)arg1;	// IMP=0x0000000100094e98
- (void)_echoSameElement:(id)arg1 forEvent:(id)arg2;	// IMP=0x0000000100094e1c
- (void)_handleMapSameElement:(id)arg1 forEvent:(id)arg2;	// IMP=0x0000000100094780
- (void)_addFormattedStringToRequest:(id)arg1 formattedString:(id)arg2 withElement:(id)arg3;	// IMP=0x00000001000945b4
- (void)_switchToOtherRoad;	// IMP=0x0000000100094418
- (void)_processPassthroughAllowedWithEvent:(id)arg1 initialTouch:(_Bool)arg2;	// IMP=0x00000001000941e8
- (void)_finishPassthroughMode;	// IMP=0x000000010009415c
- (void)_echoStatusBarStatus:(id)arg1;	// IMP=0x0000000100094064
- (_Bool)_echoLineInElement:(id)arg1 forEvent:(id)arg2 forDifferentElement:(_Bool)arg3;	// IMP=0x00000001000935b0
- (void)_setLastSeenLineAndColumn:(id)arg1;	// IMP=0x0000000100093584
- (void)_outputDataDetectorIfPresent:(struct CGRect)arg1 element:(id)arg2 includeLinks:(_Bool)arg3;	// IMP=0x000000010009350c
- (id)_checkDataDetectorIfPresent:(struct CGRect)arg1 element:(id)arg2 includeLinks:(_Bool)arg3;	// IMP=0x00000001000931c0
- (_Bool)_shouldDismissKeyboardForMovingTooFarAlongYAxisWithEvent:(id)arg1;	// IMP=0x00000001000930fc
- (void)_handleTapAndHoldEventMonitor:(id)arg1;	// IMP=0x0000000100092d1c
- (void)_reachabilityHandleTrackingStopped;	// IMP=0x0000000100092d04
- (void)handleReachabilityToggled;	// IMP=0x0000000100092cac
- (void)_reachabilityWaitForTrackingTimeout;	// IMP=0x0000000100092c60
- (void)_continuousPathIdleTimer:(id)arg1;	// IMP=0x0000000100092a2c
- (void)_handleKeyboardContinuousPathDidBegin:(id)arg1;	// IMP=0x0000000100092944
- (void)_handleTracking:(id)arg1;	// IMP=0x0000000100091c2c
- (id)_handleProtectedAppLogicForEvent:(id)arg1 element:(id)arg2 point:(struct CGPoint)arg3;	// IMP=0x00000001000918a0
- (id)_currentMedusaApplications;	// IMP=0x000000010009182c
- (id)_copySideAppDividerElementIfApplicableForPoint:(struct CGPoint)arg1;	// IMP=0x00000001000917a4
- (id)_sideAppDividerElement;	// IMP=0x00000001000916f0
- (_Bool)_isPoint:(struct CGPoint)arg1 withinRangeForDividerElement:(id)arg2;	// IMP=0x0000000100091530
- (void)setDirectInteractionElement:(id)arg1;	// IMP=0x00000001000914f0
- (void)_setDirectInteractionElement:(id)arg1;	// IMP=0x000000010009136c
- (_Bool)_continueTrackingKeyboardKey:(id)arg1;	// IMP=0x0000000100091220
- (_Bool)_continueTrackingRoadElementWithPoint:(struct CGPoint)arg1;	// IMP=0x00000001000911ac
- (void)_handleToggleSideApp:(id)arg1;	// IMP=0x0000000100091130
- (void)_handleToggleSideAppIfAvailableInGestures:(id)arg1;	// IMP=0x0000000100090f1c
- (void)_handleNextKeyboardLanguage:(id)arg1;	// IMP=0x0000000100090f04
- (void)_handleOpenVoiceOverOptions:(id)arg1;	// IMP=0x0000000100090e84
- (void)_handleSwitchToRightElementCommunity:(id)arg1;	// IMP=0x0000000100090de8
- (void)_handleSwitchToLeftElementCommunity:(id)arg1;	// IMP=0x0000000100090d4c
- (void)_handleTopEdgePanLong:(id)arg1;	// IMP=0x0000000100090c6c
- (void)_handleTopEdgePanShort:(id)arg1;	// IMP=0x0000000100090b48
- (void)_handleBottomEdgePanLong:(id)arg1;	// IMP=0x0000000100090ad8
- (void)_handleBottomEdgePanShort:(id)arg1;	// IMP=0x0000000100090a44
- (void)_handleBottomEdgePanDown:(id)arg1;	// IMP=0x00000001000909b8
- (void)_handleEdgeSwipeBottom:(id)arg1;	// IMP=0x000000010009096c
- (void)_handleEdgeSwipeTop:(id)arg1;	// IMP=0x0000000100090920
- (void)_handleEdgeSwipeLeft:(id)arg1;	// IMP=0x000000010009091c
- (void)_handleEdgeSwipeRight:(id)arg1;	// IMP=0x0000000100090918
- (void)_handleSwitchToNextElementCommunity:(id)arg1;	// IMP=0x0000000100090904
- (void)_handleSwitchToPreviousElementCommunity:(id)arg1;	// IMP=0x00000001000908f0
- (void)_handleSwitchToElementCommunityPrevious:(_Bool)arg1 event:(id)arg2;	// IMP=0x000000010009053c
- (id)_allElementCommunitiesWithFocusedApplications:(id)arg1;	// IMP=0x00000001000903f4
- (id)_additionalElementCommunities;	// IMP=0x00000001000901d8
- (id)_elementToFocusWhenSwitchingToElementCommunity:(id)arg1;	// IMP=0x00000001000900dc
- (void)_endNativeSliding:(_Bool)arg1;	// IMP=0x0000000100090028
- (void)_addDescription:(id)arg1 toRequest:(id)arg2 withOptions:(unsigned long long)arg3 lastSeenContextDescriptors:(id)arg4;	// IMP=0x000000010008fd60
- (void)_addDescription:(id)arg1 toRequest:(id)arg2 withOptions:(unsigned long long)arg3;	// IMP=0x000000010008fcc0
- (void)updateTitleElementLabels:(id)arg1;	// IMP=0x000000010008f8b4
- (_Bool)shouldElement:(id)arg1 beCombined:(id)arg2 combineLinks:(_Bool)arg3;	// IMP=0x000000010008f720
- (_Bool)elementEligibleToFindTitleElement:(id)arg1;	// IMP=0x000000010008f66c
- (void)_handleOutputElementSummary:(id)arg1;	// IMP=0x000000010008ee0c
- (void)_handleCaptureImageCaptionDiagnostics:(id)arg1;	// IMP=0x000000010008ed78
- (void)_handleOutputDetectedCaption:(id)arg1;	// IMP=0x000000010008e974
- (void)_handleOutputOCRDetectedText:(id)arg1;	// IMP=0x000000010008e8e0
- (void)_handleOutputComputerVisionAnalysisSummary:(id)arg1 explicitUserRequest:(_Bool)arg2;	// IMP=0x000000010008e504
- (void)_handleOutputComputerVisionAnalysisSummary:(id)arg1;	// IMP=0x000000010008e4f4
- (void)_visionEngine:(id)arg1 updatedResult:(id)arg2 forElement:(id)arg3;	// IMP=0x000000010008e41c
- (void)visionEngine:(id)arg1 updatedResult:(id)arg2 forElement:(id)arg3;	// IMP=0x000000010008e398
- (void)_handleOutputFocusedElementSummary:(id)arg1;	// IMP=0x000000010008e250
- (void)_handleSelectedTextOutput:(id)arg1;	// IMP=0x000000010008e0b8
- (void)_handleScrollToPoint:(id)arg1;	// IMP=0x000000010008dfd8
- (void)_handleScrollDownPage:(id)arg1;	// IMP=0x000000010008df48
- (void)_handleScrollByPage:(id)arg1;	// IMP=0x000000010008da00
- (id)_nearestElementWithMatch:(CDUnknownBlockType)arg1 startElement:(id)arg2;	// IMP=0x000000010008d8f8
- (id)_nearestElementWithMatch:(CDUnknownBlockType)arg1 startElement:(id)arg2 forward:(_Bool)arg3;	// IMP=0x000000010008d784
- (id)_nearestScrollableElement:(id)arg1;	// IMP=0x000000010008d750
- (id)_nearestWebElement:(id)arg1;	// IMP=0x000000010008d71c
- (void)_handleAppSwitch:(id)arg1;	// IMP=0x000000010008d690
- (void)_handleSpeechRotorValueChange:(id)arg1;	// IMP=0x000000010008d55c
- (void)_handleSpeechRotorChange:(id)arg1;	// IMP=0x000000010008d460
- (void)_handleUsePitchChange:(_Bool)arg1;	// IMP=0x000000010008d370
- (void)_handleAudioDuckingChange:(_Bool)arg1;	// IMP=0x000000010008d200
- (void)_handleAudioDestination:(_Bool)arg1;	// IMP=0x000000010008d0d8
- (void)_handleActivityRotorChange:(_Bool)arg1;	// IMP=0x000000010008ce0c
- (void)_handleSpeechPhoneticsChange:(_Bool)arg1;	// IMP=0x000000010008cca8
- (void)_handleTypingEchoChange:(_Bool)arg1;	// IMP=0x000000010008cae8
- (void)_handleSpeechPunctuationChange:(_Bool)arg1;	// IMP=0x000000010008c630
- (void)_handleSoundRotorChange:(_Bool)arg1;	// IMP=0x000000010008c520
- (void)_handleSpeechRateChange:(_Bool)arg1;	// IMP=0x000000010008c3a0
- (void)_handleEscape:(id)arg1;	// IMP=0x000000010008bdfc
- (void)_handleStartHelpMode:(id)arg1;	// IMP=0x000000010008bca0
- (_Bool)isOnElementManagerThread;	// IMP=0x000000010008bc90
- (id)currentApplications;	// IMP=0x000000010008bbfc
- (id)currentElement;	// IMP=0x000000010008bbb4
- (id)_valueForKeyPathOnElementManagerThread:(id)arg1;	// IMP=0x000000010008bae0
- (void)__retrieveValueForKeyPath:(id)arg1 intoPointedToLocation:(id)arg2 semaphore:(id)arg3;	// IMP=0x000000010008ba28
- (struct CGRect)currentLineFrame;	// IMP=0x000000010008ba14
- (id)_currentElement;	// IMP=0x000000010008ba0c
- (struct _NSRange)_highlightedCharacterRange;	// IMP=0x000000010008ba00
- (_Bool)customRotorActionsEqual:(id)arg1 otherActions:(id)arg2 ignoreDragItems:(_Bool)arg3;	// IMP=0x000000010008b9b0
- (void)_updateSwipeFrames;	// IMP=0x000000010008b6bc
- (void)_updateAnyThreadElementAccess;	// IMP=0x000000010008b684
- (void)_setCurrentElement:(id)arg1 isProtectedApp:(_Bool)arg2 shouldResetTextSelection:(_Bool)arg3 shouldResetCharacterRange:(_Bool)arg4;	// IMP=0x000000010008a404
- (void)_setCurrentElement:(id)arg1 isProtectedApp:(_Bool)arg2;	// IMP=0x000000010008a3f0
- (void)_setCurrentElement:(id)arg1;	// IMP=0x000000010008a3e0
- (_Bool)_isElementValidForFirstResponder:(id)arg1;	// IMP=0x000000010008a340
- (void)_updateWithMostRecentElementCommunity:(id)arg1;	// IMP=0x000000010008a32c
- (void)_updateMostRecentElementCommunity;	// IMP=0x000000010008a2dc
- (_Bool)_languageRotorItemsContainLanguage:(id)arg1;	// IMP=0x000000010008a0e8
- (void)_updateExternalAccessory:(id)arg1;	// IMP=0x000000010008a078
- (void)_resetQuickNavState;	// IMP=0x0000000100089f00
- (void)_activateAlternativeKeyboardKey:(id)arg1;	// IMP=0x0000000100089d88
- (void)_dismissAlternativeKeyboardKeys;	// IMP=0x0000000100089c44
- (void)_handleElementMoveToStatusBar:(id)arg1;	// IMP=0x0000000100089a38
- (void)_handleContainerMovement:(id)arg1 direction:(long long)arg2;	// IMP=0x0000000100089718
- (void)_handleGuideElementMovement:(id)arg1 direction:(long long)arg2;	// IMP=0x000000010008948c
- (void)_handleContainerMovement:(id)arg1;	// IMP=0x00000001000893f8
- (void)_handleIntraContainerMovement:(id)arg1;	// IMP=0x00000001000892a4
- (void)_handleDataComprehensionAction:(long long)arg1 event:(id)arg2;	// IMP=0x0000000100089158
- (id)availableDataComprehensionActionsForElement:(id)arg1;	// IMP=0x0000000100088ee8
- (void)_handleCustomRotorAction:(id)arg1 direction:(long long)arg2;	// IMP=0x0000000100088b2c
- (id)_currentCustomActionCategory;	// IMP=0x0000000100088a94
- (id)_currentCustomActions;	// IMP=0x0000000100088954
- (id)_currentCachedCustomActionCategories;	// IMP=0x00000001000888bc
- (id)_customActionsAddingDragCancelActionIfNecessaryForActions:(id)arg1;	// IMP=0x0000000100088804
- (void)_handleValidatedCustomActionMovementThroughActions:(id)arg1 forEvent:(id)arg2 inDirection:(long long)arg3;	// IMP=0x00000001000885a4
- (void)_moveFocusToUpdatedRange:(struct _NSRange)arg1 element:(id)arg2 searchType:(long long)arg3;	// IMP=0x0000000100088194
- (void)_handlePublicCustomRotorMovement:(id)arg1 direction:(long long)arg2;	// IMP=0x0000000100087750
- (_Bool)_customRotorTypeRequiresFirstElementProcessing:(id)arg1;	// IMP=0x0000000100087738
- (id)webCustomRotorDictionary:(id)arg1 direction:(long long)arg2 forElement:(id)arg3;	// IMP=0x00000001000874b8
- (void)_handleVerticalMovement:(id)arg1 direction:(long long)arg2;	// IMP=0x0000000100087080
- (void)_handleShowEditingHUD:(id)arg1;	// IMP=0x0000000100086fac
- (void)_handleRealtimeElementMovement:(id)arg1;	// IMP=0x0000000100086cbc
- (void)_handleElementMovement:(id)arg1;	// IMP=0x0000000100086528
- (void)_handleMoveToElementBelow:(id)arg1;	// IMP=0x0000000100086518
- (void)_handleMoveToElementAbove:(id)arg1;	// IMP=0x0000000100086508
- (_Bool)_moveElementToFlowTo:(id)arg1;	// IMP=0x00000001000862ac
- (void)_setNearestElementMovingForward:(_Bool)arg1;	// IMP=0x00000001000861a8
- (id)_sonarElementInForwardDirection:(_Bool)arg1 limit:(long long)arg2;	// IMP=0x0000000100086198
- (id)_sonarElementFromPoint:(struct CGPoint)arg1 inForwardDirection:(_Bool)arg2 limit:(long long)arg3;	// IMP=0x0000000100085b44
- (_Bool)_prepareElementOutputHeaders:(id)arg1 currentElement:(id)arg2 request:(id)arg3;	// IMP=0x0000000100085748
- (_Bool)speakTableHeadersForElement:(id)arg1;	// IMP=0x0000000100085690
- (_Bool)speakTableRowAndColumnForElement:(id)arg1;	// IMP=0x00000001000855d8
- (long long)modifierKeyChoiceForElement:(id)arg1;	// IMP=0x0000000100085520
- (id)determineActivityForElement:(id)arg1;	// IMP=0x0000000100085184
- (void)_outputSelectionDifference:(struct _NSRange)arg1 oldRange:(struct _NSRange)arg2 string:(id)arg3 language:(id)arg4;	// IMP=0x00000001000847d0
- (void)_outputSelectionDifference:(struct _NSRange)arg1 oldRange:(struct _NSRange)arg2 string:(id)arg3;	// IMP=0x00000001000847c0
- (void)_handlePerformTextOperation:(id)arg1;	// IMP=0x00000001000845f0
- (void)_handleNextTextOperationInDirection:(long long)arg1 withEvent:(id)arg2;	// IMP=0x0000000100083f98
- (id)_currentResponder;	// IMP=0x0000000100083eb4
- (id)getCurrentElement;	// IMP=0x0000000100083ea8
- (void)refreshBraille;	// IMP=0x0000000100083e50
- (void)_handleScreenUnlock;	// IMP=0x0000000100083e2c
- (void)_handleScreenLock:(id)arg1;	// IMP=0x0000000100083a6c
- (void)_handlePressActionResultAtTime:(id)arg1;	// IMP=0x000000010008381c
- (void)_simulatedPressOutputTimer:(id)arg1;	// IMP=0x00000001000832c0
- (void)_handleContextMenuStatusNotification:(id)arg1;	// IMP=0x00000001000831bc
- (_Bool)_handleSimulatedLongPress:(id)arg1;	// IMP=0x000000010008305c
- (void)_reallySimulateLongPressForElement:(id)arg1;	// IMP=0x0000000100082f1c
- (void)_handlePerformHomeButtonPress:(id)arg1;	// IMP=0x0000000100082f04
- (void)_handleStartSiri:(id)arg1;	// IMP=0x0000000100082ebc
- (void)_handleToggleCaptionPanel:(id)arg1;	// IMP=0x0000000100082da4
- (void)_handleToggleScreenCurtain:(id)arg1;	// IMP=0x0000000100082d60
- (void)_handleToggleRotationCapability:(id)arg1;	// IMP=0x0000000100082ba4
- (void)_handleToggleMute:(id)arg1;	// IMP=0x0000000100082b60
- (void)_simulatedForceTouchLift;	// IMP=0x0000000100082988
- (_Bool)_canActivateTapticTime;	// IMP=0x0000000100082858
- (void)_handleWatchWakeTripleTap:(id)arg1;	// IMP=0x00000001000826b8
- (void)_handleWatchWakeDoubleTap:(id)arg1;	// IMP=0x0000000100082490
- (void)_handleWatchWakeTap:(id)arg1;	// IMP=0x0000000100082370
- (void)_handleSimulatedForceTouchEvent:(id)arg1;	// IMP=0x00000001000821ac
- (void)_sendAutomationTouchCommand:(unsigned int)arg1 location:(struct CGPoint)arg2;	// IMP=0x00000001000820e8
- (void)_handleAutomationGeneratedChordChangeEvent:(id)arg1;	// IMP=0x0000000100081d8c
- (void)_handleAutomationGeneratedTouchCancelEvent:(id)arg1;	// IMP=0x0000000100081ce8
- (void)_handleAutomationGeneratedTouchMoveEvent:(id)arg1;	// IMP=0x0000000100081bd4
- (void)_handleAutomationGeneratedTouchDownEvent:(id)arg1;	// IMP=0x0000000100081a3c
- (void)_handleAutomationGeneratedTouchUpEvent:(id)arg1;	// IMP=0x00000001000818f0
- (void)_handleSimpleTap:(id)arg1;	// IMP=0x0000000100081634
- (void)_handlePerformDataComprehensionAction:(id)arg1;	// IMP=0x00000001000811c4
- (void)_handlePerformCustomAction:(id)arg1;	// IMP=0x0000000100080f88
- (id)actionElement;	// IMP=0x0000000100080f7c
- (void)_disableQuickNavStateTemporarily;	// IMP=0x0000000100080e5c
- (void)_handlePerformPressAction:(id)arg1;	// IMP=0x000000010007fff0
- (_Bool)_updateCursorAfterPressForElement:(id)arg1 currentElementRange:(struct _NSRange)arg2 request:(id)arg3 didHaveCursor:(_Bool)arg4 doesHaveCursor:(_Bool)arg5;	// IMP=0x000000010007fc58
- (void)_updateLastFirstResponderChangedTime;	// IMP=0x000000010007fc30
- (void)_updateCurrentWordContextForBook:(id)arg1;	// IMP=0x000000010007fb24
- (_Bool)_useLineFrameBoundsForTouch:(id)arg1;	// IMP=0x000000010007fa54
- (void)_handleTripleTap:(id)arg1;	// IMP=0x000000010007f898
- (void)_handleDoubleTap:(id)arg1;	// IMP=0x000000010007f608
- (void)_handleStartStopToggle:(id)arg1;	// IMP=0x000000010007eea8
- (void)_handleToggleCrownNavigation:(id)arg1;	// IMP=0x000000010007ed8c
- (void)_handleLabelElement:(id)arg1;	// IMP=0x000000010007ec60
- (void)_handleMonitorElement:(id)arg1;	// IMP=0x000000010007e71c
- (void)_resetElementLabel;	// IMP=0x000000010007e6ac
- (void)_handleLabelElementAcceptedNotification:(id)arg1;	// IMP=0x000000010007e564
- (_Bool)_savedDescriptionToPhoto:(id)arg1 description:(id)arg2 element:(id)arg3;	// IMP=0x000000010007e3f8
- (void)_handleWebTextAvailableNotification:(id)arg1;	// IMP=0x000000010007e368
- (void)_handleWebSearchResult:(long long)arg1 withEvent:(id)arg2;	// IMP=0x000000010007e30c
- (void)_handleWebTextMatchSelectedNotification:(id)arg1;	// IMP=0x000000010007e108
- (_Bool)_shouldMoveToLastWebFormControl;	// IMP=0x000000010007e01c
- (void)_handleWebFormControlInteractionEndNotification:(id)arg1;	// IMP=0x000000010007dfd8
- (void)_handleWebFormControlInteractionStartNotification:(id)arg1;	// IMP=0x000000010007df38
- (void)_handleScreenWillWakeNotification:(id)arg1;	// IMP=0x000000010007deb0
- (void)_handleRealtimeElementUpdate:(id)arg1;	// IMP=0x000000010007de20
- (void)_handleScreenWillChangeNotification:(id)arg1;	// IMP=0x000000010007ddb0
- (void)_handleFocusedElementContentChangeNotification:(id)arg1;	// IMP=0x000000010007dd38
- (void)_handleBarcodeVisibilityNotification:(id)arg1;	// IMP=0x000000010007dc14
- (void)_handleCameraCenteredNotification:(id)arg1;	// IMP=0x000000010007dbc4
- (void)_handleKBPopupVariantsNotification:(id)arg1;	// IMP=0x000000010007daac
- (void)_handleAdjustValue:(id)arg1 reverse:(_Bool)arg2;	// IMP=0x000000010007d83c
- (void)_valueWait:(id)arg1 oldValue:(id)arg2 waitTime:(double)arg3 borderHitIfNoChange:(_Bool)arg4;	// IMP=0x000000010007d4bc
- (void)_valueWait:(id)arg1 oldValue:(id)arg2 waitTime:(double)arg3;	// IMP=0x000000010007d458
- (_Bool)_handleNextAutofill:(id)arg1 reverse:(_Bool)arg2;	// IMP=0x000000010007d194
- (void)_finishHandlingNextAutofillWithElement:(id)arg1;	// IMP=0x000000010007d0d4
- (void)_handlePerformTapAutofill:(id)arg1;	// IMP=0x000000010007ce50
- (void)_handleOutputTextStyle:(id)arg1;	// IMP=0x000000010007cc34
- (void)_handleSearchRotorSetMathPosition:(id)arg1;	// IMP=0x000000010007ca00
- (id)_currentRotorSelection;	// IMP=0x000000010007c890
- (void)_handleMathGranularMovement:(long long)arg1 event:(id)arg2;	// IMP=0x000000010007c6d0
- (id)_treePositionForMathSegment:(id)arg1;	// IMP=0x000000010007c664
- (void)_handleUpdatedMathElementIndex;	// IMP=0x000000010007c598
- (void)_refreshMathSegmentsIfNeeded;	// IMP=0x000000010007c588
- (void)_refreshMathSegmentsIfNeededWithPreferredDirection:(long long)arg1;	// IMP=0x000000010007c2c4
- (unsigned long long)_currentMathGranularityLevel;	// IMP=0x000000010007c288
- (void)_resetMathGranularMovementState;	// IMP=0x000000010007c254
- (void)_outputNavigationDirectionMode:(long long)arg1;	// IMP=0x000000010007c184
- (long long)_newNavigationDirectionModeForRotorDirection:(long long)arg1;	// IMP=0x000000010007c0e8
- (void)_handleNavigationDirectionChangeWithDirection:(long long)arg1;	// IMP=0x000000010007c028
- (void)_handleTrackingDetailMovement:(_Bool)arg1 event:(id)arg2;	// IMP=0x000000010007bf5c
- (void)_handleZoomMovement:(long long)arg1 event:(id)arg2;	// IMP=0x000000010007bd98
- (CDStruct_912cb5d2)_handleUserCharacterSelection:(CDStruct_912cb5d2)arg1 inString:(id)arg2 rightward:(_Bool)arg3;	// IMP=0x000000010007bbb4
- (CDStruct_912cb5d2)_handleUserAllSelection:(CDStruct_912cb5d2)arg1 inString:(id)arg2 rightward:(_Bool)arg3;	// IMP=0x000000010007bb30
- (CDStruct_912cb5d2)_handleUserPageSelection:(CDStruct_912cb5d2)arg1 inString:(id)arg2 rightward:(_Bool)arg3;	// IMP=0x000000010007ba7c
- (CDStruct_912cb5d2)_handleUserLineSelectionInElement:(id)arg1 currentRange:(CDStruct_912cb5d2)arg2 rightward:(_Bool)arg3;	// IMP=0x000000010007b880
- (CDStruct_912cb5d2)_handleUserWordSelectionInElement:(id)arg1 currentRange:(CDStruct_912cb5d2)arg2 rightward:(_Bool)arg3;	// IMP=0x000000010007b734
- (void)_handleUserSelection:(id)arg1;	// IMP=0x000000010007b018
- (void)updateCursorFrameAfterLift;	// IMP=0x000000010007aff4
- (void)_updateCursorFrameAfterLift;	// IMP=0x000000010007af44
- (void)_handleStartStopTextSelection:(id)arg1;	// IMP=0x000000010007ae24
- (void)_handleMisspelledWordRotorAction:(_Bool)arg1;	// IMP=0x000000010007aa48
- (void)_processMisspelledWordTextReplacement;	// IMP=0x000000010007a7d4
- (void)_handleTextRotorSelectionAction:(_Bool)arg1;	// IMP=0x000000010007a760
- (void)_handleWebSelection:(id)arg1;	// IMP=0x000000010007a3e0
- (void)_outputNextTextSegmentUnit:(long long)arg1 direction:(long long)arg2;	// IMP=0x0000000100079fd0
- (void)_handleOutputCharacterPhonetically:(id)arg1;	// IMP=0x0000000100079e44
- (void)_handleOutputRowHeader:(id)arg1;	// IMP=0x0000000100079e34
- (void)_handleOutputColumnHeader:(id)arg1;	// IMP=0x0000000100079e24
- (void)_handleOutputColumnOrRowHeader:(id)arg1 row:(_Bool)arg2;	// IMP=0x0000000100079b88
- (void)_handleOutputColumnContents:(id)arg1;	// IMP=0x0000000100079b78
- (void)_handleOutputRowContents:(id)arg1;	// IMP=0x0000000100079b68
- (void)_handleOutputTableRowColumnInfo:(id)arg1;	// IMP=0x0000000100079a6c
- (void)_handleOutputCellRowColumnInfo:(id)arg1;	// IMP=0x000000010007996c
- (void)_handleOutputColumnOrRowContents:(id)arg1 row:(_Bool)arg2;	// IMP=0x0000000100079710
- (void)_handleOutputCharacter:(id)arg1;	// IMP=0x00000001000795fc
- (id)_retrieveCurrentCharacterFromEditableElement;	// IMP=0x00000001000794d0
- (void)_handleRowMovement:(id)arg1 direction:(long long)arg2;	// IMP=0x000000010007922c
- (void)_handleGenericTextSegmentMovement:(id)arg1 direction:(long long)arg2 granulary:(long long)arg3;	// IMP=0x0000000100079050
- (void)_handleTextWordMovement:(id)arg1;	// IMP=0x0000000100078cc0
- (void)_handleTextDocumentMovement:(id)arg1;	// IMP=0x0000000100078b38
- (void)_handleRotorTextSelectionMovement:(id)arg1 direction:(long long)arg2;	// IMP=0x0000000100078a44
- (void)_handleAdjustTextSelectionSegmentType:(id)arg1;	// IMP=0x00000001000789b0
- (void)_handleParagraphMovement:(id)arg1;	// IMP=0x0000000100078918
- (void)_handleSentenceMovement:(id)arg1;	// IMP=0x0000000100078880
- (void)_handleLineMovement:(id)arg1;	// IMP=0x00000001000787e8
- (void)_handleLineMovementInWeb:(id)arg1 direction:(long long)arg2 existingRequest:(id)arg3;	// IMP=0x0000000100077534
- (void)_finishHandlingLineMovementInWeb:(id)arg1 direction:(id)arg2 withCurrentElement:(id)arg3 markerArray:(id)arg4 textObjects:(id)arg5 existingRequest:(id)arg6;	// IMP=0x000000010007734c
- (void)_handleWordMovement:(id)arg1 direction:(long long)arg2;	// IMP=0x00000001000771ec
- (void)_handleLetterMovement:(id)arg1 direction:(long long)arg2;	// IMP=0x0000000100077068
- (void)_handleWordMovement:(id)arg1;	// IMP=0x0000000100076fc0
- (void)_handleCharacterMovement:(id)arg1;	// IMP=0x0000000100076f18
- (void)_moveCursorForElement:(id)arg1 direction:(long long)arg2 unit:(long long)arg3;	// IMP=0x0000000100076854
- (void)_handleCursorMovementByTextSegment:(id)arg1;	// IMP=0x0000000100076748
- (void)_handleReadWord:(id)arg1;	// IMP=0x0000000100076264
- (id)_phoneticStringForLetter:(id)arg1 language:(id)arg2;	// IMP=0x0000000100076158
- (void)_handleReadLine:(id)arg1;	// IMP=0x0000000100075f2c
- (void)_handleOutputLineCount:(id)arg1;	// IMP=0x0000000100075d24
- (void)_handleReadItemHint:(id)arg1;	// IMP=0x0000000100075be4
- (void)_handleReadURL:(id)arg1;	// IMP=0x0000000100075a78
- (id)_computeChangedFontAttributes:(id)arg1 storedAttributes:(id)arg2 haveMisspellCheck:(_Bool)arg3;	// IMP=0x0000000100074644
- (id)_orderedMonitoredFontAttributes;	// IMP=0x00000001000744c0
- (id)_fontDisplayNameForFontName:(id)arg1;	// IMP=0x000000010007441c
- (void)_handleRotorTypingModeMovement:(long long)arg1 withEvent:(id)arg2;	// IMP=0x00000001000742e4
- (void)_handleRotorContinusPathChange:(long long)arg1 withEvent:(id)arg2;	// IMP=0x0000000100074174
- (long long)_adjustedRotorIndex:(long long)arg1 inDirection:(long long)arg2 rotorItems:(id)arg3;	// IMP=0x0000000100074128
- (void)_handleRotorBrailleLanguageMovement:(long long)arg1 withEvent:(id)arg2;	// IMP=0x0000000100073fac
- (void)_handleRotorLanguageMovement:(long long)arg1 withEvent:(id)arg2;	// IMP=0x0000000100073794
- (id)_languageNameForCode:(id)arg1;	// IMP=0x0000000100073568
- (void)_resetRotorTextNavigation;	// IMP=0x0000000100073560
- (void)_resetOtherTapInputModes;	// IMP=0x0000000100073510
- (void)_resetSearchType;	// IMP=0x0000000100073500
- (void)_resetReadAllRequest;	// IMP=0x00000001000734f0
- (void)handleSearchRotorDown:(id)arg1;	// IMP=0x00000001000734dc
- (void)handleSearchRotorUp:(id)arg1;	// IMP=0x00000001000734c8
- (void)_handleSpeakScreen:(id)arg1;	// IMP=0x0000000100073240
- (void)_handleSingleLetterSearch:(id)arg1;	// IMP=0x0000000100071bf0
- (void)_handleSearchRotorMovementWithoutRotorUpdateInDirectionUp:(_Bool)arg1 event:(id)arg2;	// IMP=0x0000000100071850
- (void)_handleDirectElementSearch:(id)arg1;	// IMP=0x0000000100070edc
- (void)_handleColumnMovement:(id)arg1;	// IMP=0x0000000100070d48
- (void)_handleSearchRotorMovement:(_Bool)arg1 event:(id)arg2;	// IMP=0x0000000100070ccc
- (void)_handleElementSearch:(id)arg1 rotorType:(long long)arg2 direction:(long long)arg3;	// IMP=0x0000000100070bc4
- (CDUnknownBlockType)_copyRangeMatchBlockForRotorType:(long long)arg1;	// IMP=0x0000000100070a58
- (void)_customPublicRotorMatchForType:(id)arg1 range:(struct _NSRange *)arg2 element:(id *)arg3 direction:(long long)arg4 lastSearchUUID:(id *)arg5;	// IMP=0x00000001000707f0
- (CDUnknownBlockType)_copyMatchBlockForRotorType:(long long)arg1 searchType:(long long *)arg2;	// IMP=0x00000001000704e0
- (CDUnknownBlockType)_copyMatchBlockSearchField;	// IMP=0x00000001000704a0
- (CDUnknownBlockType)_copyMatchBlockTextField;	// IMP=0x0000000100070460
- (CDUnknownBlockType)_copyMatchBlockDifferent;	// IMP=0x0000000100070314
- (CDUnknownBlockType)_copyMatchBlockSimilar;	// IMP=0x00000001000701c8
- (CDUnknownBlockType)_copyMatchBlockSameHeading;	// IMP=0x0000000100070088
- (CDUnknownBlockType)_copyMatchBlockSameBlockquote;	// IMP=0x000000010006ff90
- (CDUnknownBlockType)_copyMatchBlockBlockquote;	// IMP=0x000000010006ff5c
- (unsigned long long)filterTraitsByPriority:(unsigned long long)arg1;	// IMP=0x000000010006fe80
- (CDUnknownBlockType)_copyMatchBlockButton;	// IMP=0x000000010006fdb4
- (CDUnknownBlockType)_copyMatchBlockInternalLink;	// IMP=0x000000010006fd18
- (CDUnknownBlockType)_copyMatchBlockLandmarkStart;	// IMP=0x000000010006fc30
- (CDUnknownBlockType)_copyMatchBlockArticleStart;	// IMP=0x000000010006fb48
- (CDUnknownBlockType)_copyMatchBlockTableStart;	// IMP=0x000000010006fa60
- (CDUnknownBlockType)_copyMatchBlockFrameStart;	// IMP=0x000000010006f978
- (CDUnknownBlockType)_copyMatchBlockListStart;	// IMP=0x000000010006f7e0
- (CDUnknownBlockType)_copyMatchBlockFormElement;	// IMP=0x000000010006f728
- (CDUnknownBlockType)_copyMatchBlockStaticText;	// IMP=0x000000010006f558
- (CDUnknownBlockType)_copyMatchBlockLink;	// IMP=0x000000010006f518
- (CDUnknownBlockType)_copyMatchBlockNonVisitedLink;	// IMP=0x000000010006f480
- (CDUnknownBlockType)_copyMatchBlockForHeadingLevel:(long long)arg1 searchType:(long long *)arg2;	// IMP=0x000000010006f300
- (CDUnknownBlockType)_copyMatchBlockHeader;	// IMP=0x000000010006f2c0
- (CDUnknownBlockType)_copyMatchBlockVisitedLink;	// IMP=0x000000010006f270
- (CDUnknownBlockType)_copyMatchBlockImage;	// IMP=0x000000010006f230
- (CDUnknownBlockType)_copyMatchBlockAnyElement;	// IMP=0x000000010006ee48
- (CDUnknownBlockType)_copyMatchBlockForTextAttribute:(long long)arg1 searchType:(long long *)arg2;	// IMP=0x000000010006ee08
- (CDUnknownBlockType)_copyMatchBlockSearchText;	// IMP=0x000000010006ec84
- (void)_elementFetchFoundElement:(id)arg1;	// IMP=0x000000010006e45c
- (_Bool)_handleTodayViewStitchingForData:(id)arg1 oldElement:(id)arg2;	// IMP=0x000000010006e20c
- (_Bool)_isShowingTodayViewForPhone;	// IMP=0x000000010006e154
- (void)_echoSearchTypeNotFound:(long long)arg1;	// IMP=0x000000010006dfb4
- (void)_echoSearchNavigationElement:(id)arg1 forRangeAdjustment:(_Bool)arg2;	// IMP=0x000000010006ddc0
- (void)_echoFlickNavigationElement:(id)arg1;	// IMP=0x000000010006da8c
- (_Bool)_touchContainerDidChangeForElement:(id)arg1 oldElement:(id)arg2;	// IMP=0x000000010006d9d4
- (void)_updateContextDescriptors;	// IMP=0x000000010006d750
- (void)moveDragToPoint:(struct CGPoint)arg1;	// IMP=0x000000010006d718
- (void)dropDrag;	// IMP=0x000000010006d6e0
- (void)cancelDrag;	// IMP=0x000000010006d638
- (_Bool)dragSessionActive;	// IMP=0x000000010006d628
- (void)waitForDragStartFromPid:(int)arg1 completionHandler:(CDUnknownBlockType)arg2;	// IMP=0x000000010006d618
- (id)dragOutputManager;	// IMP=0x000000010006d610
- (void)_layoutChangeForDragSessionStart;	// IMP=0x000000010006d600
- (void)_dragStarted;	// IMP=0x000000010006d524
- (void)didStartDragForDragManager:(id)arg1;	// IMP=0x000000010006d500
- (void)_dragTerminated;	// IMP=0x000000010006d448
- (void)didTerminateDragForDragManager:(id)arg1;	// IMP=0x000000010006d3fc
- (void)_dragChangedToStatus:(id)arg1;	// IMP=0x000000010006d3ec
- (void)dragManager:(id)arg1 didChangeDragToStatus:(id)arg2;	// IMP=0x000000010006d3ac
- (void)_dragEnded;	// IMP=0x000000010006d39c
- (void)dragManager:(id)arg1 didEndDragOperation:(unsigned long long)arg2;	// IMP=0x000000010006d378
- (void)_dragMoved;	// IMP=0x000000010006d368
- (void)dragManager:(id)arg1 didMoveDragToPoint:(struct CGPoint)arg2;	// IMP=0x000000010006d344
- (void)elementFetchFound:(id)arg1;	// IMP=0x000000010006d098
- (void)_handleSearchRotorRight:(id)arg1;	// IMP=0x000000010006d084
- (void)_handleSearchRotorLeft:(id)arg1;	// IMP=0x000000010006d070
- (void)_handleSearchRotorDirection:(long long)arg1 event:(id)arg2 notifyUser:(_Bool)arg3;	// IMP=0x000000010006cd98
- (void)_handleSearchRotorDirection:(long long)arg1 event:(id)arg2;	// IMP=0x000000010006cd88
- (void)_outputRotorTypeCount;	// IMP=0x000000010006cc20
- (void)setCurrentElementToWebEditableAncestor;	// IMP=0x000000010006cb7c
- (id)webEditableAncestor:(id)arg1;	// IMP=0x000000010006ca94
- (_Bool)_rotorTypeSupportsCounting:(long long)arg1;	// IMP=0x000000010006ca6c
- (void)elementsCounted:(long long)arg1;	// IMP=0x000000010006c49c
- (int)cancelElementCountOutput;	// IMP=0x000000010006c484
- (_Bool)forceRotorOffGesturedTextInputIfNeeded:(_Bool)arg1;	// IMP=0x000000010006c3d4
- (void)setElementRotorToType:(long long)arg1 saveToPreferences:(_Bool)arg2 userInitiated:(_Bool)arg3;	// IMP=0x000000010006c374
- (_Bool)_inMisspelledWordRotor;	// IMP=0x000000010006c364
- (void)setRotor:(id)arg1 toType:(long long)arg2 saveToPreferences:(_Bool)arg3 userInitiated:(_Bool)arg4;	// IMP=0x000000010006c348
- (void)setCurrentTextSelectionSegmentType:(long long)arg1;	// IMP=0x000000010006c300
- (long long)currentRotorType;	// IMP=0x000000010006c2f0
- (void)_handleSearchRotorEcho:(id)arg1;	// IMP=0x000000010006c2bc
- (void)_updateRotorForCurrentElement;	// IMP=0x000000010006c240
- (void)_updateRotorForCurrentElement:(id)arg1 completion:(CDUnknownBlockType)arg2;	// IMP=0x000000010006c0d0
- (void)updateRotorForCurrentElement:(_Bool)arg1 completion:(CDUnknownBlockType)arg2;	// IMP=0x000000010006c010
- (void)_handleStartTextSearch:(id)arg1;	// IMP=0x000000010006be80
- (void)_handleOngoingTextSearch:(id)arg1;	// IMP=0x000000010006bd74
- (_Bool)isItemChooserVisible;	// IMP=0x000000010006bd6c
- (void)_handleItemChooserSelection:(id)arg1;	// IMP=0x000000010006bc44
- (void)_didDismissItemChooser;	// IMP=0x000000010006bc3c
- (void)_closeItemChooser;	// IMP=0x000000010006bbc4
- (void)_handleItemChooserSelectionMade:(id)arg1;	// IMP=0x000000010006b7d4
- (void)_handleMoveToNativeFocusedElement:(id)arg1;	// IMP=0x000000010006b764
- (void)_handleMoveToLinkedUI:(id)arg1;	// IMP=0x000000010006b31c
- (long long)_customActionIndex;	// IMP=0x000000010006b314
- (id)_customActionIdentifier;	// IMP=0x000000010006b30c
- (void)didSearchForOpaqueElement;	// IMP=0x000000010006b300
- (void)elementsRetrieved:(id)arg1 finished:(_Bool)arg2;	// IMP=0x000000010006b2a0
- (void)_elementsRetrieved:(id)arg1 finished:(id)arg2;	// IMP=0x000000010006acdc
- (void)_showItemChooser:(id)arg1;	// IMP=0x0000000100069ccc
- (void)_resetItemChooserCache;	// IMP=0x0000000100069cb0
- (void)systemServerDied;	// IMP=0x0000000100069c8c
- (void)_systemServerDied;	// IMP=0x0000000100069c5c
- (void)_resetDirectInteractionCache;	// IMP=0x0000000100069bb4
- (_Bool)inDirectTouchMode;	// IMP=0x0000000100069bac
- (_Bool)shouldTurnTrackingIntoDirectTouch;	// IMP=0x0000000100069ba4
- (void)setShouldTurnTrackingIntoDirectTouch:(_Bool)arg1;	// IMP=0x0000000100069b9c
- (_Bool)avoidAnnouncingDirectTouchArea;	// IMP=0x0000000100069b94
- (_Bool)currentElementAllowsDirectTouch;	// IMP=0x0000000100069b8c
- (void)_handleDirectTouchExplorationMode:(id)arg1 direction:(long long)arg2;	// IMP=0x0000000100069a6c
- (void)_handleHintsSettingMode:(id)arg1 direction:(long long)arg2;	// IMP=0x0000000100069954
- (void)_handleDescribedMediaMode:(id)arg1 direction:(long long)arg2;	// IMP=0x000000010006980c
- (void)_handleSearchTextEvent:(id)arg1;	// IMP=0x00000001000694b4
- (void)_endTextSearchMode;	// IMP=0x00000001000693c0
- (void)_handleCancelSpeaking:(id)arg1;	// IMP=0x0000000100069374
- (void)_handleToggleSpeaking:(id)arg1;	// IMP=0x0000000100069280
- (void)_handlePauseSpeaking:(id)arg1;	// IMP=0x00000001000691b0
- (void)_handleContinueSpeaking:(id)arg1;	// IMP=0x00000001000690cc
- (void)_handleReadFromTop:(id)arg1;	// IMP=0x0000000100068bb4
- (void)_handleCopySpeechToClipboard:(id)arg1;	// IMP=0x00000001000688a0
- (void)_handleReadAll:(id)arg1;	// IMP=0x0000000100068780
- (void)_handleReadScreenSummary:(id)arg1;	// IMP=0x0000000100068694
- (void)_continueReadAllWithElement:(id)arg1 setCurrentElement:(_Bool *)arg2;	// IMP=0x00000001000682a0
- (_Bool)_prepareStitchedWebReadAll:(id)arg1 request:(id)arg2 setCurrentElement:(_Bool *)arg3;	// IMP=0x000000010006797c
- (void)_handleReadAllNextElement;	// IMP=0x00000001000678dc
- (void)_stopReadAll;	// IMP=0x0000000100067878
- (void)_handleReadAllBookContent:(id)arg1 fromTop:(_Bool)arg2;	// IMP=0x0000000100067358
- (_Bool)isReadingAll;	// IMP=0x0000000100067338
- (void)_startReadingBookForNewPage;	// IMP=0x00000001000670fc
- (_Bool)_handleBookNavigateOverPageBoundary:(long long)arg1 unit:(long long)arg2;	// IMP=0x0000000100067038
- (void)_handleBookPageFlipAndContinue;	// IMP=0x0000000100066fa4
- (_Bool)_handleMoreBookContentElements;	// IMP=0x0000000100066cf4
- (void)_echoLineInBookElement:(id)arg1 forEvent:(id)arg2;	// IMP=0x0000000100065dd4
- (_Bool)_bookContentElementInteraction:(struct CGPoint)arg1 element:(id)arg2;	// IMP=0x0000000100065c64
- (id)_currentTextLineInBookElement:(_Bool)arg1;	// IMP=0x0000000100065a58
- (id)_convertTextMarkerArrayToString:(id)arg1 addInContentExtras:(_Bool)arg2;	// IMP=0x00000001000654ac
- (_Bool)_handleMovementForElementFollowingElement:(id)arg1 direction:(long long)arg2 unit:(long long)arg3 mode:(long long)arg4;	// IMP=0x0000000100065334
- (void)_handleBookContentMovement:(id)arg1 direction:(long long)arg2 unit:(long long)arg3 generateOutput:(_Bool)arg4;	// IMP=0x0000000100064920
- (void)_handleCurrentContentReadingLineUpdated:(id)arg1;	// IMP=0x00000001000647f8
- (struct _NSRange)_rangeOfLine:(id)arg1 inBookContent:(id)arg2;	// IMP=0x000000010006462c
- (void)_setSelectedTextRange:(struct _NSRange)arg1 onElement:(id)arg2 refreshBraille:(_Bool)arg3;	// IMP=0x0000000100064588
- (void)_handleIdle:(id)arg1;	// IMP=0x0000000100064390
- (void)_tvOS_handleIdleAndTrackingEvents:(id)arg1;	// IMP=0x000000010006438c
- (void)_cleanupMapInteractionOnIdle;	// IMP=0x0000000100064300
- (void)_performTouchTypingKeyPress:(id)arg1;	// IMP=0x00000001000640d8
- (_Bool)_isTouchTypingEventTooCloseToEdge:(id)arg1;	// IMP=0x0000000100063fe4
- (void)_setPreviousTouchTypingKey:(id)arg1;	// IMP=0x0000000100063f90
- (void)_setElementUnitIndexesToEndOfElement:(id)arg1;	// IMP=0x0000000100063cbc
- (void)_resetElementUnitIndexes;	// IMP=0x0000000100063c64
- (_Bool)rotorEnabled;	// IMP=0x0000000100063c5c
- (void)hideVisualRotor;	// IMP=0x0000000100063bec
- (void)_hideVisualRotor;	// IMP=0x0000000100063ac0
- (void)_showVisualRotor:(id)arg1 direction:(_Bool)arg2;	// IMP=0x00000001000638bc
- (double)keyboardKeyPenumbra:(id)arg1;	// IMP=0x0000000100063884
- (void)sendRequest:(id)arg1;	// IMP=0x00000001000636b0
- (id)_notificationData:(id)arg1 consumingToken:(id)arg2;	// IMP=0x00000001000635a8
- (_Bool)_notificationData:(id)arg1 containsToken:(id)arg2;	// IMP=0x00000001000634c0
- (void)_handleLiveContinuousToneEndNotification:(id)arg1;	// IMP=0x0000000100063478
- (void)_handleLiveContinuousToneUpdateNotification:(id)arg1;	// IMP=0x00000001000633d0
- (void)_handleLiveContinuousToneBeginNotification:(id)arg1;	// IMP=0x00000001000632f0
- (void)handleNotification:(int)arg1 withData:(id)arg2 forElement:(id)arg3;	// IMP=0x0000000100062a30
- (void)_updateStateForNotificationData:(id)arg1;	// IMP=0x00000001000623e0
- (void)_notificationThreadCancel;	// IMP=0x00000001000623dc
- (void)_pausedSpeechInterrupted:(id)arg1;	// IMP=0x0000000100062368
- (void)_handleEvent:(id)arg1;	// IMP=0x0000000100061ddc
- (_Bool)directTouchModeHandledEvent:(id)arg1;	// IMP=0x0000000100061dd4
- (void)_updateContinuousPathTimeout;	// IMP=0x0000000100061cd8
- (void)_monitorElements;	// IMP=0x0000000100061634
- (id)_monitoredElementCachedText:(id)arg1;	// IMP=0x000000010006158c
- (id)_similarMonitoredElement:(id)arg1;	// IMP=0x0000000100061404
- (void)handleEvent:(id)arg1;	// IMP=0x0000000100060f08
- (_Bool)eventIsSystemEvent:(id)arg1;	// IMP=0x0000000100060cd4
- (void)_updateNavigationModeForClassicRemote;	// IMP=0x0000000100060cd0
- (void)updateNavigationModeForClassicRemote;	// IMP=0x0000000100060cac
- (void)_initializeCommands;	// IMP=0x000000010005bd4c
- (void)_speakElementFromPointerEvent:(id)arg1;	// IMP=0x000000010005bcc0
- (void)_pointerDidMoveToGlobalPoint:(id)arg1;	// IMP=0x000000010005bb98
- (void)pointerDidMoveToGlobalPoint:(struct CGPoint)arg1;	// IMP=0x000000010005bac0
- (void)_initializeSystemEventThread;	// IMP=0x000000010005ba68
- (void)_initializeElementManagerThread;	// IMP=0x000000010005b9ec
- (void)dealloc;	// IMP=0x000000010005b660
- (id)init;	// IMP=0x000000010005a81c
- (void)_cleanupStateForUnitTesting;	// IMP=0x000000010005a5f0

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

