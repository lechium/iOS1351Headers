//
//     Generated by classdumpios 1.0.1 (64 bit) (iOS port by DreamDevLost)(Debug version compiled Sep 26 2020 13:48:20).
//
//  Copyright (C) 1997-2019 Steve Nygard.
//

#import <objc/NSObject.h>

#import "NSCopying-Protocol.h"
#import "VOTElementAspect-Protocol.h"

@class AXUIElement, NSArray, NSString, VOTElementSnapshot, VOTElementUniqueIdentification;
@protocol UIElementProtocol;

@interface VOTElement : NSObject <NSCopying, VOTElementAspect>
{
    id <UIElementProtocol> _uiElement;	// 8 = 0x8
    VOTElement *_elementForGesturedTextInput;	// 16 = 0x10
    int _lastOrbSoundLevel;	// 24 = 0x18
    _Bool shouldSkipValidateElement;	// 28 = 0x1c
    _Bool _checkedRemoteParent;	// 29 = 0x1d
    _Bool _checkedImmediateRemoteParent;	// 30 = 0x1e
    unsigned int _cachedDisplayId;	// 32 = 0x20
    VOTElementUniqueIdentification *_uniqueIdentification;	// 40 = 0x28
    NSString *_supplementalBrailleDescription;	// 48 = 0x30
    long long _aspectMask;	// 56 = 0x38
    VOTElement *_cachedRemoteParent;	// 64 = 0x40
    VOTElement *_cachedImmediateRemoteParent;	// 72 = 0x48
    VOTElement *_cachedRemoteApplication;	// 80 = 0x50
}

+ (id)customPublicRotorDictionaryForRotorId:(id)arg1 startRange:(struct _NSRange)arg2 direction:(long long)arg3;	// IMP=0x000000010001df24
+ (id)organizedActionsByCategory:(id)arg1;	// IMP=0x000000010001ce40
+ (id)defaultCustomActionCategory;	// IMP=0x000000010001ce24
+ (void)setElementAtPointIntercept:(CDUnknownBlockType)arg1;	// IMP=0x0000000100014074
+ (CDUnknownBlockType)elementAtPointIntercept;	// IMP=0x0000000100014058
+ (id)_elementWithAXUIElementRef:(struct __AXUIElement *)arg1;	// IMP=0x0000000100013ff0
+ (id)_elementWithAXUIElementRef:(struct __AXUIElement *)arg1 cache:(id)arg2 identification:(id)arg3;	// IMP=0x0000000100013f40
+ (id)elementWithUIElement:(id)arg1;	// IMP=0x0000000100013ef0
+ (void)resetSystemAppElement;	// IMP=0x0000000100013ea8
+ (id)springBoardApplication;	// IMP=0x0000000100013e48
+ (id)systemAppApplication;	// IMP=0x0000000100013c68
+ (void)setSystemAppApplication:(id)arg1;	// IMP=0x0000000100013c58
+ (id)systemWideElement;	// IMP=0x0000000100013ac4
+ (void)initialize;	// IMP=0x0000000100013a60
- (void).cxx_destruct;	// IMP=0x00000001000252a8
@property(retain, nonatomic) VOTElement *cachedRemoteApplication; // @synthesize cachedRemoteApplication=_cachedRemoteApplication;
@property(nonatomic) _Bool checkedImmediateRemoteParent; // @synthesize checkedImmediateRemoteParent=_checkedImmediateRemoteParent;
@property(retain, nonatomic) VOTElement *cachedImmediateRemoteParent; // @synthesize cachedImmediateRemoteParent=_cachedImmediateRemoteParent;
@property(nonatomic) _Bool checkedRemoteParent; // @synthesize checkedRemoteParent=_checkedRemoteParent;
@property(retain, nonatomic) VOTElement *cachedRemoteParent; // @synthesize cachedRemoteParent=_cachedRemoteParent;
@property(nonatomic) unsigned int cachedDisplayId; // @synthesize cachedDisplayId=_cachedDisplayId;
@property(nonatomic) long long aspectMask; // @synthesize aspectMask=_aspectMask;
@property(copy, nonatomic) NSString *supplementalBrailleDescription; // @synthesize supplementalBrailleDescription=_supplementalBrailleDescription;
@property(nonatomic) _Bool shouldSkipValidateElement; // @synthesize shouldSkipValidateElement;
- (void)showEditingHUD;	// IMP=0x00000001000251f4
@property(readonly, nonatomic) VOTElementSnapshot *snapshot;
- (long long)differenceAspectMask:(id)arg1;	// IMP=0x0000000100024ef0
- (void)resetAspectMask;	// IMP=0x0000000100024ee0
- (id)dataSeriesElement;	// IMP=0x0000000100024ed0
- (_Bool)isDataSeriesElement;	// IMP=0x0000000100024e48
- (id)activeKeyboard;	// IMP=0x0000000100024e38
- (_Bool)isInternationalKeyboardKey;	// IMP=0x0000000100024e24
- (_Bool)isKeyboardContinuousPathTracking;	// IMP=0x0000000100024de4
- (_Bool)isKeyboardContinuousPathAvailable;	// IMP=0x0000000100024dd0
- (void)updateTouchForceSounds:(double)arg1;	// IMP=0x0000000100024c74
- (void)postFingerLiftAtPoint:(struct CGPoint)arg1 withContextId:(unsigned int)arg2;	// IMP=0x0000000100024b68
- (void)postFingerDragAtPoint:(struct CGPoint)arg1 withForce:(double)arg2 withContextId:(unsigned int)arg3;	// IMP=0x0000000100024a1c
- (void)postFingerTouchAtPoint:(struct CGPoint)arg1 withForce:(double)arg2 withContextId:(unsigned int)arg3;	// IMP=0x00000001000248d0
- (void)postStylusLiftAtPoint:(struct CGPoint)arg1 withContextId:(unsigned int)arg2;	// IMP=0x00000001000247d8
- (void)postStylusDragAtPoint:(struct CGPoint)arg1 withForce:(double)arg2 altitude:(double)arg3 azimuth:(double)arg4 withContextId:(unsigned int)arg5;	// IMP=0x0000000100024634
- (void)postStylusTouchAtPoint:(struct CGPoint)arg1 withForce:(double)arg2 altitude:(double)arg3 azimuth:(double)arg4 withContextId:(unsigned int)arg5;	// IMP=0x0000000100024490
- (_Bool)performSimpleTapAtPoint:(struct CGPoint)arg1 withForce:(double)arg2 withContextId:(unsigned int)arg3 withDelay:(float)arg4;	// IMP=0x0000000100024338
- (_Bool)performSimpleTapAtPoint:(struct CGPoint)arg1;	// IMP=0x000000010002431c
- (_Bool)supportsDirectionOrbManipulation;	// IMP=0x0000000100024308
- (void)notifyAnnouncementFinishedWithString:(id)arg1 didFinishSuccessfully:(_Bool)arg2;	// IMP=0x00000001000241e8
- (void)sendUserEventOccurred;	// IMP=0x00000001000241d4
- (void)sendTouchCancelledEvent;	// IMP=0x00000001000241c0
- (void)sendBrightnessEvent:(id)arg1;	// IMP=0x00000001000241a8
- (void)repostEvent:(id)arg1;	// IMP=0x00000001000240e0
- (id)windowContextIDs;	// IMP=0x00000001000240cc
- (_Bool)dispatchKeyboardEvent:(id)arg1;	// IMP=0x000000010002406c
- (void)setEventCaptureMode:(int)arg1;	// IMP=0x0000000100024010
- (id)customActionGroupIdentifier;	// IMP=0x0000000100023ffc
- (void)setRotationCapabilityEnabled:(_Bool)arg1;	// IMP=0x0000000100023fa0
- (void)setAccelemoterDisabled:(_Bool)arg1;	// IMP=0x0000000100023f88
- (void)setDeviceOrientation:(int)arg1;	// IMP=0x0000000100023f2c
- (id)dataSeriesAxesDescription;	// IMP=0x0000000100023a7c
- (id)dataSeriesYAxisValueDescriptionForPosition:(double)arg1;	// IMP=0x00000001000239f4
- (id)dataSeriesXAxisValueDescriptionForPosition:(double)arg1;	// IMP=0x000000010002396c
- (id)dataSeriesCategoryLabelsForAxis:(long long)arg1;	// IMP=0x00000001000238d0
- (id)dataSeriesGridlinePositionsForAxis:(long long)arg1;	// IMP=0x0000000100023834
- (id)dataSeriesUnitsLabelForAxis:(long long)arg1;	// IMP=0x0000000100023754
- (double)dataSeriesMaximumValueForAxis:(long long)arg1;	// IMP=0x0000000100023664
- (double)dataSeriesMinimumValueForAxis:(long long)arg1;	// IMP=0x0000000100023574
- (id)dataSeriesTitleForAxis:(long long)arg1;	// IMP=0x0000000100023484
- (id)dataSeriesValuesForAxis:(long long)arg1;	// IMP=0x00000001000233e8
- (double)dataSeriesSonificationPlaybackDuration;	// IMP=0x0000000100023348
- (_Bool)includesTrendlineInSonification;	// IMP=0x00000001000232d0
- (_Bool)supportsDataSeriesSonification;	// IMP=0x0000000100023258
- (_Bool)supportsDataSeriesSummarization;	// IMP=0x00000001000231e0
- (_Bool)supportsDataComprehensionActions;	// IMP=0x0000000100023198
- (long long)dataSeriesType;	// IMP=0x0000000100023100
- (id)dataSeriesName;	// IMP=0x0000000100023080
- (id)isolatedWindow;	// IMP=0x0000000100023070
- (id)elementCommunityIdentifier;	// IMP=0x0000000100023018
- (_Bool)shouldSpeakMathEquationTrait;	// IMP=0x0000000100022fc8
- (_Bool)prefersContextlessPassthrough;	// IMP=0x0000000100022f78
- (_Bool)activateDragWithDescriptorDictionary:(id)arg1;	// IMP=0x0000000100022e84
- (id)dropCustomActions;	// IMP=0x0000000100022e48
- (id)cachedDropCustomActions;	// IMP=0x0000000100022c94
- (id)dropPointDescriptorDictionaries;	// IMP=0x0000000100022930
- (id)dragCustomActions;	// IMP=0x00000001000228f4
- (id)cachedDragCustomActions;	// IMP=0x000000010002246c
- (id)dragSourceDescriptorDictionaries;	// IMP=0x0000000100022248
- (id)staticTextString;	// IMP=0x00000001000220d8
- (struct CGRect)convertAccessibilityFrameToScreenCoordinates:(struct CGRect)arg1;	// IMP=0x0000000100022054
- (int)applicationInterfaceOrientation;	// IMP=0x0000000100021fe8
- (_Bool)applicationHandleRemoteRightButton;	// IMP=0x0000000100021fd4
- (_Bool)applicationHandleRemoteLeftButton;	// IMP=0x0000000100021fc0
- (_Bool)applicationHandleRemoteDownButton;	// IMP=0x0000000100021fac
- (_Bool)applicationHandleRemoteUpButton;	// IMP=0x0000000100021f98
- (_Bool)isApplication;	// IMP=0x0000000100021f2c
- (CDStruct_4bcfbbae)nonPersistentUniqueId;	// IMP=0x0000000100021ed0
- (_Bool)webSearchResultsActive;	// IMP=0x0000000100021e90
@property(readonly, nonatomic) VOTElementUniqueIdentification *uniqueIdentification; // @synthesize uniqueIdentification=_uniqueIdentification;
- (_Bool)shouldStartReadAllOnFocus;	// IMP=0x0000000100021e20
@property(readonly, nonatomic) NSString *toggleStatusLabel;
@property(readonly, copy) NSString *description;
- (_Bool)isElementFirstElement:(_Bool)arg1 orLastElement:(_Bool)arg2 withType:(unsigned long long)arg3;	// IMP=0x0000000100021908
- (id)lastElementInStatusBar;	// IMP=0x000000010002185c
- (_Bool)finishSetupIfAppropriate;	// IMP=0x0000000100021848
- (const struct CGPath *)convertPath:(struct CGPath *)arg1 fromContextId:(unsigned int)arg2;	// IMP=0x00000001000217dc
- (struct CGPoint)convertPoint:(struct CGPoint)arg1 fromContextId:(unsigned int)arg2;	// IMP=0x00000001000217d0
- (struct CGPoint)convertPoint:(struct CGPoint)arg1 toContextId:(unsigned int)arg2;	// IMP=0x00000001000217c4
- (struct CGRect)convertRect:(struct CGRect)arg1 fromContextId:(unsigned int)arg2;	// IMP=0x00000001000216dc
- (_Bool)avoidAnnouncingDirectTouchArea;	// IMP=0x000000010002169c
- (id)firstElementInStatusBar;	// IMP=0x00000001000215f0
- (void)restoreUserPreferencesChangedByHandwriting;	// IMP=0x00000001000215dc
- (_Bool)showControlCenter:(_Bool)arg1;	// IMP=0x0000000100021578
- (_Bool)showBulletinBoard:(_Bool)arg1;	// IMP=0x0000000100021514
- (_Bool)isSystemWideGestureInProgress;	// IMP=0x00000001000214d4
- (_Bool)isSiriTalkingOrListening;	// IMP=0x0000000100021484
- (id)currentSoftwareKeyboardLayout;	// IMP=0x0000000100021410
- (id)currentSoftwareKeyboardLanguage;	// IMP=0x00000001000213d0
- (id)currentHardwareKeyboardLayout;	// IMP=0x0000000100021390
- (_Bool)isDictationListening;	// IMP=0x0000000100021350
- (_Bool)isVoiceControlRunning;	// IMP=0x0000000100021310
- (struct CGPoint)centerPointOfScreen;	// IMP=0x00000001000212fc
- (_Bool)isQuietModeEnabled;	// IMP=0x00000001000212f4
- (void)launchAppWithDisplayID:(id)arg1;	// IMP=0x00000001000212dc
- (id)appSwitcherApps;	// IMP=0x000000010002129c
- (id)launchableApps;	// IMP=0x000000010002125c
- (_Bool)isSystemBatteryLow;	// IMP=0x000000010002121c
- (_Bool)isSystemLocked;	// IMP=0x00000001000211dc
- (_Bool)isAlarmRinging;	// IMP=0x000000010002119c
- (_Bool)isSystemSleeping;	// IMP=0x000000010002115c
- (int)applicationOrientation;	// IMP=0x00000001000210f0
- (_Bool)isKeyboardActiveOrAttached;	// IMP=0x0000000100021090
- (_Bool)usingBrailleHardwareKeyboard;	// IMP=0x000000010002101c
- (_Bool)usingHardwareKeyboard;	// IMP=0x0000000100020fa8
- (_Bool)isSoftwareKeyboardActive;	// IMP=0x0000000100020f68
- (_Bool)isSoftwareKeyboardMimic;	// IMP=0x0000000100020f54
- (_Bool)softwareKeyboardSupportsGestureKeyboard;	// IMP=0x0000000100020f40
- (_Bool)startStopToggle;	// IMP=0x0000000100020f2c
- (id)parentTableOrCollectionView;	// IMP=0x0000000100020f1c
- (struct _NSRange)indexPathAsRange;	// IMP=0x0000000100020f08
- (struct _NSRange)columnRange;	// IMP=0x0000000100020ef4
@property(readonly, nonatomic) _Bool areMediaLegibilityEventsBeingTapped;
@property(readonly, nonatomic) _Bool isContainedByVideoElement;
@property(readonly, nonatomic) _Bool allowsActivationWithoutBeingNativeFocused;
@property(readonly, nonatomic) _Bool isContainedByPreferredNativeFocusElement;
@property(readonly, nonatomic) _Bool shouldIncludeRowRangeInDescription;
@property(readonly, nonatomic) struct _NSRange rowRange;
- (void)jumpToTableIndex:(id)arg1;	// IMP=0x0000000100020e0c
- (id)elementAtRow:(long long)arg1 andColumn:(long long)arg2;	// IMP=0x0000000100020d1c
- (id)typingCandidateElements;	// IMP=0x0000000100020d00
- (id)textReplacements;	// IMP=0x0000000100020cec
- (_Bool)isSpotlight;	// IMP=0x0000000100020c94
- (_Bool)isIBooks;	// IMP=0x0000000100020c40
- (_Bool)isMaps;	// IMP=0x0000000100020bec
- (_Bool)isMail;	// IMP=0x0000000100020b94
- (_Bool)isAccessibilitySystemUIServer;	// IMP=0x0000000100020b40
- (_Bool)isAssistiveTouch;	// IMP=0x0000000100020aec
- (_Bool)isGoogleChrome;	// IMP=0x0000000100020a98
- (_Bool)isSafari;	// IMP=0x0000000100020a44
- (_Bool)isMobilePhone;	// IMP=0x00000001000209f0
- (_Bool)isClockFace;	// IMP=0x00000001000209e8
- (_Bool)isSetupBuddy;	// IMP=0x0000000100020994
- (_Bool)isSystemWideApp;	// IMP=0x0000000100020940
- (_Bool)isPineBoard;	// IMP=0x00000001000208ec
- (_Bool)isSpringBoard;	// IMP=0x0000000100020898
- (_Bool)hasBadge;	// IMP=0x0000000100020884
- (_Bool)isInFolder;	// IMP=0x0000000100020870
- (_Bool)isInAlert;	// IMP=0x000000010002085c
- (_Bool)isInAppSwitcher;	// IMP=0x0000000100020848
- (id)bundleIdentifier;	// IMP=0x0000000100020834
- (id)accessibleAncestor;	// IMP=0x0000000100020824
- (id)accessibleDescendants;	// IMP=0x0000000100020814
- (id)explorerElements;	// IMP=0x0000000100020804
- (id)titleElements;	// IMP=0x00000001000207f4
- (void)updateTitleElements;	// IMP=0x00000001000207e0
- (_Bool)elementActsAsTitleElement:(id)arg1;	// IMP=0x000000010002076c
- (void)addTitleElementToCache:(id)arg1;	// IMP=0x00000001000206c8
- (id)headerElementsForRow:(unsigned long long)arg1;	// IMP=0x0000000100020658
- (id)headerElementsForColumn:(unsigned long long)arg1;	// IMP=0x00000001000205e8
@property(readonly, nonatomic) NSArray *linkedUIElements;
@property(readonly, nonatomic) NSArray *headerElements;
- (id)summaryElement;	// IMP=0x00000001000205b8
- (id)textMarkerArrayOfText:(id)arg1;	// IMP=0x000000010002033c
- (id)stringForTextMarkers:(id)arg1;	// IMP=0x0000000100020320
- (id)elementForTextMarker:(id)arg1;	// IMP=0x0000000100020308
- (struct CGRect)textMarkerFrame:(id)arg1;	// IMP=0x0000000100020284
- (id)textLineStartMarker:(id)arg1;	// IMP=0x0000000100020268
- (void)setSelectionToTextMarker:(id)arg1;	// IMP=0x0000000100020238
- (_Bool)textOperationsAvailable;	// IMP=0x000000010002016c
- (id)textMarkersForRange:(struct _NSRange)arg1;	// IMP=0x00000001000200f8
- (_Bool)isTourGuideRunning;	// IMP=0x00000001000200b8
- (_Bool)isCameraIrisOpen;	// IMP=0x0000000100020078
- (_Bool)shouldAnnounceFontInfo;	// IMP=0x0000000100020064
- (struct _NSRange)rangeForTextMarker:(id)arg1;	// IMP=0x000000010001ffdc
- (id)textLineEndMarker:(id)arg1;	// IMP=0x000000010001ff58
- (id)pageTextMarkerRange;	// IMP=0x000000010001fecc
- (id)textPreviousMarker:(id)arg1;	// IMP=0x000000010001feb0
- (id)textNextMarker:(id)arg1;	// IMP=0x000000010001fe94
- (id)textMarkersForPoints:(id)arg1;	// IMP=0x000000010001fcc4
- (id)textMarkerForPoint:(struct CGPoint)arg1;	// IMP=0x000000010001fc58
- (id)url;	// IMP=0x000000010001fbe4
- (id)attachmentFilenameForCID:(id)arg1;	// IMP=0x000000010001fbc8
- (id)webAreaURL;	// IMP=0x000000010001fb54
- (id)textMarkerRange;	// IMP=0x000000010001fb40
- (struct _NSRange)textMarkerSelectionRange;	// IMP=0x000000010001fb00
- (id)textMarkerRangeForSelection;	// IMP=0x000000010001fac0
- (id)expandedTextValue;	// IMP=0x000000010001faac
- (struct CGRect)boundsForRange:(struct _NSRange)arg1;	// IMP=0x000000010001fa24
- (_Bool)replaceTextInRange:(struct _NSRange)arg1 withString:(id)arg2;	// IMP=0x000000010001f920
- (void)replaceCharactersAtCursor:(unsigned long long)arg1 withString:(id)arg2 source:(long long)arg3;	// IMP=0x000000010001f7f0
- (id)_sourceNameForChangeOriginator:(long long)arg1;	// IMP=0x000000010001f790
- (void)deleteCharacterAtCursorWithSource:(long long)arg1;	// IMP=0x000000010001f728
- (void)decreaseWebSelection:(long long)arg1;	// IMP=0x000000010001f6d8
- (void)increaseWebSelection:(long long)arg1;	// IMP=0x000000010001f688
- (id)_selectionStringForSegment:(long long)arg1;	// IMP=0x000000010001f608
- (id)objectForRange:(struct _NSRange)arg1 withParameterizedAttribute:(long long)arg2;	// IMP=0x000000010001f588
- (id)attributedValueForRange:(struct _NSRange)arg1;	// IMP=0x000000010001f514
- (id)valueForRange:(struct _NSRange)arg1;	// IMP=0x000000010001f4a0
- (id)nextTextNavigationElement;	// IMP=0x000000010001f490
- (id)previousTextNavigationElement;	// IMP=0x000000010001f480
- (struct _NSRange)rangeForLineNumberAndColumn:(id)arg1;	// IMP=0x000000010001f3d4
- (id)lineNumberAndColumnForPoint:(struct CGPoint)arg1;	// IMP=0x000000010001f31c
- (void)setCurrentWordContextForBook:(id)arg1;	// IMP=0x000000010001f304
- (long long)lineNumberForPoint:(struct CGPoint)arg1;	// IMP=0x000000010001f214
- (struct CGRect)frameForRange:(struct _NSRange)arg1;	// IMP=0x000000010001f18c
- (_Bool)supportsFrameForRange;	// IMP=0x000000010001f178
- (struct CGRect)frameForLineNumber:(long long)arg1;	// IMP=0x000000010001f0dc
- (id)stringForLineNumber:(long long)arg1;	// IMP=0x000000010001f048
- (struct _NSRange)rangeForLineNumber:(long long)arg1;	// IMP=0x000000010001ef9c
- (_Bool)supportsRangeForLineNumber;	// IMP=0x000000010001ef88
- (id)pageContent;	// IMP=0x000000010001ef74
- (void)updatePageContent;	// IMP=0x000000010001ef60
- (_Bool)isReadingContent;	// IMP=0x000000010001ef4c
- (_Bool)includeDuringContentReading;	// IMP=0x000000010001ef38
- (_Bool)shouldSpeakScrollStatusOnEntry;	// IMP=0x000000010001ef24
- (struct _NSRange)lineRangeForPosition:(unsigned long long)arg1;	// IMP=0x000000010001ee78
- (long long)lineEndPosition;	// IMP=0x000000010001ee0c
- (long long)lineStartPosition;	// IMP=0x000000010001eda0
- (void)_updateFocusForFKA:(_Bool)arg1;	// IMP=0x000000010001eae0
- (void)setVoiceOverFocused:(_Bool)arg1;	// IMP=0x000000010001e83c
- (void)handwritingSendCarriageReturn;	// IMP=0x000000010001e828
- (_Bool)activateKeyboardReturnKey;	// IMP=0x000000010001e690
- (_Bool)requiresLaTeXInput;	// IMP=0x000000010001e67c
- (void)updateGesturedTextInputAttributes;	// IMP=0x000000010001e668
- (id)gesturedTextInputAttributes;	// IMP=0x000000010001e604
- (id)elementForGesturedTextInput;	// IMP=0x000000010001e53c
- (void)clearElementForGesturedTextInput;	// IMP=0x000000010001e52c
- (void)insertText:(id)arg1 source:(long long)arg2;	// IMP=0x000000010001e404
- (void)setSelectedTextRange:(struct _NSRange)arg1 refreshBraille:(_Bool)arg2;	// IMP=0x000000010001e3a0
- (void)setFirstResponder:(id)arg1;	// IMP=0x000000010001e340
- (struct _NSRange)selectedTextRange;	// IMP=0x000000010001e300
- (id)customPublicRotorResultWithItem:(id)arg1 startElement:(id)arg2;	// IMP=0x000000010001e0ac
- (id)customPublicRotorName:(id)arg1;	// IMP=0x000000010001ddd4
- (_Bool)customPublicRotorIsVisibleInTouchRotor:(id)arg1;	// IMP=0x000000010001dc38
- (id)customPublicRotorForSystemType:(id)arg1;	// IMP=0x000000010001db14
- (id)customPublicRotorNames;	// IMP=0x000000010001d854
- (id)customPublicRotors;	// IMP=0x000000010001d6e4
- (_Bool)attemptToShowContextMenuWithTargetPointValue:(id)arg1;	// IMP=0x000000010001d620
- (_Bool)performCustomActionWithIdentifier:(id)arg1 data:(id)arg2;	// IMP=0x000000010001d438
- (_Bool)performCustomActionWithIdentifier:(id)arg1;	// IMP=0x000000010001d428
- (long long)overriddenInterpretationForCommand:(long long)arg1;	// IMP=0x000000010001d390
- (_Bool)fullscreenVideoViewIsVisible;	// IMP=0x000000010001d37c
- (_Bool)shouldSpeakExplorerElementsAfterFocus;	// IMP=0x000000010001d368
@property(readonly, nonatomic) _Bool shouldSetNativeFocusWhenBecomingCurrentElement;
@property(readonly, nonatomic) _Bool hasNativeFocus;
- (_Bool)setNativeFocus;	// IMP=0x000000010001d32c
- (id)customRotorActions;	// IMP=0x000000010001d248
- (id)cachedCustomRotorActions;	// IMP=0x000000010001ca38
- (_Bool)shouldAddAlternateActionForLinkElement;	// IMP=0x000000010001c980
- (_Bool)retainsCustomRotorActionSetting;	// IMP=0x000000010001c96c
- (_Bool)allowCustomActionHintSpeakOverride;	// IMP=0x000000010001c958
- (id)cellWithRowIndexPath:(struct _NSRange)arg1 parentView:(id)arg2;	// IMP=0x000000010001c70c
- (_Bool)elementOnSameLine:(id)arg1;	// IMP=0x000000010001c450
- (id)firstElementInApplicationForReadFromTop;	// IMP=0x000000010001c3dc
- (id)firstElementInApplicationForFocus;	// IMP=0x000000010001c368
- (id)firstElementInApplication;	// IMP=0x000000010001c2f4
- (id)firstResponderElementForFocus;	// IMP=0x000000010001c280
- (id)nativeFocusPreferredElement;	// IMP=0x000000010001c270
- (id)nativeFocusElement;	// IMP=0x000000010001c260
- (id)firstResponderElement;	// IMP=0x000000010001c1ec
- (id)firstVisibleElementInList;	// IMP=0x000000010001c1dc
- (_Bool)readingContentCausesPageTurn;	// IMP=0x000000010001c1ac
- (_Bool)showsDualPages;	// IMP=0x000000010001c16c
- (id)scrollStatus;	// IMP=0x000000010001c12c
- (id)computerVisionAnalysisSummary;	// IMP=0x000000010001bc98
- (void)scrollRectToVisible:(struct CGRect)arg1 withCompletion:(CDUnknownBlockType)arg2;	// IMP=0x000000010001bb58
- (void)scrollToPoint:(struct CGPoint)arg1;	// IMP=0x000000010001bb00
- (_Bool)scrollPreviousPage;	// IMP=0x000000010001baf0
- (_Bool)scrollNextPage;	// IMP=0x000000010001bae0
- (void)scrollLeftPage;	// IMP=0x000000010001bad0
- (void)scrollRightPage;	// IMP=0x000000010001bac0
- (void)scrollDownPage;	// IMP=0x000000010001bab0
- (void)scrollUpPage;	// IMP=0x000000010001baa0
- (_Bool)_scrollForAction:(int)arg1;	// IMP=0x000000010001b920
- (void)_iterateSelfAndRemoteParentsUsingBlock:(CDUnknownBlockType)arg1;	// IMP=0x000000010001b868
- (id)immediateRemoteParent;	// IMP=0x000000010001b764
- (id)textualContext;	// IMP=0x000000010001b750
- (id)remoteParent;	// IMP=0x000000010001b64c
- (double)absoluteValue;	// IMP=0x000000010001b5d8
- (double)maxValue;	// IMP=0x000000010001b57c
- (double)minValue;	// IMP=0x000000010001b520
- (_Bool)_attemptPerformActivateActionWithElement:(id)arg1;	// IMP=0x000000010001b218
- (_Bool)performSimpleTap:(_Bool)arg1;	// IMP=0x000000010001a9e8
- (_Bool)activateIfSupported;	// IMP=0x000000010001a8d8
- (_Bool)performSimpleTap;	// IMP=0x000000010001a8c8
- (void)performDoubleTap;	// IMP=0x000000010001a868
- (_Bool)allowsAutoAlternativeCharacterActivation;	// IMP=0x000000010001a854
- (void)performTapAtPoint:(struct CGPoint)arg1 withForce:(double)arg2;	// IMP=0x000000010001a6f4
- (_Bool)verifyElementExists:(struct CGPoint *)arg1;	// IMP=0x000000010001a1ac
- (_Bool)supportsSecondaryActivate;	// IMP=0x000000010001a198
- (_Bool)supportsActivate;	// IMP=0x000000010001a0f4
- (void)findSearchResult:(_Bool)arg1 withSearchText:(id)arg2;	// IMP=0x000000010001a074
- (_Bool)performEscape;	// IMP=0x0000000100019f44
- (struct CGPoint)elementFrameLocation:(int)arg1;	// IMP=0x0000000100019c4c
- (void)performTextOperation:(id)arg1;	// IMP=0x0000000100019c34
- (id)textOperations;	// IMP=0x0000000100019bf4
- (id)textOperationsOperator;	// IMP=0x0000000100019be4
- (void)increaseTrackingDetail;	// IMP=0x0000000100019bd0
- (void)decreaseTrackingDetail;	// IMP=0x0000000100019bbc
- (void)zoomOutAtLocation:(struct CGPoint)arg1;	// IMP=0x0000000100019b64
- (_Bool)roadContainsTrackingPoint:(struct CGPoint)arg1;	// IMP=0x0000000100019ad4
- (id)mapsExplorationChangeVerbosity:(_Bool)arg1;	// IMP=0x0000000100019ab8
- (id)mapsExplorationCurrentIntersectionDescription;	// IMP=0x0000000100019aa4
- (struct CGPoint)mapsExplorationCurrentLocation;	// IMP=0x0000000100019a90
- (id)mapsExplorationCurrentRoadsWithAngles;	// IMP=0x0000000100019a7c
- (_Bool)mapsExplorationIsPending;	// IMP=0x0000000100019a68
- (_Bool)mapsExplorationIsActive;	// IMP=0x0000000100019a54
- (void)mapsExplorationEnd;	// IMP=0x0000000100019a40
- (void)mapsExplorationContinueWithVertexIndex:(unsigned long long)arg1;	// IMP=0x00000001000199e8
- (void)mapsExplorationBeginFromCurrentElement:(_Bool)arg1;	// IMP=0x00000001000199cc
- (void)mapsExplorationRecordTouchpoint:(struct CGPoint)arg1;	// IMP=0x0000000100019974
- (id)upcomingRoadsAtPoint:(struct CGPoint)arg1 withDirection:(float)arg2;	// IMP=0x0000000100019750
- (float)distanceToEndOfRoad:(struct CGPoint)arg1 withDirection:(float)arg2;	// IMP=0x0000000100019610
- (float)distanceToOtherRoad:(struct CGPoint)arg1 withDirection:(float)arg2 otherRoad:(id)arg3;	// IMP=0x000000010001947c
- (_Bool)lastHitTestNearBorder;	// IMP=0x000000010001943c
- (id)mapDetailedInformationAtPoint:(struct CGPoint)arg1;	// IMP=0x00000001000193f4
- (long long)mapFeatureType;	// IMP=0x00000001000193a0
- (_Bool)isMapItem;	// IMP=0x000000010001937c
- (id)photoDescription;	// IMP=0x0000000100019368
- (void)zoomInAtLocation:(struct CGPoint)arg1;	// IMP=0x0000000100019310
- (void)decrementAction;	// IMP=0x00000001000192fc
- (void)setGesturePracticeInfo:(id)arg1;	// IMP=0x00000001000192e4
- (void)incrementAction;	// IMP=0x00000001000192d0
- (void)scrollToElementWithCompletion:(CDUnknownBlockType)arg1;	// IMP=0x0000000100018fec
- (_Bool)shouldIgnoreTextEditingTrait;	// IMP=0x0000000100018f08
@property(readonly, nonatomic) unsigned long long traits;
- (_Bool)doesHaveTraitsForGesturedTextInput;	// IMP=0x0000000100018e78
- (_Bool)onlyHasTraits:(unsigned long long)arg1;	// IMP=0x0000000100018e28
- (_Bool)doesHaveAllTraits:(unsigned long long)arg1;	// IMP=0x0000000100018df8
- (_Bool)doesHaveTraits:(unsigned long long)arg1;	// IMP=0x0000000100018dc8
- (_Bool)brailleTextEntrySupported;	// IMP=0x0000000100018d6c
- (_Bool)isEditableTextArea;	// IMP=0x0000000100018d14
- (struct _NSRange)textInputElementRange;	// IMP=0x0000000100018cb4
- (id)textInputElement;	// IMP=0x0000000100018ca0
- (_Bool)suppressCustomActionHint;	// IMP=0x0000000100018c8c
- (id)roleDescription;	// IMP=0x0000000100018c78
- (unsigned long long)blockquoteLevel;	// IMP=0x0000000100018c24
- (id)elementsInDirection:(long long)arg1 withCount:(unsigned long long)arg2;	// IMP=0x0000000100018a4c
- (id)lastContainedElement;	// IMP=0x0000000100018948
- (id)firstContainedElement;	// IMP=0x0000000100018844
- (_Bool)supportsHeaderElementOutput;	// IMP=0x00000001000187dc
- (_Bool)realtimeElementCompleted;	// IMP=0x00000001000187c8
- (_Bool)realtimeElementUnread;	// IMP=0x00000001000187b4
- (id)realtimeElements;	// IMP=0x00000001000187a4
- (id)autoSpeakWatchElements;	// IMP=0x0000000100018794
- (id)previousElement;	// IMP=0x00000001000186d0
- (id)nextElement;	// IMP=0x000000010001860c
- (id)remoteApplication;	// IMP=0x0000000100018578
- (id)application;	// IMP=0x000000010001855c
- (void)updateEquivalenceTag;	// IMP=0x0000000100018548
- (void)updateLanguage;	// IMP=0x0000000100018534
- (void)updateHint;	// IMP=0x0000000100018520
- (void)updateTraits;	// IMP=0x000000010001850c
- (void)updateValue;	// IMP=0x00000001000184f8
- (void)updateRoleDescription;	// IMP=0x00000001000184e4
- (void)updateExpandedStatus;	// IMP=0x00000001000184d0
- (void)updateVisiblePoint;	// IMP=0x00000001000184bc
- (void)updateCenterPoint;	// IMP=0x00000001000184a8
- (void)updateLabel;	// IMP=0x0000000100018494
- (void)updatePaths;	// IMP=0x0000000100018480
- (void)updateFrame;	// IMP=0x00000001000183b4
- (void)updateCache;	// IMP=0x0000000100018230
- (id)dataDetectorURL:(struct CGPoint)arg1;	// IMP=0x0000000100018188
- (_Bool)isEqual:(id)arg1;	// IMP=0x00000001000180e8
@property(readonly) unsigned long long hash;
- (id)instructions;	// IMP=0x0000000100017e04
- (_Bool)isPressed;	// IMP=0x0000000100017dc4
- (_Bool)supportsPressedState;	// IMP=0x0000000100017db0
- (id)ancestryForTraits:(unsigned long long)arg1;	// IMP=0x0000000100017d40
@property(readonly, nonatomic) NSString *guideElementHeaderText;
@property(readonly, nonatomic) VOTElement *nextGuideElement;
@property(readonly, nonatomic) VOTElement *previousGuideElement;
- (id)previousContainer;	// IMP=0x0000000100017b44
- (id)nextContainer;	// IMP=0x0000000100017ab0
- (id)flowToElements;	// IMP=0x0000000100017aa0
- (void)updateFlowToElements;	// IMP=0x0000000100017a8c
- (id)linkedElement;	// IMP=0x0000000100017a7c
- (_Bool)shouldIncludeMediaDescriptionsRotor;	// IMP=0x0000000100017a68
- (id)imageData;	// IMP=0x0000000100017a54
- (_Bool)touchContainerShouldOutputBraille;	// IMP=0x0000000100017a40
- (id)touchContainer;	// IMP=0x0000000100017934
- (id)touchContainerParent;	// IMP=0x0000000100017828
- (const struct __AXUIElement *)touchContainerAXElement;	// IMP=0x00000001000174f0
- (struct __AXUIElement *)touchContainerParentAXElement;	// IMP=0x0000000100017418
- (id)elementsForAttribute:(long long)arg1;	// IMP=0x0000000100017408
- (id)elementsForAttribute:(long long)arg1 withParameter:(id)arg2;	// IMP=0x0000000100017234
- (id)_elementForAttribute:(long long)arg1 shouldUpdateCache:(_Bool)arg2 shouldFetchAttributes:(_Bool)arg3;	// IMP=0x000000010001707c
- (id)_elementForAttribute:(long long)arg1 shouldUpdateCache:(_Bool)arg2;	// IMP=0x000000010001706c
- (id)elementForAttribute:(long long)arg1;	// IMP=0x000000010001705c
- (id)opaqueElementInDirection:(long long)arg1 searchType:(long long)arg2 range:(struct _NSRange *)arg3;	// IMP=0x0000000100016e54
- (_Bool)supportsTextSelection;	// IMP=0x0000000100016e40
- (float)activationDelay;	// IMP=0x0000000100016de4
- (id)focusedApplications;	// IMP=0x0000000100016c70
- (id)stringForParameterizedAttribute:(long long)arg1 parameter:(id)arg2;	// IMP=0x0000000100016c00
- (id)arrayForParameterizedAttribute:(long long)arg1 parameter:(id)arg2;	// IMP=0x0000000100016b90
- (id)elementForParameterizedAttribute:(long long)arg1 parameter:(id)arg2;	// IMP=0x0000000100016ae0
@property(readonly, nonatomic) struct CGRect mediaAnalysisFrame;
@property(readonly, nonatomic) unsigned int mediaAnalysisOptions;
@property(readonly, nonatomic) _Bool supportsMediaAnalysis;
- (_Bool)isAccessibleElement;	// IMP=0x0000000100016a00
- (_Bool)isHeader;	// IMP=0x00000001000169d0
- (_Bool)isTouchContainer;	// IMP=0x0000000100016910
- (id)hint;	// IMP=0x00000001000168fc
@property(readonly, nonatomic) NSString *label;
@property(nonatomic) _Bool isFirstItemInTree; // @dynamic isFirstItemInTree;
@property(nonatomic) _Bool isFirstItemInFieldset; // @dynamic isFirstItemInFieldset;
@property(nonatomic) _Bool isFirstItemInLandmark; // @dynamic isFirstItemInLandmark;
@property(nonatomic) _Bool isFirstItemInTable; // @dynamic isFirstItemInTable;
@property(nonatomic) _Bool isFirstItemInList; // @dynamic isFirstItemInList;
@property(copy, nonatomic) NSString *userDefinedLabel; // @dynamic userDefinedLabel;
- (id)elementStoredUserLabel;	// IMP=0x0000000100016354
- (_Bool)savePhotoLabeliCloud:(id)arg1;	// IMP=0x000000010001633c
@property(copy, nonatomic) NSString *definedLabel; // @dynamic definedLabel;
- (id)urlLabel;	// IMP=0x0000000100015fc0
- (id)equivalenceTag;	// IMP=0x0000000100015fac
- (id)identifier;	// IMP=0x0000000100015f98
- (id)originalLabel;	// IMP=0x0000000100015f40
- (id)headingLevelValue;	// IMP=0x0000000100015f2c
- (id)linkRelationshipType;	// IMP=0x0000000100015f18
@property(readonly, nonatomic) NSString *value;
- (struct CGRect)gesturePracticeRegion;	// IMP=0x0000000100015c1c
- (id)notificationSummary:(unsigned long long)arg1;	// IMP=0x0000000100015b64
- (unsigned long long)notificationCount;	// IMP=0x0000000100015af8
- (void)resetBannerTimer;	// IMP=0x0000000100015ae4
- (_Bool)isBannerNotification;	// IMP=0x0000000100015ad0
- (_Bool)isAwayAlertItemNew;	// IMP=0x0000000100015abc
- (_Bool)isAwayAlertItem;	// IMP=0x0000000100015aa8
- (id)currentOpaqueElement;	// IMP=0x0000000100015a8c
- (id)visibleOpaqueElements;	// IMP=0x0000000100015a7c
- (_Bool)isAccessibilityOpaqueElementProvider;	// IMP=0x0000000100015a68
- (id)localOpaqueParent;	// IMP=0x0000000100015a54
- (id)outermostLocalOpaqueParent;	// IMP=0x00000001000159c8
- (id)opaqueParent;	// IMP=0x0000000100015874
- (id)directParent;	// IMP=0x0000000100015860
- (_Bool)isStrongPasswordField;	// IMP=0x000000010001584c
- (_Bool)useElementAtPositionAfterActivation;	// IMP=0x0000000100015838
- (double)delayBeforeUpdatingOnActivation;	// IMP=0x00000001000157dc
- (struct CGRect)frameForDirectInteraction;	// IMP=0x00000001000157c8
- (_Bool)elementVisibilityAffectsLayout;	// IMP=0x00000001000157b4
- (_Bool)overridesVoiceOverInstructions;	// IMP=0x00000001000157a0
- (_Bool)keyboardKeyAllowsTouchTyping;	// IMP=0x0000000100015728
- (_Bool)dismissAlternativeKeyboardPicker;	// IMP=0x0000000100015714
- (_Bool)isInTableCell;	// IMP=0x0000000100015700
- (_Bool)isComboBox;	// IMP=0x00000001000156ec
- (struct CGRect)textCursorFrame;	// IMP=0x00000001000156ac
- (unsigned long long)ariaColumnIndex;	// IMP=0x0000000100015658
- (unsigned long long)ariaRowIndex;	// IMP=0x0000000100015604
- (unsigned long long)ariaColumnCount;	// IMP=0x00000001000155b0
- (unsigned long long)ariaRowCount;	// IMP=0x000000010001555c
- (unsigned long long)columnCount;	// IMP=0x0000000100015508
- (unsigned long long)rowCount;	// IMP=0x00000001000154b4
- (id)sortDirection;	// IMP=0x00000001000154a0
- (id)currentStatus;	// IMP=0x000000010001548c
- (id)invalidStatus;	// IMP=0x0000000100015478
- (id)popupValue;	// IMP=0x0000000100015464
- (_Bool)hasPopup;	// IMP=0x0000000100015450
- (_Bool)isRequired;	// IMP=0x000000010001543c
- (id)contextDescriptors;	// IMP=0x0000000100015428
- (long long)expandedStatus;	// IMP=0x00000001000153d4
- (unsigned int)windowContextId;	// IMP=0x00000001000152e0
- (void)updateWindowContextId;	// IMP=0x00000001000152cc
- (unsigned int)displayId;	// IMP=0x0000000100015194
- (const struct CGPath *)path;	// IMP=0x0000000100015180
- (struct CGRect)visibleFrame;	// IMP=0x000000010001516c
@property(readonly, nonatomic) struct CGRect frame;
- (_Bool)isRemoteElement;	// IMP=0x0000000100015144
- (id)supportedLanguageIfNecessary;	// IMP=0x0000000100014de4
- (id)formattedDatetime;	// IMP=0x0000000100014d48
- (unsigned long long)containerType;	// IMP=0x0000000100014cf4
- (id)containerTypes;	// IMP=0x0000000100014ca0
- (_Bool)containedIn:(unsigned long long)arg1;	// IMP=0x0000000100014c14
- (struct CGPoint)visiblePoint;	// IMP=0x0000000100014c00
- (struct CGPoint)centerPoint;	// IMP=0x0000000100014bec
- (_Bool)isRTL;	// IMP=0x0000000100014bd8
- (void)updateRTL;	// IMP=0x0000000100014bc4
- (id)language;	// IMP=0x0000000100014bb0
@property(readonly, nonatomic) AXUIElement *uiElement;
- (_Bool)isValidForApplication:(id)arg1;	// IMP=0x0000000100014b4c
- (_Bool)isAlive;	// IMP=0x0000000100014b0c
- (_Bool)isValid;	// IMP=0x0000000100014afc
- (int)pid;	// IMP=0x0000000100014aec
- (void)_copyInternalsToElement:(id)arg1;	// IMP=0x0000000100014934
- (id)copyWithCache;	// IMP=0x0000000100014798
- (id)copyWithZone:(struct _NSZone *)arg1;	// IMP=0x0000000100014690
- (id)initWithPosition:(struct CGPoint)arg1;	// IMP=0x000000010001447c
- (id)initWithPosition:(struct CGPoint)arg1 application:(id)arg2 contextId:(unsigned int)arg3;	// IMP=0x00000001000143bc
- (id)initWithPosition:(struct CGPoint)arg1 startWithElement:(id)arg2;	// IMP=0x0000000100014310
- (id)_initWithUIElement:(id)arg1 identification:(id)arg2;	// IMP=0x00000001000141b8
- (id)initWithUIElement:(id)arg1;	// IMP=0x00000001000141a8
- (id)initWithAXElement:(struct __AXUIElement *)arg1;	// IMP=0x0000000100014148
- (id)initApplicationWithPosition:(struct CGPoint)arg1;	// IMP=0x000000010001409c
- (void)_applyTableRowColumnSpan:(id)arg1;	// IMP=0x00000001000c36b0
- (void)_applyTableColumnIndex:(id)arg1 options:(unsigned long long)arg2;	// IMP=0x00000001000c34f4
- (void)_applyTableRowIndex:(id)arg1 options:(unsigned long long)arg2;	// IMP=0x00000001000c3338
- (void)_applyHeaderStatus:(id)arg1;	// IMP=0x00000001000c319c
- (void)applyTableDimension:(id)arg1;	// IMP=0x00000001000c2f2c
- (id)tableDimensionStringWithRow:(unsigned long long)arg1 andColumn:(unsigned long long)arg2;	// IMP=0x00000001000c2df8
- (_Bool)hasExplicitColumnInfo;	// IMP=0x00000001000c2d78
- (_Bool)hasExplicitRowInfo;	// IMP=0x00000001000c2cf8
- (_Bool)shouldAnnounceTableInfo;	// IMP=0x00000001000c2c08
- (void)regionDescriptionWithCompletion:(CDUnknownBlockType)arg1;	// IMP=0x00000001000c2a50
- (id)regionDescriptionWithFrame:(struct CGRect)arg1;	// IMP=0x00000001000c2530
- (struct CGRect)adaptFrameForSystemElement:(struct CGRect)arg1;	// IMP=0x00000001000c247c
- (void)_applyRoleDescription:(id)arg1;	// IMP=0x00000001000c2408
- (void)_configureAsSingleLinkElementWithRequest:(id)arg1 linkTraitTitle:(id)arg2 hint:(id)arg3;	// IMP=0x00000001000c2364
- (void)applyTextEditingInformation:(id)arg1 request:(id)arg2 options:(unsigned long long)arg3;	// IMP=0x00000001000c17c8
- (void)announceTableInfo:(id)arg1 options:(unsigned long long)arg2;	// IMP=0x00000001000c1734
- (void)announceAdditionalTextualInformation:(id)arg1;	// IMP=0x00000001000c16c0
- (void)_applyStickyCustomActions:(id)arg1 customAction:(id)arg2 language:(id)arg3;	// IMP=0x00000001000c14fc
- (void)addTextualInformationToRequest:(id)arg1 options:(unsigned long long)arg2 dataPackage:(id)arg3;	// IMP=0x00000001000befc8
- (void)_applySelectedTrait:(id)arg1;	// IMP=0x00000001000bee88
- (void)_applyExpandedStatus:(id)arg1;	// IMP=0x00000001000bedb4
- (void)_applyLinkRelationshipType:(id)arg1;	// IMP=0x00000001000bed20
- (id)_languageRangesForText:(id)arg1;	// IMP=0x00000001000be974
- (void)_applyLanguageTokens:(id)arg1 attributedString:(id)arg2;	// IMP=0x00000001000be720
- (void)addTextualInformationToBrailleLine:(id)arg1 forPosition:(unsigned long long)arg2 rotorSelection:(id)arg3 shouldPreferRotorSelection:(_Bool)arg4 lineRange:(struct _NSRange *)arg5 descriptionRange:(struct _NSRange *)arg6 lineRangeKnown:(_Bool)arg7 isNewTouchContainer:(_Bool)arg8;	// IMP=0x00000001000bd4ec
- (id)_copyMathTextualInformationWithBrailleLineRange:(struct _NSRange *)arg1 brailleDescriptionRange:(struct _NSRange *)arg2 position:(unsigned long long)arg3 rotorSelection:(id)arg4 shouldPreferRotorSelection:(_Bool)arg5;	// IMP=0x00000001000bcf00
- (struct _NSRange)_brailleLineRangeForDescription:(id)arg1 position:(unsigned long long)arg2;	// IMP=0x00000001000bce28
- (void)_applySortDirection:(id)arg1;	// IMP=0x00000001000bccc8
- (void)_applyDatetimeAttribute:(id)arg1;	// IMP=0x00000001000bcbd0
- (void)_applyCurrentStatus:(id)arg1;	// IMP=0x00000001000bc9d0
- (void)_applyInvalidStatus:(id)arg1;	// IMP=0x00000001000bc860
- (void)_applyTraitsToRequest:(id)arg1 options:(unsigned long long)arg2 numHeaderActions:(unsigned long long)arg3;	// IMP=0x00000001000bbca4
- (void)_applyHasPopupAttribute:(id)arg1 withLanguage:(id)arg2;	// IMP=0x00000001000bbb20
- (_Bool)applySelectedText:(id)arg1;	// IMP=0x00000001000bb9cc
- (void)_applyValueToRequest:(id)arg1 options:(unsigned long long)arg2 lastSeenLineAndColumn:(id)arg3 language:(id)arg4;	// IMP=0x00000001000bb164
- (void)applyHeaderElementsToRequest:(id)arg1;	// IMP=0x00000001000bafe8
- (void)applyRowHeadersToRequest:(id)arg1;	// IMP=0x00000001000bae8c
- (void)_addHeaderElement:(id)arg1 toRequest:(id)arg2;	// IMP=0x00000001000babdc
- (void)_applyLabelToRequest:(id)arg1 includeBlockQuote:(_Bool)arg2 language:(id)arg3 isWebLanguageChoice:(_Bool)arg4;	// IMP=0x00000001000ba690
- (id)_removeBadDeveloperDecisions:(id)arg1;	// IMP=0x00000001000ba3cc
- (void)_applyAttributesFromText:(id)arg1 toRequest:(id)arg2 withLanguage:(id)arg3;	// IMP=0x00000001000ba36c
- (id)arrayOfTraitsAsStringsWithTraitOrder:(id)arg1;	// IMP=0x00000001000ba2d8
- (id)arrayOfTraitsAsStrings;	// IMP=0x00000001000ba2c8
- (id)arrayOfTraitsAsStringsWithTraitOrder:(id)arg1 language:(id)arg2;	// IMP=0x00000001000b8228
- (id)mathSummary;	// IMP=0x0000000100110fc8
- (void)expandMathEquation;	// IMP=0x0000000100110f2c
- (_Bool)canExpandMathEquation;	// IMP=0x0000000100110df0
- (id)mathBrailleDescription;	// IMP=0x0000000100110d68
- (_Bool)canNavigateMathSegments;	// IMP=0x0000000100110d40
- (id)mathSegmentsWithGranularityLevel:(unsigned long long)arg1;	// IMP=0x0000000100110aa0
- (unsigned long long)_minimumSegmentDepth;	// IMP=0x0000000100110a38
- (unsigned long long)_minimumSegmentDepthForExpression:(id)arg1 withMaximumDepth:(unsigned long long)arg2;	// IMP=0x0000000100110984
- (id)mathEquationDescription;	// IMP=0x00000001001108fc
- (id)_mathAXStringFromAttributedString:(id)arg1;	// IMP=0x0000000100110384
- (id)_mathExpression;	// IMP=0x0000000100110310
- (id)_rawMathEquation;	// IMP=0x00000001001102f0

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly) Class superclass;

@end

