//
//     Generated by classdumpios 1.0.1 (64 bit) (iOS port by DreamDevLost)(Debug version compiled Sep 26 2020 13:48:20).
//
//  Copyright (C) 1997-2019 Steve Nygard.
//

#import <objc/NSObject.h>

@class ContentBufferCache, UserFSBufferCache;
@protocol OS_dispatch_queue, OS_dispatch_source, OS_xpc_object;

__attribute__((visibility("hidden")))
@interface UserFSDevice : NSObject
{
    int _numberOfClients;	// 8 = 0x8
    int _fd;	// 12 = 0xc
    unsigned int _notification;	// 16 = 0x10
    const char *_name;	// 24 = 0x18
    UserFSBufferCache *_cache;	// 32 = 0x20
    ContentBufferCache *_bufferlist;	// 40 = 0x28
    struct _userfs_volume_s *_volume;	// 48 = 0x30
    NSObject<OS_dispatch_queue> *_queue;	// 56 = 0x38
    NSObject<OS_dispatch_source> *_timer;	// 64 = 0x40
    NSObject<OS_xpc_object> *_listener;	// 72 = 0x48
    void *_plugin_dll_handle;	// 80 = 0x50
    struct _opaque_pthread_mutex_t _readahead_mutex;	// 88 = 0x58
    struct userfs_plugin_operations _ops;	// 152 = 0x98
}

- (void).cxx_destruct;	// IMP=0x00000001000069b4
@property(nonatomic) struct _opaque_pthread_mutex_t readahead_mutex; // @synthesize readahead_mutex=_readahead_mutex;
@property(nonatomic) struct userfs_plugin_operations ops; // @synthesize ops=_ops;
@property(nonatomic) void *plugin_dll_handle; // @synthesize plugin_dll_handle=_plugin_dll_handle;
@property(nonatomic) unsigned int notification; // @synthesize notification=_notification;
@property(nonatomic) int fd; // @synthesize fd=_fd;
@property(nonatomic) int numberOfClients; // @synthesize numberOfClients=_numberOfClients;
@property(retain, nonatomic) NSObject<OS_xpc_object> *listener; // @synthesize listener=_listener;
@property(retain, nonatomic) NSObject<OS_dispatch_source> *timer; // @synthesize timer=_timer;
@property(retain, nonatomic) NSObject<OS_dispatch_queue> *queue; // @synthesize queue=_queue;
@property(nonatomic) struct _userfs_volume_s *volume; // @synthesize volume=_volume;
@property(retain, nonatomic) ContentBufferCache *bufferlist; // @synthesize bufferlist=_bufferlist;
@property(retain, nonatomic) UserFSBufferCache *cache; // @synthesize cache=_cache;
@property(nonatomic) const char *name; // @synthesize name=_name;
- (void)streamIncrementThreadCount:(struct _userfs_stream_s *)arg1;	// IMP=0x0000000100006808
- (unsigned long long)streamGetLastOffsetInCache:(struct _userfs_stream_s *)arg1;	// IMP=0x00000001000067c8
- (unsigned long long)streamGetNextOffsetToCache:(struct _userfs_stream_s *)arg1;	// IMP=0x0000000100006788
- (struct _opaque_pthread_mutex_t *)mutex;	// IMP=0x0000000100006780
- (const char *)streamName:(struct _userfs_stream_s *)arg1;	// IMP=0x000000010000670c
- (int)closeStream:(struct _userfs_stream_s *)arg1;	// IMP=0x0000000100006698
- (int)readStream:(struct _userfs_stream_s *)arg1 atOffset:(unsigned long long)arg2 toBuffer:(void *)arg3 ofLength:(unsigned long long)arg4 readAhead:(_Bool)arg5;	// IMP=0x00000001000065f4
- (unsigned long long)streamLength:(struct _userfs_stream_s *)arg1;	// IMP=0x00000001000065b4
- (int)openStream:(struct _userfs_stream_s **)arg1 atPath:(const char *)arg2;	// IMP=0x0000000100006518
- (int)deleteItemAtPath:(const char *)arg1;	// IMP=0x000000010000648c
- (int)enumerateChildren:(id)arg1 atPath:(const char *)arg2 withState:(id *)arg3;	// IMP=0x00000001000063cc
- (int)getInfo:(id)arg1 atPath:(const char *)arg2;	// IMP=0x0000000100006314
- (_Bool)isVolumeLocked;	// IMP=0x0000000100006290
- (void)dealloc;	// IMP=0x00000001000060a0
- (void)terminate;	// IMP=0x0000000100005e18
- (int)closeVolume;	// IMP=0x0000000100005a5c
- (int)flushVolume;	// IMP=0x00000001000059d8
- (int)openVolume;	// IMP=0x00000001000052b0
- (void)cancelTimer;	// IMP=0x0000000100005224
- (void)resumeTimer;	// IMP=0x0000000100004f6c
- (void)suspendTimer;	// IMP=0x0000000100004ee8
- (id)init;	// IMP=0x0000000100004e14

@end

