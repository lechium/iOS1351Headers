//
//     Generated by classdumpios 1.0.1 (64 bit) (iOS port by DreamDevLost)(Debug version compiled Sep 26 2020 13:48:20).
//
//  Copyright (C) 1997-2019 Steve Nygard.
//

#import <objc/NSObject.h>

#import "UVFSPluginProtocol-Protocol.h"

@class LiveFSAppleDouble, LiveFSXattrCache, NSData, NSMutableData, NSString, liveFSVolume;

__attribute__((visibility("hidden")))
@interface liveFSNode : NSObject <UVFSPluginProtocol>
{
    liveFSVolume *volume;	// 8 = 0x8
    void *UVFSNode;	// 16 = 0x10
    struct _UVFSFSOps *FSOps;	// 24 = 0x18
    NSMutableData *attrsData;	// 32 = 0x20
    LiveFSXattrCache *xattrCache;	// 40 = 0x28
    _Bool isFSCompressed;	// 48 = 0x30
    void *streamNode;	// 56 = 0x38
    unsigned long long deCmpFlags;	// 64 = 0x40
    _Bool _lfn_check_appledouble;	// 72 = 0x48
    int _lfn_openCount;	// 76 = 0x4c
    int _lfn_wasWritten;	// 80 = 0x50
    NSString *_lfn_name;	// 88 = 0x58
    liveFSNode *_lfn_parent;	// 96 = 0x60
    NSString *_lfn_fh;	// 104 = 0x68
    unsigned long long _lfn_inUseClientSet;	// 112 = 0x70
    unsigned long long _lfn_interestedClients;	// 120 = 0x78
    LiveFSAppleDouble *_lfn_appledouble;	// 128 = 0x80
    LiveFSXattrCache *_lfn_xattrCache;	// 136 = 0x88
    unsigned long long _lfn_fileid;	// 144 = 0x90
}

+ (id)FileProviderFileHandleForFileID:(unsigned long long)arg1;	// IMP=0x000000010000fc8c
- (void).cxx_destruct;	// IMP=0x0000000100013cb4
@property(readonly, nonatomic) unsigned long long lfn_fileid; // @synthesize lfn_fileid=_lfn_fileid;
@property _Bool lfn_check_appledouble; // @synthesize lfn_check_appledouble=_lfn_check_appledouble;
@property(retain) LiveFSXattrCache *lfn_xattrCache; // @synthesize lfn_xattrCache=_lfn_xattrCache;
@property(retain) LiveFSAppleDouble *lfn_appledouble; // @synthesize lfn_appledouble=_lfn_appledouble;
@property int lfn_wasWritten; // @synthesize lfn_wasWritten=_lfn_wasWritten;
@property int lfn_openCount; // @synthesize lfn_openCount=_lfn_openCount;
@property unsigned long long lfn_interestedClients; // @synthesize lfn_interestedClients=_lfn_interestedClients;
@property unsigned long long lfn_inUseClientSet; // @synthesize lfn_inUseClientSet=_lfn_inUseClientSet;
@property(retain) NSString *lfn_fh; // @synthesize lfn_fh=_lfn_fh;
@property(retain) liveFSNode *lfn_parent; // @synthesize lfn_parent=_lfn_parent;
@property(retain) NSString *lfn_name; // @synthesize lfn_name=_lfn_name;
- (int)setFileSystemAttributes:(id)arg1 toValue:(id)arg2 andResult:(id *)arg3;	// IMP=0x0000000100013894
- (int)scanVolumeForFileIDs:(const unsigned long long *)arg1 count:(unsigned int)arg2 returningAttributes:(unsigned long long)arg3 withBlock:(CDUnknownBlockType)arg4;	// IMP=0x0000000100013804
- (int)cloneFileToDirectory:(id)arg1 withName:(id)arg2 attrs:(id)arg3 flags:(unsigned int)arg4 andResultingNode:(id *)arg5;	// IMP=0x0000000100013678
- (int)scanDirectoryForMatches:(id)arg1 withScanDirCookie:(unsigned long long *)arg2 withScanDirCookieVerifier:(unsigned long long *)arg3 withSearchResultType:(int *)arg4 withSearchResult:(id *)arg5 withSearchResultAttr:(struct _LIFileAttributes *)arg6;	// IMP=0x00000001000134c8
- (void)createScanDirReplyRequest:(struct _scandir_matching_reply *)arg1;	// IMP=0x000000010001349c
- (void)createScanDirSearchRequest:(struct _scandir_matching_request *)arg1 withFilter:(struct _LIFileAttributes *)arg2 withCookie:(unsigned long long *)arg3 withCookieVerifier:(unsigned long long *)arg4 fromSearchCriteria:(id)arg5;	// IMP=0x0000000100013248
- (void)createFilterAttr:(struct _LIFileAttributes *)arg1 FromCriteria:(id)arg2;	// IMP=0x0000000100013070
- (int)listXattr:(id *)arg1;	// IMP=0x0000000100012e34
- (int)setXAttr:(id)arg1 withXAttr:(id)arg2 how:(int)arg3;	// IMP=0x0000000100012ce4
- (int)getXAttr:(id)arg1 withBuffer:(id *)arg2;	// IMP=0x0000000100012b70
- (int)reclaim;	// IMP=0x0000000100012ac4
- (int)pathConf:(id *)arg1;	// IMP=0x00000001000128f8
- (int)statFS:(id *)arg1;	// IMP=0x00000001000126f8
- (int)readDirectoryEntriesWithAttrs:(id)arg1 withCookie:(unsigned long long)arg2 withLengthOut:(long long *)arg3 andWithVerifier:(unsigned long long *)arg4;	// IMP=0x000000010001262c
- (int)readDirectoryEntries:(id)arg1 withCookie:(unsigned long long)arg2 withLengthOut:(long long *)arg3 andWithVerifier:(unsigned long long *)arg4;	// IMP=0x0000000100012560
- (int)link:(id)arg1 withName:(id)arg2 fileAttrOut:(id *)arg3 dirAttrOut:(id *)arg4;	// IMP=0x000000010001236c
- (int)rename:(id)arg1 named:(id)arg2 withToDirNode:(id)arg3 withToNode:(id)arg4 withToName:(id)arg5 andFlags:(unsigned int)arg6;	// IMP=0x00000001000121d4
- (int)remove:(int)arg1 named:(id)arg2 node:(id)arg3;	// IMP=0x00000001000120a8
- (int)createDirEntry:(id)arg1 withAttrs:(id)arg2 withData:(id)arg3 withResultingNode:(id *)arg4;	// IMP=0x0000000100011e38
- (int)writeData:(unsigned long long)arg1 fromBuffer:(id)arg2 withLengthOut:(unsigned long long *)arg3;	// IMP=0x0000000100011d28
- (int)readData:(unsigned long long)arg1 intoDataBuffer:(id)arg2 withLengthOut:(unsigned long long *)arg3;	// IMP=0x0000000100011c24
- (int)readUncompressedData:(unsigned long long)arg1 intoDataBuffer:(id)arg2 withLengthOut:(unsigned long long *)arg3;	// IMP=0x000000010001191c
- (int)fetchUncompressedData:(CDStruct_1b1741ce *)arg1 offset:(unsigned long long)arg2 length:(unsigned long long)arg3 vectorSize:(int)arg4 vector:(CDStruct_eb6fb79d *)arg5 withLengthOut:(unsigned long long *)arg6;	// IMP=0x0000000100011810
- (int)readSymLinkDataInto:(void *)arg1 ofSize:(int)arg2 withSymLinkDataSize:(unsigned long long *)arg3 andWithSymLinkAttrData:(id *)arg4;	// IMP=0x0000000100011734
- (int)lookup:(id)arg1 withResultingNode:(id *)arg2;	// IMP=0x00000001000114b8
- (int)setAttributeTo:(id)arg1 withResultingAttribute:(id *)arg2;	// IMP=0x0000000100011154
@property(readonly, nonatomic, getter=getAttrData) NSData *lfn_attr_data;
- (int)getDeviceFD;	// IMP=0x0000000100010ff4
- (void)setCachedAttrs:(id)arg1;	// IMP=0x0000000100010f28
- (void)getCompressionFileInfo;	// IMP=0x0000000100010da4
- (_Bool)verifyFileIsFSCompressed:(int *)arg1;	// IMP=0x0000000100010c44
- (unsigned int)decmpfsGetDirectoryEntries:(CDStruct_1b1741ce *)arg1;	// IMP=0x0000000100010c08
- (_Bool)decmpfsTypeIsDataless:(unsigned int)arg1;	// IMP=0x0000000100010bf4
- (int)decmpfsFetchCompressedHeader:(struct **)arg1;	// IMP=0x0000000100010950
- (int)getAttribute:(id *)arg1;	// IMP=0x0000000100010878
- (int)getFileSystemAttribute:(id)arg1 andResult:(id *)arg2;	// IMP=0x00000001000105c8
- (int)syncTheFileSystem;	// IMP=0x0000000100010568
- (int)unloadFileSystem:(int)arg1;	// IMP=0x0000000100010520
- (int)updateName:(id)arg1 andParent:(id)arg2;	// IMP=0x00000001000104a0
- (void)forceUpdateAttrs;	// IMP=0x0000000100010464
- (int)hiddenStatus;	// IMP=0x00000001000103e4
- (unsigned int)getLinkCount;	// IMP=0x0000000100010314
- (id)getFH;	// IMP=0x00000001000102d8
- (void)dealloc;	// IMP=0x000000010001021c
- (id)initWithVolume:(id)arg1 andParent:(id)arg2 andName:(id)arg3 andUVFSNode:(void *)arg4;	// IMP=0x000000010000feb4
- (id)initWithVolume:(id)arg1 andRootUVFSNode:(void *)arg2;	// IMP=0x000000010000fd38

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

