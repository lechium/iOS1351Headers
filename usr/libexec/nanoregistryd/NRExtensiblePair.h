//
//     Generated by classdumpios 1.0.1 (64 bit) (iOS port by DreamDevLost)(Debug version compiled Sep 26 2020 13:48:20).
//
//  Copyright (C) 1997-2019 Steve Nygard.
//

#import <objc/NSObject.h>

#import "CBScalablePipeManagerDelegate-Protocol.h"
#import "EPAdvertiserDelegate-Protocol.h"
#import "EPDiscovererDelegate-Protocol.h"
#import "EPMassUnpairerDelegate-Protocol.h"
#import "EPOOBKeyGeneratorDelegate-Protocol.h"
#import "EPPairerDelegate-Protocol.h"
#import "EPResourceOwnerDelegate-Protocol.h"
#import "EPService-Protocol.h"

@class EPAdvertiser, EPDiscoverer, EPFactory, EPMassUnpairer, EPOOBKeyGenerator, EPScalablePipeManager, EPScalablePipeManagerManager, NRConcurrentPipeManager, NSData, NSError, NSMutableArray, NSMutableDictionary, NSNumber, NSString, NSUUID;
@protocol AbstractTimer, EPResourceManagerProtocol, EPServiceRegistry, NRExtensiblePairingDelegate, OS_dispatch_source;

@interface NRExtensiblePair : NSObject <EPAdvertiserDelegate, EPDiscovererDelegate, EPPairerDelegate, EPOOBKeyGeneratorDelegate, EPMassUnpairerDelegate, EPResourceOwnerDelegate, CBScalablePipeManagerDelegate, EPService>
{
    unsigned long long _nextPairingMode;	// 8 = 0x8
    _Bool _pairingIsSetUp;	// 16 = 0x10
    _Bool _firstPairingRequestSent;	// 17 = 0x11
    NSUUID *_pairedBTDeviceUUID;	// 24 = 0x18
    id <AbstractTimer> _timer;	// 32 = 0x20
    NSObject<OS_dispatch_source> *_currentTimer;	// 40 = 0x28
    NSMutableArray *_startupBlocks;	// 48 = 0x30
    _Bool _failure;	// 56 = 0x38
    id <EPResourceManagerProtocol> _pairingPipeFactory;	// 64 = 0x40
    NRConcurrentPipeManager *_concurrentPipeFactory;	// 72 = 0x48
    NSMutableDictionary *_didSetPairingStrategy;	// 80 = 0x50
    _Bool _beginningToPairNotificationSent;	// 88 = 0x58
    NSError *_lastBluetoothPairingError;	// 96 = 0x60
    _Bool _postFailsafeObliteration;	// 104 = 0x68
    _Bool _haveStartedCreatingPairingDevice;	// 105 = 0x69
    _Bool _haveFinishedCreatingPairingDevice;	// 106 = 0x6a
    _Bool _isBluetoothPairComplete;	// 107 = 0x6b
    _Bool _IDSAccountAndDevicePresent;	// 108 = 0x6c
    _Bool _isInitialPropertiesReceived;	// 109 = 0x6d
    id <NRExtensiblePairingDelegate> _delegate;	// 112 = 0x70
    NSString *_advertisedName;	// 120 = 0x78
    NSData *_oobKey;	// 128 = 0x80
    unsigned long long _pairingMode;	// 136 = 0x88
    NSNumber *_passcode;	// 144 = 0x90
    id <EPServiceRegistry> _serviceRegistry;	// 152 = 0x98
    EPDiscoverer *_discoverer;	// 160 = 0xa0
    EPAdvertiser *_advertiser;	// 168 = 0xa8
    EPScalablePipeManagerManager *_pipeManager;	// 176 = 0xb0
    EPScalablePipeManager *_pipe;	// 184 = 0xb8
    EPOOBKeyGenerator *_generator;	// 192 = 0xc0
    EPMassUnpairer *_unpairer;	// 200 = 0xc8
    NSMutableArray *_pairers;	// 208 = 0xd0
    NSMutableArray *_pairingDevices;	// 216 = 0xd8
    NSUUID *_nrDeviceUUID;	// 224 = 0xe0
    unsigned long long _pairingStrategy;	// 232 = 0xe8
    unsigned long long _pairingStyle;	// 240 = 0xf0
}

+ (id)stringFromPairingStrategy:(unsigned long long)arg1;	// IMP=0x00000001000af378
+ (id)newService:(id)arg1;	// IMP=0x00000001000abcac
- (void).cxx_destruct;	// IMP=0x00000001000b26e4
@property(nonatomic) _Bool isInitialPropertiesReceived; // @synthesize isInitialPropertiesReceived=_isInitialPropertiesReceived;
@property(nonatomic) _Bool IDSAccountAndDevicePresent; // @synthesize IDSAccountAndDevicePresent=_IDSAccountAndDevicePresent;
@property(nonatomic) _Bool isBluetoothPairComplete; // @synthesize isBluetoothPairComplete=_isBluetoothPairComplete;
@property(readonly, nonatomic) _Bool haveFinishedCreatingPairingDevice; // @synthesize haveFinishedCreatingPairingDevice=_haveFinishedCreatingPairingDevice;
@property(readonly, nonatomic) _Bool haveStartedCreatingPairingDevice; // @synthesize haveStartedCreatingPairingDevice=_haveStartedCreatingPairingDevice;
@property(readonly, nonatomic) unsigned long long pairingStyle; // @synthesize pairingStyle=_pairingStyle;
@property(readonly, nonatomic) unsigned long long pairingStrategy; // @synthesize pairingStrategy=_pairingStrategy;
@property(retain, nonatomic) NSUUID *nrDeviceUUID; // @synthesize nrDeviceUUID=_nrDeviceUUID;
@property(readonly, nonatomic) NSMutableArray *pairingDevices; // @synthesize pairingDevices=_pairingDevices;
@property(readonly, nonatomic) NSMutableArray *pairers; // @synthesize pairers=_pairers;
@property(readonly, nonatomic) EPMassUnpairer *unpairer; // @synthesize unpairer=_unpairer;
@property(readonly, nonatomic) EPOOBKeyGenerator *generator; // @synthesize generator=_generator;
@property(readonly, nonatomic) EPScalablePipeManager *pipe; // @synthesize pipe=_pipe;
@property(readonly, nonatomic) EPScalablePipeManagerManager *pipeManager; // @synthesize pipeManager=_pipeManager;
@property(readonly, nonatomic) EPAdvertiser *advertiser; // @synthesize advertiser=_advertiser;
@property(readonly, nonatomic) EPDiscoverer *discoverer; // @synthesize discoverer=_discoverer;
@property(readonly, nonatomic) id <EPServiceRegistry> serviceRegistry; // @synthesize serviceRegistry=_serviceRegistry;
@property(nonatomic) _Bool postFailsafeObliteration; // @synthesize postFailsafeObliteration=_postFailsafeObliteration;
@property(retain, nonatomic) NSNumber *passcode; // @synthesize passcode=_passcode;
@property(nonatomic) unsigned long long pairingMode; // @synthesize pairingMode=_pairingMode;
@property(retain, nonatomic) NSData *oobKey; // @synthesize oobKey=_oobKey;
@property(retain, nonatomic) NSString *advertisedName; // @synthesize advertisedName=_advertisedName;
@property(nonatomic) __weak id <NRExtensiblePairingDelegate> delegate; // @synthesize delegate=_delegate;
- (void)scalablePipeManager:(id)arg1 pipeDidDisconnect:(id)arg2 error:(id)arg3;	// IMP=0x00000001000b25c8
- (void)scalablePipeManager:(id)arg1 pipeDidConnect:(id)arg2;	// IMP=0x00000001000b25c4
- (void)scalablePipeManager:(id)arg1 didUnregisterEndpoint:(id)arg2;	// IMP=0x00000001000b25c0
- (void)scalablePipeManager:(id)arg1 didRegisterEndpoint:(id)arg2 error:(id)arg3;	// IMP=0x00000001000b25bc
- (void)scalablePipeManagerDidUpdateState:(id)arg1;	// IMP=0x00000001000b25b8
- (id)pairer:(id)arg1 newEndpointWithDelegate:(id)arg2;	// IMP=0x00000001000b2294
- (void)sendBeginningToPairNotification;	// IMP=0x00000001000b21e4
- (void)pairer:(id)arg1 completedWithError:(id)arg2;	// IMP=0x00000001000b0ba0
- (void)pairer:(id)arg1 requestWithType:(long long)arg2 passkey:(id)arg3;	// IMP=0x00000001000b05f4
- (void)pairerDidBeginToPair:(id)arg1;	// IMP=0x00000001000b05ac
- (void)generatorUpdatedKey:(id)arg1;	// IMP=0x00000001000b05a0
- (void)advertiser:(id)arg1 receivedData:(id)arg2;	// IMP=0x00000001000b03c8
- (void)advertiser:(id)arg1 receivedPairingRequestForDevice:(id)arg2;	// IMP=0x00000001000b0228
- (void)advertiser:(id)arg1 deviceDidAppear:(id)arg2;	// IMP=0x00000001000b021c
- (void)discovererBluetoothIsWorking:(id)arg1;	// IMP=0x00000001000b0214
- (void)discovererBluetoothMayHaveFailed:(id)arg1;	// IMP=0x00000001000b01c8
- (void)discoverer:(id)arg1 deviceDidBecomeDisplayable:(id)arg2;	// IMP=0x00000001000aff2c
- (void)unpairerBluetoothMayHaveFailed:(id)arg1;	// IMP=0x00000001000aff20
- (void)unpairer:(id)arg1 didFinishUnpairingDevices:(id)arg2;	// IMP=0x00000001000afa90
- (void)resourceAvailabilityDidChange:(id)arg1;	// IMP=0x00000001000afa84
- (void)pairWithDevice:(id)arg1;	// IMP=0x00000001000af3a4
- (void)advertiseAndPairWithAdvertisedName:(id)arg1 andPairingMode:(unsigned long long)arg2 withGetStartedBlock:(CDUnknownBlockType)arg3;	// IMP=0x00000001000af220
- (void)discoverAndPairWithAdvertisedName:(id)arg1 andDeviceID:(id)arg2;	// IMP=0x00000001000af084
- (void)discoverAndPairWithAdvertisedName:(id)arg1 andOOBKey:(id)arg2;	// IMP=0x00000001000aef1c
- (void)setPairingTimer;	// IMP=0x00000001000aee30
- (unsigned long long)pairingStrategyFromData:(id)arg1 andStyle:(unsigned long long *)arg2;	// IMP=0x00000001000aed5c
- (id)dataFromPairingStrategy:(unsigned long long)arg1 andStyle:(unsigned long long)arg2;	// IMP=0x00000001000aed14
- (unsigned long long)pairingStrategyFromAdvertisedName:(id)arg1;	// IMP=0x00000001000aebb4
- (_Bool)hasStartedPairing;	// IMP=0x00000001000aeb58
- (_Bool)isReady;	// IMP=0x00000001000ae9d0
- (void)respondWithPasscode:(id)arg1;	// IMP=0x00000001000ae850
- (void)bluetoothPaired:(id)arg1;	// IMP=0x00000001000ae630
- (void)propertiesReceived;	// IMP=0x00000001000ae4ec
- (void)accountAndDeviceReady;	// IMP=0x00000001000ae3a8
@property(readonly, nonatomic) _Bool isPairing;
- (void)setPairingError;	// IMP=0x00000001000ae058
- (void)timeout;	// IMP=0x00000001000ade78
- (id)_getPairingExtendedMetadata;	// IMP=0x00000001000add54
- (void)update;	// IMP=0x00000001000ac0d0
- (void)setPairingStrategy:(unsigned long long)arg1 andStyle:(unsigned long long)arg2;	// IMP=0x00000001000abf98
- (void)reset:(_Bool)arg1;	// IMP=0x00000001000abec8
- (id)initWithServiceRegistry:(id)arg1;	// IMP=0x00000001000abd34
@property(readonly, nonatomic) EPFactory *factory;

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

