//
//     Generated by classdumpios 1.0.1 (64 bit) (iOS port by DreamDevLost)(Debug version compiled Sep 26 2020 13:48:20).
//
//  Copyright (C) 1997-2019 Steve Nygard.
//

#import <objc/NSObject.h>

#import "APSConnectionDelegate-Protocol.h"
#import "NFPowerObserverDelegate-Protocol.h"
#import "NFRemoteAdminConnectionAvailabilityListener-Protocol.h"
#import "NFRemoteAdminManagerInterface-Protocol.h"
#import "NFRemoteAdminSessionDelegate-Protocol.h"
#import "NSXPCListenerDelegate-Protocol.h"

@class APSConnection, NFPowerObserver, NFRemoteAdminState, NFRemoteAdminStorage, NSLock, NSMutableDictionary, NSString;
@protocol NFAdminSession, OS_dispatch_queue, OS_os_transaction;

@interface _NFRemoteAdminManager : NSObject <NFRemoteAdminManagerInterface, NFRemoteAdminSessionDelegate, NFRemoteAdminConnectionAvailabilityListener, NFPowerObserverDelegate, APSConnectionDelegate, NSXPCListenerDelegate>
{
    _Bool _isRunning;	// 8 = 0x8
    _Bool _restrictedModeToServerPending;	// 9 = 0x9
    _Bool _restrictedPerformanceModeToServerPending;	// 10 = 0xa
    NSMutableDictionary *_callbackHandlers;	// 16 = 0x10
    NFRemoteAdminStorage *_storage;	// 24 = 0x18
    NFPowerObserver *_powerObserver;	// 32 = 0x20
    NSObject<OS_dispatch_queue> *_apsQueue;	// 40 = 0x28
    APSConnection *_apsConnection;	// 48 = 0x30
    NSObject<OS_dispatch_queue> *_xpcConnectionQueue;	// 56 = 0x38
    NFRemoteAdminState *_activeServerState;	// 64 = 0x40
    id <NFAdminSession> _activeSession;	// 72 = 0x48
    NSObject<OS_dispatch_queue> *_sessionQueue;	// 80 = 0x50
    NSObject<OS_os_transaction> *_keepAliveTransaction;	// 88 = 0x58
    long long _keepAliveTransactionCount;	// 96 = 0x60
    NSLock *_keepAliveTransactionLock;	// 104 = 0x68
    _Bool _networkUnavailableTransactionRetain;	// 112 = 0x70
    unsigned long long _stateCaptureHandle;	// 120 = 0x78
    _Bool _sessionWasAbortedOnSleep;	// 128 = 0x80
    _Bool _hardwareLoadFailure;	// 129 = 0x81
    NSLock *_processAlarmLock;	// 136 = 0x88
    _Bool _nextSessionStartRequested;	// 144 = 0x90
}

+ (id)sharedRemoteAdminManager;	// IMP=0x0000000100011440
- (struct os_state_data_s *)dumpState;	// IMP=0x000000010001e4e4
- (id)_processRedirect:(id)arg1 oneTimeConnection:(_Bool)arg2 secureElementManagerSession:(id)arg3;	// IMP=0x000000010001d824
- (id)_connectToServer:(id)arg1 oneTimeConnection:(_Bool)arg2 secureElementManagerSession:(id)arg3;	// IMP=0x000000010001c688
- (void)_startNextSession;	// IMP=0x000000010001bb10
- (id)_getNextAvailableStateObject;	// IMP=0x000000010001b6e4
- (id)_processRemoteAdminState:(id)arg1 oneTime:(_Bool)arg2 secureElementManagerSession:(id)arg3 outStateStorageUpdated:(_Bool *)arg4;	// IMP=0x000000010001b4e8
- (void)handleCardIngestionStatus:(unsigned long long)arg1;	// IMP=0x000000010001b390
- (void)handleCardSessionToken:(id)arg1;	// IMP=0x000000010001b238
- (void)handleCleanupProgress:(float)arg1;	// IMP=0x000000010001b0d4
- (void)remoteAdminConnectionAvailabilityDidChange:(_Bool)arg1;	// IMP=0x000000010001aeec
- (void)connection:(id)arg1 didReceiveMessageForTopic:(id)arg2 userInfo:(id)arg3;	// IMP=0x000000010001abdc
- (void)connection:(id)arg1 didReceivePublicToken:(id)arg2;	// IMP=0x000000010001abcc
- (void)_listenToRestrictedPerformanceMode;	// IMP=0x000000010001ab7c
- (void)restrictedPerformanceModeEntered:(id)arg1;	// IMP=0x000000010001a98c
- (void)_listenToRestrictedMode;	// IMP=0x000000010001a93c
- (void)restrictedModeExited;	// IMP=0x000000010001a768
- (void)restrictedModeEntered:(id)arg1;	// IMP=0x000000010001a590
- (void)_subscribeToPushTopics;	// IMP=0x000000010001a360
- (oneway void)getAPNPublicToken:(CDUnknownBlockType)arg1;	// IMP=0x000000010001a084
- (oneway void)deleteAllAppletsAndCleanupWithTSM:(CDUnknownBlockType)arg1;	// IMP=0x000000010001968c
- (oneway void)getSELDInfoForBroker:(CDUnknownBlockType)arg1;	// IMP=0x0000000100019130
- (oneway void)cancelCardIngestion:(CDUnknownBlockType)arg1;	// IMP=0x0000000100018dd0
- (oneway void)ingestCard:(id)arg1 callback:(CDUnknownBlockType)arg2;	// IMP=0x000000010001761c
- (oneway void)queueServerConnectionForApplets:(id)arg1 callback:(CDUnknownBlockType)arg2;	// IMP=0x0000000100017030
- (oneway void)queueServerConnection:(id)arg1 callback:(CDUnknownBlockType)arg2;	// IMP=0x0000000100016aec
- (oneway void)connectToServer:(id)arg1 callback:(CDUnknownBlockType)arg2;	// IMP=0x0000000100016148
- (oneway void)nextRequestForServer:(id)arg1 callback:(CDUnknownBlockType)arg2;	// IMP=0x0000000100015b40
- (oneway void)primaryRegionTopic:(CDUnknownBlockType)arg1;	// IMP=0x0000000100015b04
- (oneway void)registrationInfo:(CDUnknownBlockType)arg1;	// IMP=0x0000000100015ac8
- (oneway void)setRegistrationInfo:(id)arg1 primaryRegionTopic:(id)arg2 callback:(CDUnknownBlockType)arg3;	// IMP=0x0000000100015838
- (void)_unregisterCallbackWithConnection:(id)arg1;	// IMP=0x00000001000157a8
- (oneway void)unregisterForCallbacks:(id)arg1;	// IMP=0x0000000100015638
- (oneway void)registerForCallbacks:(id)arg1;	// IMP=0x0000000100015468
- (id)_generateReaderParamsFromRequest:(id)arg1;	// IMP=0x00000001000151fc
- (_Bool)_queueNFRemoteAdminStateForServerIdentifiers:(id)arg1;	// IMP=0x0000000100014c80
- (void)didCloseXPCConnection:(id)arg1;	// IMP=0x0000000100014af8
- (_Bool)listener:(id)arg1 shouldAcceptNewConnection:(id)arg2;	// IMP=0x0000000100014548
- (void)_unloadService;	// IMP=0x00000001000144ec
- (void)_loadService;	// IMP=0x0000000100014358
- (void)powerObserverSystemHasPoweredOn:(id)arg1;	// IMP=0x00000001000141b0
- (void)powerObserverSystemWillSleep:(id)arg1;	// IMP=0x0000000100013f74
- (void)_initializeWhenSEManagerIsReady;	// IMP=0x0000000100013c2c
- (void)_checkForAPNTokenUpdate:(id)arg1;	// IMP=0x00000001000138dc
- (_Bool)_validateIcefall;	// IMP=0x000000010001384c
- (_Bool)_validateESE;	// IMP=0x00000001000137b8
- (void)_keepAliveTransactionRelease;	// IMP=0x0000000100013658
- (void)_keepAliveTransactionRetain;	// IMP=0x00000001000134d8
- (void)preferencesDidChange;	// IMP=0x000000010001347c
- (_Bool)doesAlarmExist:(const char *)arg1;	// IMP=0x0000000100013300
- (void)cancelAlarm:(const char *)arg1;	// IMP=0x00000001000132b0
- (void)scheduleProcessingAlarm;	// IMP=0x0000000100013298
- (void)scheduleCheckIn:(id)arg1;	// IMP=0x00000001000130d4
- (void)scheduleAlarmWithName:(const char *)arg1 timeSince1970:(unsigned long long)arg2;	// IMP=0x0000000100013044
- (void)scheduleAlarmWithName:(const char *)arg1 timeInSeconds:(unsigned long long)arg2;	// IMP=0x0000000100012ee8
- (void)kickWatchdog;	// IMP=0x0000000100012eac
- (void)releasePowerAssertion;	// IMP=0x0000000100012e78
- (void)holdPowerAssertion;	// IMP=0x0000000100012e44
- (void)stop;	// IMP=0x0000000100012b80
- (void)start;	// IMP=0x0000000100011d30
- (id)defaultRequesterWithReason:(id)arg1;	// IMP=0x0000000100011b74
- (void)dealloc;	// IMP=0x0000000100011acc
- (id)init;	// IMP=0x00000001000114a4

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

