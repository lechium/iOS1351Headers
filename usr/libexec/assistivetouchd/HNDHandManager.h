//
//     Generated by classdumpios 1.0.1 (64 bit) (iOS port by DreamDevLost)(Debug version compiled Sep 26 2020 13:48:20).
//
//  Copyright (C) 1997-2019 Steve Nygard.
//

#import <objc/NSObject.h>

#import "AXPIFingerAppearanceDelegate-Protocol.h"
#import "AXUISoftwareKeyboardManagerDelegate-Protocol.h"
#import "HNDSystemPointerStreamObserver-Protocol.h"

@class AXDispatchTimer, AXDragManager, AXNamedReplayableGesture, AXPIFingerController, AXPIFingerModel, AXPISystemPointerAppearance, AXUISoftwareKeyboardManager, HNDAssistiveTouchServer, HNDDisplayManager, HNDDwellPointerAppearance, HNDEventManager, HNDMousePointerAppearance, HNDSystemPointerController, NSArray, NSMutableDictionary, NSPointerArray, NSString;
@protocol BSInvalidatable;

@interface HNDHandManager : NSObject <AXUISoftwareKeyboardManagerDelegate, AXPIFingerAppearanceDelegate, HNDSystemPointerStreamObserver>
{
    HNDEventManager *_eventManager;	// 8 = 0x8
    HNDDisplayManager *_displayManager;	// 16 = 0x10
    HNDAssistiveTouchServer *_assistiveTouchServer;	// 24 = 0x18
    AXPIFingerController *_fingerController;	// 32 = 0x20
    int _orientation;	// 40 = 0x28
    _Bool _primaryButtonDown;	// 44 = 0x2c
    _Bool _inBrokenHomeButtonMode;	// 45 = 0x2d
    _Bool _isMultiFinger;	// 46 = 0x2e
    _Bool _isRecording;	// 47 = 0x2f
    _Bool _finishedRecording;	// 48 = 0x30
    _Bool _waitingForScreenshot;	// 49 = 0x31
    _Bool _isFingerDown;	// 50 = 0x32
    double _touchSpeed;	// 56 = 0x38
    _Bool _openMenuWithSwaggle;	// 64 = 0x40
    _Bool _alwaysShowMenu;	// 65 = 0x41
    NSArray *_customGestures;	// 72 = 0x48
    AXNamedReplayableGesture *_currentCustomGesture;	// 80 = 0x50
    struct CGPoint _orbGestureLocation;	// 88 = 0x58
    int _preparedScrollAction;	// 104 = 0x68
    AXUISoftwareKeyboardManager *_softwareKeyboardManager;	// 112 = 0x70
    HNDMousePointerAppearance *_mousePointerAppearance;	// 120 = 0x78
    HNDDwellPointerAppearance *_dwellPointerAppearance;	// 128 = 0x80
    AXPISystemPointerAppearance *_systemPointerAppearance;	// 136 = 0x88
    AXDispatchTimer *_systemPointerSettingsChangedDebouncer;	// 144 = 0x90
    AXDispatchTimer *_dwellTimer;	// 152 = 0x98
    struct CGPoint _lastDwellStartPoint;	// 160 = 0xa0
    unsigned long long _dwellMode;	// 176 = 0xb0
    AXDispatchTimer *_fingerFadeTimer;	// 184 = 0xb8
    _Bool _fingersFaded;	// 192 = 0xc0
    _Bool _inMultiFingerGesture;	// 193 = 0xc1
    _Bool _resettingPinch;	// 194 = 0xc2
    unsigned long long _pinchMode;	// 200 = 0xc8
    unsigned long long _pinchState;	// 208 = 0xd0
    struct CGPoint _pinchRotatePreviousPoint;	// 216 = 0xd8
    _Bool _hotCornerLocked;	// 232 = 0xe8
    _Bool _hoverNubbitLocked;	// 233 = 0xe9
    struct CGPoint _dragStartPoint;	// 240 = 0xf0
    _Bool _inDragMode;	// 256 = 0x100
    _Bool _isDragNubbitMode;	// 257 = 0x101
    _Bool _isPerformingDragPressEvent;	// 258 = 0x102
    AXPIFingerModel *_realSelectedPinchFinger;	// 264 = 0x108
    _Bool _areFingersPressedDown;	// 272 = 0x110
    struct CGPoint _pressedPinchFingerStartPoint;	// 280 = 0x118
    struct CGPoint _pressedPinchFingerFulcrum;	// 296 = 0x128
    double _pressedPinchFingerMovementFromStart;	// 312 = 0x138
    NSMutableDictionary *_avPlayers;	// 320 = 0x140
    _Bool _inCustomGestureMovement;	// 328 = 0x148
    AXDispatchTimer *_orientationUpdateTimer;	// 336 = 0x150
    double _lastOrbValue;	// 344 = 0x158
    id <BSInvalidatable> _suppressVisualsAssertion;	// 352 = 0x160
    _Bool _voiceControl;	// 360 = 0x168
    NSPointerArray *_eventHandlers;	// 368 = 0x170
    AXDragManager *_dragManager;	// 376 = 0x178
    HNDSystemPointerController *_systemPointerController;	// 384 = 0x180
}

+ (id)_actionForHotCorner:(unsigned long long)arg1;	// IMP=0x0000000100027200
+ (struct CGPoint)_pointByAvoidingDisplayCornerRadius:(double)arg1 forPoint:(struct CGPoint)arg2;	// IMP=0x0000000100025fa4
+ (double)_displayCornerRadius;	// IMP=0x0000000100025ebc
+ (id)sharedManager;	// IMP=0x000000010001f8d4
+ (void)initialize;	// IMP=0x000000010001f89c
- (void).cxx_destruct;	// IMP=0x000000010002b2fc
@property(readonly, nonatomic) HNDSystemPointerController *systemPointerController; // @synthesize systemPointerController=_systemPointerController;
@property(retain, nonatomic) AXDragManager *dragManager; // @synthesize dragManager=_dragManager;
@property(nonatomic) _Bool voiceControl; // @synthesize voiceControl=_voiceControl;
@property(retain, nonatomic) NSPointerArray *eventHandlers; // @synthesize eventHandlers=_eventHandlers;
@property(retain, nonatomic) NSArray *customGestures; // @synthesize customGestures=_customGestures;
@property(nonatomic) _Bool openMenuWithSwaggle; // @synthesize openMenuWithSwaggle=_openMenuWithSwaggle;
@property(nonatomic) double touchSpeed; // @synthesize touchSpeed=_touchSpeed;
@property(nonatomic) _Bool alwaysShowMenu; // @synthesize alwaysShowMenu=_alwaysShowMenu;
- (double)fingerDiameter;	// IMP=0x000000010002b22c
- (_Bool)showInnerCircle;	// IMP=0x000000010002b1e0
- (double)fingerInnerCircleInnerRadius;	// IMP=0x000000010002b18c
- (double)fingerInnerRadius;	// IMP=0x000000010002b138
- (_Bool)showFingerOutlines;	// IMP=0x000000010002b0ec
- (double)fingerOuterRadius;	// IMP=0x000000010002b098
- (double)innerCircleStrokeOutlineWidth;	// IMP=0x000000010002b044
- (double)strokeOutlineWidth;	// IMP=0x000000010002aff0
- (double)strokeWidth;	// IMP=0x000000010002af9c
- (_Bool)useSystemFilters;	// IMP=0x000000010002af50
- (id)pressedCircularProgressFillColor;	// IMP=0x000000010002aefc
- (id)circularProgressFillColor;	// IMP=0x000000010002aea8
- (id)strokeOutlineColor;	// IMP=0x000000010002ae54
- (id)deselectedStrokeColor;	// IMP=0x000000010002ae00
- (id)selectedStrokeColor;	// IMP=0x000000010002adac
- (id)deselectedFillColor;	// IMP=0x000000010002ad58
- (id)selectedFillColor;	// IMP=0x000000010002ad04
- (id)currentFingerAppearance;	// IMP=0x000000010002ac6c
- (double)_fingerRadius;	// IMP=0x000000010002ab20
- (_Bool)isPerformingDragPress;	// IMP=0x000000010002ab18
- (struct CGPoint)startPointForDrag;	// IMP=0x000000010002ab10
- (void)performFingerUpAtPoint:(struct CGPoint)arg1;	// IMP=0x000000010002aadc
- (void)performFingerMoveToPoint:(struct CGPoint)arg1;	// IMP=0x000000010002aaa8
- (void)performFingerDownAtPoint:(struct CGPoint)arg1;	// IMP=0x000000010002aa74
- (struct CGPoint)_fingerControllerPointForScreenPoint:(struct CGPoint)arg1;	// IMP=0x000000010002a99c
- (id)fingerController;	// IMP=0x000000010002a950
- (void)showMenu:(_Bool)arg1;	// IMP=0x000000010002a940
- (struct CGPoint)rotateEventFromOrientation:(struct CGPoint)arg1;	// IMP=0x000000010002a908
- (struct CGPoint)rotateNormalizedPointToOrientation:(struct CGPoint)arg1;	// IMP=0x000000010002a8b8
- (void)didFailToFloatApp;	// IMP=0x000000010002a8a8
- (void)didFailToPinApp;	// IMP=0x000000010002a898
- (void)volumeChanged;	// IMP=0x000000010002a888
@property(readonly, nonatomic) _Bool isVoiceControlRunning; // @dynamic isVoiceControlRunning;
@property(readonly, nonatomic) double volumeLevel; // @dynamic volumeLevel;
- (void)rotateEventToOrientation:(id)arg1;	// IMP=0x000000010002a768
- (void)handleCustomHomeButtonAction:(int)arg1;	// IMP=0x000000010002a708
- (void)performButtonAction:(id)arg1 type:(int)arg2 state:(int)arg3;	// IMP=0x000000010002a674
- (struct CGPoint)preferredMenuDisplayPoint;	// IMP=0x000000010002a58c
- (void)reloadFingerAppearance;	// IMP=0x000000010002a48c
- (void)removeFingersToPoint:(struct CGPoint)arg1;	// IMP=0x000000010002a478
- (void)resetFingersToPoint:(struct CGPoint)arg1 active:(_Bool)arg2;	// IMP=0x000000010002a0f8
- (void)resetFingersToPoint:(struct CGPoint)arg1;	// IMP=0x000000010002a0e8
- (void)resetFingersIfActive;	// IMP=0x000000010002a050
- (void)resetFingers;	// IMP=0x000000010002a03c
- (_Bool)canShowASTMousePointer;	// IMP=0x0000000100029f44
- (void)menuExited;	// IMP=0x0000000100029ec0
- (void)notifyUserEventOccurred;	// IMP=0x0000000100029e78
- (void)startPinchModeWithPoint:(struct CGPoint)arg1 mode:(unsigned long long)arg2;	// IMP=0x0000000100029de8
- (id)_scrollFallbackGestureAtPoint:(struct CGPoint)arg1 vertical:(_Bool)arg2 forward:(_Bool)arg3 max:(_Bool)arg4;	// IMP=0x0000000100029c74
- (_Bool)_performAXActionAtPoint:(struct CGPoint)arg1 action:(int)arg2;	// IMP=0x0000000100029af4
- (void)prepareScrollAtPoint:(struct CGPoint)arg1 vertical:(_Bool)arg2 forward:(_Bool)arg3 max:(_Bool)arg4;	// IMP=0x0000000100029a54
- (void)handleMultiTouchStandard:(long long)arg1 withExistingFingerMidPoint:(struct CGPoint)arg2;	// IMP=0x000000010002973c
- (void)handleSecondaryButtonPress:(int)arg1;	// IMP=0x000000010002971c
- (void)handleLaserPrimaryButtonPress:(int)arg1;	// IMP=0x00000001000296fc
- (void)handlePrimaryButtonPress:(int)arg1;	// IMP=0x0000000100029228
- (void)_handleAction:(id)arg1 type:(int)arg2 state:(int)arg3;	// IMP=0x0000000100028fe0
- (void)handleButtonEvent:(id)arg1;	// IMP=0x0000000100028e00
- (_Bool)softwareKeyboardManagerShouldSetHardwareKeyboardAttached:(id)arg1 hardwareKeyboardIsCurrentlyAttached:(_Bool)arg2 newHardwareKeyboardAttachedValue:(_Bool *)arg3;	// IMP=0x0000000100028df8
- (void)softwareKeyboardManagerDidChangeHardwareKeyboardAttached:(id)arg1;	// IMP=0x0000000100028df4
- (void)softwareKeyboardManager:(id)arg1 didSetHardwareKeyboardAttached:(_Bool)arg2;	// IMP=0x0000000100028df0
- (void)softwareKeyboardManagerWillUpdateKeyboardState:(id)arg1;	// IMP=0x0000000100028dec
@property(readonly, nonatomic) struct CGPoint currentPointForPointer;
@property(nonatomic) _Bool dwellControlPaused;
- (void)setDwellMode:(unsigned long long)arg1;	// IMP=0x0000000100028b94
@property(nonatomic) _Bool dwellControlAutorevertEnabled;
@property(readonly, nonatomic) _Bool dwellControlEnabled;
- (void)_setApplicationAccessibilityEnabledIfNeeded;	// IMP=0x000000010002892c
- (void)_presentMigrationPopupIfNeeded;	// IMP=0x00000001000282d8
- (void)_dwellControlToggled;	// IMP=0x000000010002821c
- (void)_highlightFingers;	// IMP=0x00000001000280a0
- (void)_fadeFingersAfterDelayIfNeeded;	// IMP=0x0000000100027e58
- (void)_updateFadedFingerOpacity;	// IMP=0x0000000100027db4
- (_Bool)_fadedFingersShouldShowOutlines;	// IMP=0x0000000100027d24
- (_Bool)_shouldAutoFadeFingers;	// IMP=0x0000000100027c7c
- (void)cancelDwellTimer;	// IMP=0x0000000100027bd8
- (void)_startDwellTimer;	// IMP=0x0000000100027918
- (_Bool)_isWithinLastDwellBounds:(struct CGPoint)arg1;	// IMP=0x0000000100027880
- (id)_avPlayerForSound:(id)arg1;	// IMP=0x000000010002770c
- (_Bool)inCustomGesture;	// IMP=0x00000001000276fc
- (struct CGPoint)_pointForLockedCorner:(unsigned long long)arg1;	// IMP=0x0000000100027610
- (_Bool)_shouldLockIntoHotCornerAtNormalizedPoint:(struct CGPoint)arg1;	// IMP=0x000000010002756c
- (unsigned long long)_roundedCornersForCursorAtPoint:(struct CGPoint)arg1;	// IMP=0x00000001000274fc
- (unsigned long long)_hotCornerForNormalizedPoint:(struct CGPoint)arg1;	// IMP=0x0000000100027460
- (struct CGSize)_hotCornerActivationSize;	// IMP=0x000000010002737c
- (unsigned long long)_cornerForNormalizedPoint:(struct CGPoint)arg1 normalizedPadding:(struct CGSize)arg2;	// IMP=0x000000010002731c
- (void)_performActionForHotCorner:(unsigned long long)arg1;	// IMP=0x00000001000271a4
- (unsigned long long)_defaultDwellMode;	// IMP=0x00000001000270b8
- (void)_resetDwellModeToDefault;	// IMP=0x0000000100026f90
- (void)_resetDwellDueToFingersReset;	// IMP=0x0000000100026ed4
- (void)_initializeDwell;	// IMP=0x0000000100026e54
- (void)_performDwellAction;	// IMP=0x0000000100026cf0
- (void)_dwellTimerFired;	// IMP=0x0000000100026bd4
- (void)_updateZoomWithDisplayPoint:(struct CGPoint)arg1;	// IMP=0x0000000100026ab8
- (_Bool)_isInNubbitHitbox:(struct CGPoint)arg1;	// IMP=0x00000001000269f8
- (_Bool)_shouldLockIntoNubbitAtPoint:(struct CGPoint)arg1;	// IMP=0x0000000100026930
- (void)moveFingerToPoint:(struct CGPoint)arg1;	// IMP=0x00000001000262a0
- (void)moveFingerByDelta:(struct CGPoint)arg1;	// IMP=0x0000000100026228
- (void)_menuOpenTracker:(struct CGPoint)arg1;	// IMP=0x0000000100025cfc
@property(nonatomic) _Bool nubbitMoving;
- (void)setCaptureEvents:(_Bool)arg1;	// IMP=0x0000000100025b40
- (void)_resetMenuOpenTracker;	// IMP=0x0000000100025b08
- (void)prepareGesture:(id)arg1;	// IMP=0x0000000100025a50
- (_Bool)isCapturingRealEvents;	// IMP=0x0000000100025a40
- (struct CGPoint)_eventManagerPointForGesture:(id)arg1 fingerIdentifier:(id)arg2 eventIndex:(unsigned long long)arg3;	// IMP=0x000000010002599c
- (_Bool)_shouldRepeatGesture;	// IMP=0x00000001000258f0
- (void)_performCustomGesture;	// IMP=0x0000000100025550
- (void)performPreparedGesture;	// IMP=0x0000000100025538
- (_Bool)isPerformingGesture;	// IMP=0x0000000100025528
- (void)cancelCurrentGesture;	// IMP=0x0000000100025518
@property(readonly, nonatomic) double touchSpeedMultiplier; // @dynamic touchSpeedMultiplier;
- (void)updatePointerAppearance;	// IMP=0x0000000100025330
- (void)updateSoftwareKeyboardState;	// IMP=0x00000001000251e8
- (void)updateMenuVisibility;	// IMP=0x0000000100025050
- (void)updateAllSettings;	// IMP=0x0000000100024f38
- (void)removeEventHandler:(id)arg1;	// IMP=0x0000000100024df0
- (void)addEventHandler:(id)arg1;	// IMP=0x0000000100024ab4
- (void)_modifyPinchToolMoveToPoint:(struct CGPoint)arg1;	// IMP=0x0000000100024594
- (void)mediaPlaybackChanged;	// IMP=0x0000000100024510
- (void)screenshotDidFire;	// IMP=0x0000000100024378
- (void)screenshotWillFire;	// IMP=0x000000010002417c
- (void)mediaControlsChanged:(_Bool)arg1;	// IMP=0x0000000100024168
- (void)resetNubbitLocation;	// IMP=0x0000000100024158
- (void)_startOrientationUpdateTimer;	// IMP=0x0000000100024054
- (void)orientationChanged:(long long)arg1;	// IMP=0x0000000100023f74
- (void)orientationChanged;	// IMP=0x0000000100023dcc
- (int)deviceOrientation;	// IMP=0x0000000100023d94
- (_Bool)inDragMode;	// IMP=0x0000000100023d8c
- (_Bool)inPinchMode;	// IMP=0x0000000100023d7c
- (_Bool)inRockerMode;	// IMP=0x0000000100023d6c
- (_Bool)inMultFingerMode;	// IMP=0x0000000100023d64
- (void)systemServerDied;	// IMP=0x0000000100023d00
- (void)substantialTransitionOccurred;	// IMP=0x0000000100023ac8
- (void)rotationLockChanged;	// IMP=0x0000000100023ab8
- (void)ringerSwitchChanged;	// IMP=0x0000000100023aa8
- (void)handleRealEvent:(id)arg1;	// IMP=0x00000001000236ac
- (_Bool)usingSpecialTool;	// IMP=0x0000000100023654
- (void)specialToolUsageEnded;	// IMP=0x0000000100023598
- (_Bool)_shouldHandleRealEventWithMultiTouchTool;	// IMP=0x00000001000234d0
- (void)_handleMultiTouchToolEvent:(id)arg1;	// IMP=0x0000000100023190
- (_Bool)_shouldEnableMultiTouchToolBackground;	// IMP=0x0000000100023128
- (void)_handleRealCustomGestureUp:(struct CGPoint)arg1;	// IMP=0x00000001000230e0
- (void)_handleRealCustomGestureMove:(struct CGPoint)arg1;	// IMP=0x00000001000230a4
- (void)_handleRealCustomGestureDown:(struct CGPoint)arg1;	// IMP=0x0000000100023074
- (void)_moveFingersForRealEventToPoint:(struct CGPoint)arg1;	// IMP=0x0000000100022fd0
- (void)_handleRealMultiFingerUp:(struct CGPoint)arg1;	// IMP=0x0000000100022fbc
- (void)_handleRealMultiFingerDown:(struct CGPoint)arg1;	// IMP=0x0000000100022ee4
- (void)_handleRealMultiFingerMove:(struct CGPoint)arg1;	// IMP=0x0000000100022ea8
- (void)_handleRealPinchToolMove:(struct CGPoint)arg1;	// IMP=0x0000000100022dd4
- (void)_handleRealPinchToolUp:(struct CGPoint)arg1;	// IMP=0x0000000100022d4c
- (id)mainWindow;	// IMP=0x0000000100022d3c
- (void)resetPinchFingers;	// IMP=0x0000000100022acc
- (void)_handleRealPinchToolDown:(struct CGPoint)arg1;	// IMP=0x0000000100022a14
- (void)_handlePinchFingerDownWithFinger:(id)arg1;	// IMP=0x00000001000229a8
- (void)_handleRealDragToolMove:(struct CGPoint)arg1;	// IMP=0x0000000100022988
- (void)_handleRealDragToolUp:(struct CGPoint)arg1;	// IMP=0x0000000100022920
- (void)endDragModeAtPoint:(struct CGPoint)arg1 completed:(_Bool)arg2;	// IMP=0x0000000100022488
- (void)beginDragAtPoint:(struct CGPoint)arg1;	// IMP=0x0000000100022338
- (void)beginDragMenuAtPoint:(struct CGPoint)arg1;	// IMP=0x0000000100022324
- (void)startDragMode;	// IMP=0x00000001000221c4
- (void)moveFingersToPointInFingerCoordinateSpace:(struct CGPoint)arg1 allowOutOfBounds:(_Bool)arg2;	// IMP=0x0000000100021c90
- (void)_moveFingersToPoint:(struct CGPoint)arg1;	// IMP=0x0000000100021c54
- (void)_systemPointerSettingsDidChange;	// IMP=0x0000000100021b48
- (id)viewAtSystemPointerPoint;	// IMP=0x0000000100021b10
- (_Bool)hitTestsViewAtSystemPointerPoint;	// IMP=0x0000000100021ad4
- (_Bool)shouldHandleSystemPointerButtonEvent:(id)arg1;	// IMP=0x0000000100021960
- (_Bool)shouldHideSystemPointerForFingersView;	// IMP=0x00000001000218d8
- (void)cleanupPointerStreamIfNecessary;	// IMP=0x0000000100021868
- (void)pointerController:(id)arg1 didReceivePointerEvent:(id)arg2;	// IMP=0x000000010002143c
- (void)keyboardVisible:(_Bool)arg1 withFrame:(struct CGRect)arg2;	// IMP=0x000000010002142c
- (void)safeAreaInsetsChanged:(struct UIEdgeInsets)arg1;	// IMP=0x000000010002141c
- (void)systemServerConnected;	// IMP=0x0000000100021100
- (void)refreshOrientation;	// IMP=0x0000000100020ee4
- (void)_registerForSettingsNotifications;	// IMP=0x0000000100020734
- (void)_handleUsageConfirmation;	// IMP=0x00000001000204dc
- (void)_handleBrokenHomeButtonMode;	// IMP=0x0000000100020074
- (void)_bootstrapRegister;	// IMP=0x000000010001ffc4
- (void)dealloc;	// IMP=0x000000010001ff6c
- (id)init;	// IMP=0x000000010001f8e0
- (id)testingEventManager;	// IMP=0x000000010002b404

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

