//
//     Generated by classdumpios 1.0.1 (64 bit) (iOS port by DreamDevLost)(Debug version compiled Sep 26 2020 13:48:20).
//
//  Copyright (C) 1997-2019 Steve Nygard.
//

#import <objc/NSObject.h>

#import "AXSSInterDeviceConnectionListener-Protocol.h"
#import "HNDAccessibilityManagerObserver-Protocol.h"
#import "SCATActionHandlerDelegate-Protocol.h"
#import "SCATActionHandlerUIDelegate-Protocol.h"
#import "SCATAlternateKeysManagerDelegate-Protocol.h"
#import "SCATCandidateBarManagerDelegate-Protocol.h"
#import "SCATCursorManagerDelegate-Protocol.h"
#import "SCATDisplaySource-Protocol.h"
#import "SCATDriverDelegate-Protocol.h"
#import "SCATElementNavigationControllerDelegate-Protocol.h"
#import "SCATGestureProviderDelegate-Protocol.h"
#import "SCATInputControllerDelegate-Protocol.h"
#import "SCATMenuDelegate-Protocol.h"
#import "SCATMenuObserver-Protocol.h"
#import "SCATPointPickerDelegate-Protocol.h"

@class AXDispatchTimer, AXOutputManager, AXSSInterDeviceCommunicator, AXSwitchRecipe, AXUpdateElementVisualsCoalescer, HNDAccessibilityManager, HNDScannerAutoscroller, NSMutableSet, NSPointerArray, NSString, SCATActionHandler, SCATAlternateKeysManager, SCATAutomaticDriver, SCATCandidateBarManager, SCATCursorManager, SCATDriver, SCATDwellDriver, SCATElementManager, SCATElementNavigationController, SCATFocusContext, SCATGestureProvider, SCATInputController, SCATManualDriver, SCATMenu, SCATPointPicker, SCATScrollViewPickerManager;
@protocol OS_dispatch_queue, SCATElement, SCATScannerManagerDelegate;

@interface SCATScannerManager : NSObject <SCATDriverDelegate, HNDAccessibilityManagerObserver, SCATInputControllerDelegate, SCATMenuDelegate, SCATMenuObserver, SCATGestureProviderDelegate, SCATPointPickerDelegate, SCATCursorManagerDelegate, SCATAlternateKeysManagerDelegate, SCATActionHandlerDelegate, SCATActionHandlerUIDelegate, SCATCandidateBarManagerDelegate, AXSSInterDeviceConnectionListener, SCATElementNavigationControllerDelegate, SCATDisplaySource>
{
    _Bool _isLoaded;	// 8 = 0x8
    _Bool _forceDisableScreenLock;	// 9 = 0x9
    _Bool _didSetFocusContextForResume;	// 10 = 0xa
    _Bool _didPauseForReasonsToDisableScanning;	// 11 = 0xb
    AXOutputManager *_outputManager;	// 16 = 0x10
    SCATCursorManager *_cursorManager;	// 24 = 0x18
    AXDispatchTimer *_beginScanningTimer;	// 32 = 0x20
    HNDScannerAutoscroller *_autoscroller;	// 40 = 0x28
    SCATInputController *_inputController;	// 48 = 0x30
    SCATGestureProvider *_gestureProvider;	// 56 = 0x38
    SCATMenu *_menu;	// 64 = 0x40
    SCATPointPicker *_pointPicker;	// 72 = 0x48
    SCATElementNavigationController *_elementNavController;	// 80 = 0x50
    SCATManualDriver *_manualScanningDriver;	// 88 = 0x58
    SCATAutomaticDriver *_autoScanningDriver;	// 96 = 0x60
    SCATDriver *_activeScannerDriver;	// 104 = 0x68
    SCATElementManager *_activeElementManager;	// 112 = 0x70
    id <SCATScannerManagerDelegate> _delegate;	// 120 = 0x78
    SCATActionHandler *_selectActionHandler;	// 128 = 0x80
    HNDAccessibilityManager *_testAxManager;	// 136 = 0x88
    NSPointerArray *__pointerPointPickersToNotify;	// 144 = 0x90
    SCATAlternateKeysManager *_alternateKeysManager;	// 152 = 0x98
    SCATScrollViewPickerManager *_scrollViewPickerManager;	// 160 = 0xa0
    SCATCandidateBarManager *_candidateBarManager;	// 168 = 0xa8
    SCATDwellDriver *_dwellScanningDriver;	// 176 = 0xb0
    AXUpdateElementVisualsCoalescer *_updateElementVisualsCoalescer;	// 184 = 0xb8
    SCATActionHandler *_activateActionHandler;	// 192 = 0xc0
    SCATFocusContext *_focusContextForResume;	// 200 = 0xc8
    NSMutableSet *_reasonsToDisableScanning;	// 208 = 0xd0
    AXSwitchRecipe *_currentRecipe;	// 216 = 0xd8
    long long _itemMenuState;	// 224 = 0xe0
    long long _currentAction;	// 232 = 0xe8
    AXSSInterDeviceCommunicator *_interDeviceCommunicator;	// 240 = 0xf0
    NSObject<OS_dispatch_queue> *_managedConfigurationQueue;	// 248 = 0xf8
}

+ (void)updateElementCacheScheme;	// IMP=0x00000001000c1ffc
+ (id)sharedManager;	// IMP=0x00000001000c1f90
- (void).cxx_destruct;	// IMP=0x00000001000cd20c
@property(retain, nonatomic) NSObject<OS_dispatch_queue> *managedConfigurationQueue; // @synthesize managedConfigurationQueue=_managedConfigurationQueue;
@property(retain, nonatomic) AXSSInterDeviceCommunicator *interDeviceCommunicator; // @synthesize interDeviceCommunicator=_interDeviceCommunicator;
@property(nonatomic) long long currentAction; // @synthesize currentAction=_currentAction;
@property(nonatomic) long long itemMenuState; // @synthesize itemMenuState=_itemMenuState;
@property(retain, nonatomic) AXSwitchRecipe *currentRecipe; // @synthesize currentRecipe=_currentRecipe;
@property(nonatomic) _Bool didPauseForReasonsToDisableScanning; // @synthesize didPauseForReasonsToDisableScanning=_didPauseForReasonsToDisableScanning;
@property(retain, nonatomic) NSMutableSet *reasonsToDisableScanning; // @synthesize reasonsToDisableScanning=_reasonsToDisableScanning;
@property(nonatomic) _Bool didSetFocusContextForResume; // @synthesize didSetFocusContextForResume=_didSetFocusContextForResume;
@property(retain, nonatomic) SCATFocusContext *focusContextForResume; // @synthesize focusContextForResume=_focusContextForResume;
@property(nonatomic) _Bool forceDisableScreenLock; // @synthesize forceDisableScreenLock=_forceDisableScreenLock;
@property(retain, nonatomic) SCATActionHandler *activateActionHandler; // @synthesize activateActionHandler=_activateActionHandler;
@property(retain, nonatomic) AXUpdateElementVisualsCoalescer *updateElementVisualsCoalescer; // @synthesize updateElementVisualsCoalescer=_updateElementVisualsCoalescer;
@property(retain, nonatomic) SCATDwellDriver *dwellScanningDriver; // @synthesize dwellScanningDriver=_dwellScanningDriver;
@property(retain, nonatomic) SCATCandidateBarManager *candidateBarManager; // @synthesize candidateBarManager=_candidateBarManager;
@property(retain, nonatomic) SCATScrollViewPickerManager *scrollViewPickerManager; // @synthesize scrollViewPickerManager=_scrollViewPickerManager;
@property(retain, nonatomic) SCATAlternateKeysManager *alternateKeysManager; // @synthesize alternateKeysManager=_alternateKeysManager;
@property(retain, nonatomic) NSPointerArray *_pointerPointPickersToNotify; // @synthesize _pointerPointPickersToNotify=__pointerPointPickersToNotify;
@property(retain, nonatomic) HNDAccessibilityManager *testAxManager; // @synthesize testAxManager=_testAxManager;
@property(retain, nonatomic) SCATActionHandler *selectActionHandler; // @synthesize selectActionHandler=_selectActionHandler;
@property(nonatomic) __weak id <SCATScannerManagerDelegate> delegate; // @synthesize delegate=_delegate;
@property(retain, nonatomic) SCATElementManager *activeElementManager; // @synthesize activeElementManager=_activeElementManager;
@property(retain, nonatomic) SCATDriver *activeScannerDriver; // @synthesize activeScannerDriver=_activeScannerDriver;
@property(retain, nonatomic) SCATAutomaticDriver *autoScanningDriver; // @synthesize autoScanningDriver=_autoScanningDriver;
@property(retain, nonatomic) SCATManualDriver *manualScanningDriver; // @synthesize manualScanningDriver=_manualScanningDriver;
@property(retain, nonatomic) SCATElementNavigationController *elementNavController; // @synthesize elementNavController=_elementNavController;
@property(retain, nonatomic) SCATPointPicker *pointPicker; // @synthesize pointPicker=_pointPicker;
@property(retain, nonatomic) SCATMenu *menu; // @synthesize menu=_menu;
@property(retain, nonatomic) SCATGestureProvider *gestureProvider; // @synthesize gestureProvider=_gestureProvider;
@property(retain, nonatomic) SCATInputController *inputController; // @synthesize inputController=_inputController;
@property(retain, nonatomic) HNDScannerAutoscroller *autoscroller; // @synthesize autoscroller=_autoscroller;
@property(retain, nonatomic) AXDispatchTimer *beginScanningTimer; // @synthesize beginScanningTimer=_beginScanningTimer;
@property(retain, nonatomic) SCATCursorManager *cursorManager; // @synthesize cursorManager=_cursorManager;
@property(retain, nonatomic) AXOutputManager *outputManager; // @synthesize outputManager=_outputManager;
- (void)showUIContext:(_Bool)arg1;	// IMP=0x00000001000ccdd0
- (void)hidUIContext:(_Bool)arg1;	// IMP=0x00000001000ccbec
- (_Bool)isUIContextHidden;	// IMP=0x00000001000ccb18
- (id)scatFrontCursorUIContext;	// IMP=0x00000001000ccabc
- (id)scatBackCursorUIContext;	// IMP=0x00000001000cca60
- (id)scatUIContext;	// IMP=0x00000001000cca04
- (void)presentPostScanningMenuForElementNavigationController:(id)arg1;	// IMP=0x00000001000cc9bc
- (_Bool)candidateBarManager:(id)arg1 hasValidTypingCandidates:(id)arg2;	// IMP=0x00000001000cc944
- (id)_typingCandidates;	// IMP=0x00000001000cc89c
- (void)alternateKeysManager:(id)arg1 didSelectAlternateKey:(id)arg2;	// IMP=0x00000001000cc7e8
- (id)focusContextForActionHandler:(id)arg1;	// IMP=0x00000001000cc780
- (void)actionHandlerDidCancelPendingAction:(id)arg1;	// IMP=0x00000001000cc770
- (void)actionHandlerDidFireAction:(id)arg1;	// IMP=0x00000001000cc324
- (_Bool)actionHandler:(id)arg1 shouldActImmediatelyOnActionCount:(unsigned long long)arg2;	// IMP=0x00000001000cc27c
- (id)_focusContextAtPoint:(struct CGPoint)arg1;	// IMP=0x00000001000cc190
- (void)pointPickerDidFinishSweeping:(id)arg1;	// IMP=0x00000001000cc18c
- (void)pointPicker:(id)arg1 didSweepOutOfFocusContext:(id)arg2 isRefiningPoint:(_Bool)arg3;	// IMP=0x00000001000cc140
- (void)pointPicker:(id)arg1 didSweepIntoFocusContext:(id)arg2 isRefiningPoint:(_Bool)arg3;	// IMP=0x00000001000cc070
- (void)pointPicker:(id)arg1 didPickPoint:(struct CGPoint)arg2;	// IMP=0x00000001000cbd04
- (void)didChooseCreateCustomGestureFromGestureProvider:(id)arg1;	// IMP=0x00000001000cbc50
- (void)gestureProvider:(id)arg1 shouldResetScanningFromElement:(id)arg2;	// IMP=0x00000001000cbb74
- (id)contentViewForGestureProvider:(id)arg1;	// IMP=0x00000001000cbb68
- (void)gestureProvider:(id)arg1 didShowFingers:(_Bool)arg2;	// IMP=0x00000001000cbb64
- (void)shouldEndScanningGestureProvider:(id)arg1;	// IMP=0x00000001000cbb1c
- (void)shouldStartScanningGestureProvider:(id)arg1;	// IMP=0x00000001000cbad4
- (void)menuDidUpdateTipObject:(id)arg1;	// IMP=0x00000001000cbad0
- (void)menuDidFinishTransition:(id)arg1;	// IMP=0x00000001000cba70
- (void)menuWillBeginTransition:(id)arg1;	// IMP=0x00000001000cba28
- (void)menuDidDisappear:(id)arg1;	// IMP=0x00000001000cb7ac
- (void)menuDidAppear:(id)arg1;	// IMP=0x00000001000cb7a8
- (void)menuWillAppear:(id)arg1;	// IMP=0x00000001000cb7a4
- (void)menu:(id)arg1 showSysdiagnoseDisplayString:(id)arg2;	// IMP=0x00000001000cb794
- (id)interDeviceCommunicatorForMenu:(id)arg1;	// IMP=0x00000001000cb788
- (void)returnControlToMasterDevice:(id)arg1;	// IMP=0x00000001000cb748
- (_Bool)canReturnControlToMasterDevice:(id)arg1;	// IMP=0x00000001000cb6fc
- (void)searchForControllableDevicesWithMenu:(id)arg1;	// IMP=0x00000001000cb6bc
- (_Bool)canSearchForControllableDevicesWithMenu:(id)arg1;	// IMP=0x00000001000cb670
- (void)menu:(id)arg1 showScrollViewPickerForScrollViews:(id)arg2 elementsToScroll:(id)arg3 scrollAction:(int)arg4;	// IMP=0x00000001000cb534
- (_Bool)shouldShowAppWideScrollActionsInMenu:(id)arg1;	// IMP=0x00000001000cb528
- (void)menu:(id)arg1 setItemMenuState:(long long)arg2;	// IMP=0x00000001000cb518
- (long long)itemMenuStateForMenu:(id)arg1;	// IMP=0x00000001000cb50c
- (_Bool)shouldAddItemSpecificMenuOptionsToMenu:(id)arg1;	// IMP=0x00000001000cb500
- (_Bool)_isPostScanningMenu:(id)arg1;	// IMP=0x00000001000cb4c0
- (void)menu:(id)arg1 activateRecipe:(id)arg2;	// IMP=0x00000001000cb4b0
- (id)exitActionElementForFingersInMenu:(id)arg1;	// IMP=0x00000001000cb45c
- (void)didPressScreenChangingButtonInMenu:(id)arg1;	// IMP=0x00000001000cb414
- (id)gesturesSheetForMenu:(id)arg1;	// IMP=0x00000001000cb3c0
- (id)menu:(id)arg1 tapAndHoldContextItemForSheet:(id)arg2;	// IMP=0x00000001000cb338
- (id)menu:(id)arg1 tapContextItemForSheet:(id)arg2;	// IMP=0x00000001000cb2b0
- (struct CGRect)menu:(id)arg1 rectToClearForFingersWithGestureSheet:(_Bool)arg2;	// IMP=0x00000001000cb234
- (void)menu:(id)arg1 showTypingCandidates:(id)arg2;	// IMP=0x00000001000cb1c8
- (void)menu:(id)arg1 showAlternateKeysForKey:(id)arg2;	// IMP=0x00000001000cb15c
- (void)inputControllerPointPickerInterrupted:(id)arg1;	// IMP=0x00000001000cb0bc
@property(readonly, nonatomic) _Bool shouldUseCameraPointPicker;
- (void)inputController:(id)arg1 didReceivePoint:(struct CGPoint)arg2;	// IMP=0x00000001000caef8
- (id)userInterfaceClientForInputController:(id)arg1;	// IMP=0x00000001000cae9c
- (void)inputController:(id)arg1 didReceiveRecipeHoldAtPoint:(struct CGPoint)arg2 isDown:(_Bool)arg3;	// IMP=0x00000001000cae28
- (void)inputController:(id)arg1 didReceiveRecipeActionForMappingAtIndex:(unsigned long long)arg2 isLongPressAction:(_Bool)arg3;	// IMP=0x00000001000cab3c
- (void)inputController:(id)arg1 didReceiveAction:(long long)arg2;	// IMP=0x00000001000ca09c
- (void)didEndLongPressForInputController:(id)arg1;	// IMP=0x00000001000c9fc8
- (void)didBeginLongPressForInputController:(id)arg1;	// IMP=0x00000001000c9f2c
- (void)accessibilityManagerShouldResumeScanning:(id)arg1;	// IMP=0x00000001000c9f18
- (void)accessibilityManagerShouldPauseScanning:(id)arg1;	// IMP=0x00000001000c9f04
- (void)_updateElementVisuals;	// IMP=0x00000001000c9d6c
- (void)accessibilityManager:(id)arg1 mediaDidBegin:(struct __CFData *)arg2;	// IMP=0x00000001000c9d60
- (void)_waitForApplication:(id)arg1;	// IMP=0x00000001000c996c
- (void)accessibilityManager:(id)arg1 applicationWasActivated:(id)arg2;	// IMP=0x00000001000c97e8
- (void)accessibilityManager:(id)arg1 updateElementVisuals:(id)arg2;	// IMP=0x00000001000c97a8
- (void)accessibilityManager:(id)arg1 nativeFocusElementDidChange:(id)arg2;	// IMP=0x00000001000c9600
- (void)accessibilityManager:(id)arg1 didFetchElementsForEvent:(long long)arg2 foundNewElements:(_Bool)arg3;	// IMP=0x00000001000c9230
- (void)_updateMenuAfterElementFetch;	// IMP=0x00000001000c8f98
- (void)handleAnnouncement:(id)arg1;	// IMP=0x00000001000c8e94
- (int)_validatedSelectBehaviorForCurrentSelectBehavior:(int)arg1 replacementElement:(id)arg2;	// IMP=0x00000001000c8e50
- (void)accessibilityManager:(id)arg1 willFetchElementsForEvent:(long long)arg2;	// IMP=0x00000001000c8e4c
- (void)accessibilityManager:(id)arg1 didScheduleFetchEvent:(long long)arg2;	// IMP=0x00000001000c8e48
- (void)accessibilityManager:(id)arg1 screenWillChange:(struct __CFData *)arg2;	// IMP=0x00000001000c8e00
- (void)accessibilityManager:(id)arg1 didReceiveEvent:(long long)arg2 data:(id)arg3;	// IMP=0x00000001000c8bc8
- (_Bool)cursorManagerShouldHideMenuCursor:(id)arg1;	// IMP=0x00000001000c8b7c
- (void)actionHandlerForUI:(id)arg1 willPerformDelayedActionOnContext:(id)arg2 withCount:(unsigned long long)arg3;	// IMP=0x00000001000c8a18
- (void)actionHandlerForUIWillFireAction:(id)arg1;	// IMP=0x00000001000c892c
- (void)actionHandlerForUIDidCancelPendingAction:(id)arg1;	// IMP=0x00000001000c8840
- (void)driver:(id)arg1 indicateDwellScanningWillAbort:(_Bool)arg2;	// IMP=0x00000001000c8784
- (void)driverDidBecomeActive:(id)arg1;	// IMP=0x00000001000c86d8
- (void)driverDidBecomeInactive:(id)arg1;	// IMP=0x00000001000c8680
- (void)driverDidPause:(id)arg1;	// IMP=0x00000001000c8628
- (void)driver:(id)arg1 didFocusOnContext:(id)arg2 oldContext:(id)arg3;	// IMP=0x00000001000c8494
- (void)_driver:(id)arg1 outputAudioForContext:(id)arg2;	// IMP=0x00000001000c81b8
- (void)driver:(id)arg1 willFocusOnContext:(id)arg2;	// IMP=0x00000001000c81b4
- (id)activeElementManagerForDriver:(id)arg1;	// IMP=0x00000001000c81a8
- (void)highlightAsPotentialSlaveForDeviceWithName:(id)arg1;	// IMP=0x00000001000c8040
- (void)_disableUserInterfaceClientForPotentialSlave;	// IMP=0x00000001000c7ff0
- (void)didBecomeIdle;	// IMP=0x00000001000c7fb0
- (void)didDisconnectAsSlave;	// IMP=0x00000001000c7f0c
- (void)didDisconnectAsMasterFromDeviceWithName:(id)arg1;	// IMP=0x00000001000c7e04
- (void)didConnectAsSlaveWithSettings:(id)arg1;	// IMP=0x00000001000c7c94
- (void)didConnectAsMasterToDeviceWithName:(id)arg1;	// IMP=0x00000001000c7b8c
- (_Bool)canAdvertise;	// IMP=0x00000001000c7970
- (void)_handleVolumeUpAction;	// IMP=0x00000001000c7928
- (void)_handleTripleClickAction;	// IMP=0x00000001000c78e0
- (void)_handleDictationAction;	// IMP=0x00000001000c787c
- (void)_handleForceTouchAction;	// IMP=0x00000001000c7684
- (void)_handleVolumeDownAction;	// IMP=0x00000001000c763c
- (void)_handleSiriAction;	// IMP=0x00000001000c75f4
- (void)_handleControlCenterAction;	// IMP=0x00000001000c75ac
- (void)_handleNotificationCenterAction;	// IMP=0x00000001000c7564
- (void)_handleHomeAction;	// IMP=0x00000001000c7508
- (void)_handleAppSwitcherAction;	// IMP=0x00000001000c74c0
- (void)_setCurrentRecipe:(id)arg1 shouldShowAlert:(_Bool)arg2;	// IMP=0x00000001000c7170
- (void)_applyLaunchRecipeUUID;	// IMP=0x00000001000c6f44
- (void)_exitRecipeOnTimeout;	// IMP=0x00000001000c6ec0
- (void)_resetRecipeTimeoutIfApplicable;	// IMP=0x00000001000c6d28
- (void)removePointerPointPickerForMovementNotifications:(id)arg1;	// IMP=0x00000001000c6c50
- (void)addPointerPointPickerForMovementNotifications:(id)arg1;	// IMP=0x00000001000c6be4
- (void)_showSimpleBannerWithText:(id)arg1;	// IMP=0x00000001000c6b4c
- (void)_updateScanningStyle;	// IMP=0x00000001000c6abc
- (_Bool)shouldBypassShowingMenuForElement:(id)arg1;	// IMP=0x00000001000c69fc
- (_Bool)activateElement:(id)arg1;	// IMP=0x00000001000c67d0
- (void)useFocusContextOnResume:(id)arg1;	// IMP=0x00000001000c6798
- (_Bool)_shouldIgnoreAllScannerControlMessages;	// IMP=0x00000001000c6748
- (void)removeReasonToDisableScanning:(id)arg1;	// IMP=0x00000001000c6498
- (void)addReasonToDisableScanning:(id)arg1;	// IMP=0x00000001000c60c8
- (void)pauseScanningWithScreenLockDisabled:(_Bool)arg1;	// IMP=0x00000001000c5ffc
- (void)pauseScanning;	// IMP=0x00000001000c5fec
- (void)endScanning;	// IMP=0x00000001000c5f58
- (void)resumeScanning;	// IMP=0x00000001000c5dac
- (void)_beginOrContinueScanningWithFocusContext:(id)arg1 shouldBegin:(_Bool)arg2;	// IMP=0x00000001000c59e4
- (void)continueScanningWithFocusContext:(id)arg1;	// IMP=0x00000001000c59d4
- (void)beginScanningWithFocusContext:(id)arg1;	// IMP=0x00000001000c59c4
@property(readonly, nonatomic) _Bool isInactive;
@property(readonly, nonatomic) _Bool isPaused;
@property(readonly, nonatomic) _Bool isActive;
- (id)axManager;	// IMP=0x00000001000c585c
@property(readonly, nonatomic) id <SCATElement> currentElement;
@property(readonly, nonatomic) SCATFocusContext *currentFocusContext;
- (_Bool)isSystemSleeping;	// IMP=0x00000001000c5760
@property(readonly, nonatomic) _Bool isLandscape;
@property(readonly, nonatomic) unsigned long long immediateSelectActionCount;
@property(readonly, nonatomic) _Bool isUsingPointMode;
- (_Bool)isSwitchWithSource:(id)arg1;	// IMP=0x00000001000c5620
@property(readonly, nonatomic) _Bool isSpeechEnabled;
@property(readonly, nonatomic) _Bool areSoundEffectsEnabled;
@property(readonly, nonatomic) long long scanningMode;
@property(readonly, nonatomic) _Bool isGroupingEnabled;
@property(readonly, nonatomic) _Bool isAutoscanEnabled;
- (void)_updateAudioSessionState;	// IMP=0x00000001000c52c4
- (void)_deactivateAudioSession;	// IMP=0x00000001000c5240
- (_Bool)_isScannerControlledByDriver:(id)arg1;	// IMP=0x00000001000c51c8
- (void)_updateActiveElementManager:(CDUnknownBlockType)arg1;	// IMP=0x00000001000c5154
- (void)_updateActiveElementManager;	// IMP=0x00000001000c5144
- (id)_primaryElementManagerForScannerState;	// IMP=0x00000001000c4e20
- (id)_elementManagerForScannerState;	// IMP=0x00000001000c4c5c
- (void)setActiveElementManager:(id)arg1 completion:(CDUnknownBlockType)arg2;	// IMP=0x00000001000c48b8
- (id)_driverForScannerState;	// IMP=0x00000001000c47ec
@property(readonly, nonatomic) _Bool isControllingOtherDevice;
@property(readonly, nonatomic) _Bool isHandlingInterDeviceCommunication;
@property(readonly, nonatomic) _Bool isLoaded;
@property(readonly, copy) NSString *description;
- (void)unloadScanner;	// IMP=0x00000001000c3f44
- (void)loadScanner;	// IMP=0x00000001000c276c
- (void)_performAccessibilityValidations;	// IMP=0x00000001000c2768
- (void)handleUSBMFiDeviceConnected;	// IMP=0x00000001000c2500
- (void)_setUSBRMPreferenceDisabled;	// IMP=0x00000001000c249c
- (_Bool)_userHasDisabledUSBRM;	// IMP=0x00000001000c2438
- (void)performDrop;	// IMP=0x00000001000c23d0
- (void)moveDragSessionToFixedSpaceScreenPoint:(struct CGPoint)arg1;	// IMP=0x00000001000c2350
- (void)cancelDrag;	// IMP=0x00000001000c22e8
- (_Bool)isDragActive;	// IMP=0x00000001000c226c
- (void)waitForDragStartFromPid:(int)arg1 completion:(CDUnknownBlockType)arg2;	// IMP=0x00000001000c21d4
- (void)dealloc;	// IMP=0x00000001000c2174
- (id)init;	// IMP=0x00000001000c2068

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

