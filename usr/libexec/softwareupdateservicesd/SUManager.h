//
//     Generated by classdumpios 1.0.1 (64 bit) (iOS port by DreamDevLost)(Debug version compiled Sep 26 2020 13:48:20).
//
//  Copyright (C) 1997-2019 Steve Nygard.
//

#import <objc/NSObject.h>

#import "SUKeybagInterfaceObserver-Protocol.h"
#import "SUManagedDeviceManagerDelegate-Protocol.h"
#import "SUNetworkObserver-Protocol.h"

@class MAAsset, MSUUpdateBrainAssetLoader, NSDate, NSDictionary, NSHashTable, NSMutableArray, NSMutableDictionary, NSString, NSTimer, SUAutoInstallFailureNotification, SUAutoUpdatePasscodePolicy, SUCoreReporter, SUDownload, SUInstallPolicy, SUManagedDeviceManager, SUOperationProgress, SUSFollowUpController, SUScanOptions, SUState;
@protocol OS_dispatch_queue, SUManagerDelegate;

@interface SUManager : NSObject <SUKeybagInterfaceObserver, SUNetworkObserver, SUManagedDeviceManagerDelegate>
{
    id <SUManagerDelegate> _delegate;	// 8 = 0x8
    SUState *_state;	// 16 = 0x10
    _Bool _foreground;	// 24 = 0x18
    SUScanOptions *_autoScanOptions;	// 32 = 0x20
    _Bool _scanning;	// 40 = 0x28
    NSMutableArray *_scanRequests;	// 48 = 0x30
    _Bool _managedScanInProgress;	// 56 = 0x38
    MAAsset *_assetToDownloadFromLastScan;	// 64 = 0x40
    NSDate *_assetToDownloadFromLastScanReleaseDate;	// 72 = 0x48
    MSUUpdateBrainAssetLoader *_brainAssetDownloader;	// 80 = 0x50
    _Bool _downloading;	// 88 = 0x58
    MAAsset *_downloadAsset;	// 96 = 0x60
    SUDownload *_download;	// 104 = 0x68
    SUOperationProgress *_downloadProgressSnapshot;	// 112 = 0x70
    NSTimer *_documentationDownloadTimer;	// 120 = 0x78
    _Bool _preparing;	// 128 = 0x80
    _Bool _installing;	// 129 = 0x81
    _Bool _installed;	// 130 = 0x82
    _Bool _isInstallTonight;	// 131 = 0x83
    _Bool _isInstallTonightScheduled;	// 132 = 0x84
    _Bool _ignoreMAProgress;	// 133 = 0x85
    NSHashTable *_observers;	// 136 = 0x88
    SUAutoInstallFailureNotification *_autoSUFailureNotification;	// 144 = 0x90
    NSMutableDictionary *_unlockCallbacks;	// 152 = 0x98
    SUManagedDeviceManager *_managedDeviceManager;	// 160 = 0xa0
    SUInstallPolicy *_installPolicy;	// 168 = 0xa8
    SUAutoUpdatePasscodePolicy *_passcodePolicy;	// 176 = 0xb0
    NSDictionary *_mandatoryUpdateDictionary;	// 184 = 0xb8
    NSString *_sessionID;	// 192 = 0xc0
    NSString *_potentialNextSessionID;	// 200 = 0xc8
    NSObject<OS_dispatch_queue> *_autoUpdateQueue;	// 208 = 0xd0
    NSDate *_lastStashbagPersistedDate;	// 216 = 0xd8
    NSObject<OS_dispatch_queue> *_scanQueue;	// 224 = 0xe0
    SUSFollowUpController *_followUpController;	// 232 = 0xe8
    SUCoreReporter *_coreReporter;	// 240 = 0xf0
}

+ (id)stringForAssetType:(id)arg1;	// IMP=0x0000000100010c7c
+ (id)sharedInstance;	// IMP=0x000000010000a8b4
+ (void)initialize;	// IMP=0x000000010000a260
@property(retain, nonatomic) NSString *potentialNextSessionID; // @synthesize potentialNextSessionID=_potentialNextSessionID;
@property(retain, nonatomic) NSString *sessionID; // @synthesize sessionID=_sessionID;
@property(retain, nonatomic) NSDate *lastStashbagPersistedDate; // @synthesize lastStashbagPersistedDate=_lastStashbagPersistedDate;
@property(retain, nonatomic) SUCoreReporter *coreReporter; // @synthesize coreReporter=_coreReporter;
@property(retain, nonatomic) SUSFollowUpController *followUpController; // @synthesize followUpController=_followUpController;
@property(retain, nonatomic) SUAutoUpdatePasscodePolicy *passcodePolicy; // @synthesize passcodePolicy=_passcodePolicy;
@property(retain, nonatomic) SUInstallPolicy *installPolicy; // @synthesize installPolicy=_installPolicy;
@property(retain, nonatomic) SUManagedDeviceManager *managedDeviceManager; // @synthesize managedDeviceManager=_managedDeviceManager;
@property(retain, nonatomic) NSDate *assetToDownloadFromLastScanReleaseDate; // @synthesize assetToDownloadFromLastScanReleaseDate=_assetToDownloadFromLastScanReleaseDate;
@property(retain, nonatomic) MAAsset *assetToDownloadFromLastScan; // @synthesize assetToDownloadFromLastScan=_assetToDownloadFromLastScan;
@property(retain, nonatomic) MAAsset *downloadAsset; // @synthesize downloadAsset=_downloadAsset;
@property(nonatomic) _Bool isInstallTonightScheduled; // @synthesize isInstallTonightScheduled=_isInstallTonightScheduled;
@property(nonatomic) _Bool isInstallTonight; // @synthesize isInstallTonight=_isInstallTonight;
@property(nonatomic, getter=isInstalling) _Bool installing; // @synthesize installing=_installing;
@property(nonatomic, getter=isPreparing) _Bool preparing; // @synthesize preparing=_preparing;
@property(retain, nonatomic) SUDownload *download; // @synthesize download=_download;
@property(nonatomic, getter=isForeground) _Bool foreground; // @synthesize foreground=_foreground;
@property(retain, nonatomic) SUState *state; // @synthesize state=_state;
@property(nonatomic) id <SUManagerDelegate> delegate; // @synthesize delegate=_delegate;
- (void)keybagInterface:(id)arg1 passcodeLockedStateDidChange:(_Bool)arg2;	// IMP=0x0000000100016f4c
- (void)assetAudienceChanged:(id)arg1;	// IMP=0x0000000100016e68
- (void)managedDeviceDelayPeriodChanged:(id)arg1;	// IMP=0x0000000100016ce8
- (void)_describeAndReportEvent:(id)arg1;	// IMP=0x0000000100016b48
- (void)reportPostponedEvent:(id)arg1 withStatus:(id)arg2;	// IMP=0x00000001000169e0
- (void)_reportDownloadedEvent:(id)arg1;	// IMP=0x0000000100016930
- (void)_reportAvailableEvent;	// IMP=0x00000001000168b0
- (void)_addRecordingServiceBaseURLToOptions:(id)arg1;	// IMP=0x000000010001684c
- (void)_addSessionInfoToOptions:(id)arg1;	// IMP=0x0000000100016738
- (id)_newFirstPreflightOptions;	// IMP=0x00000001000165a4
@property(retain, nonatomic) NSDictionary *mandatoryUpdateDictionary; // @synthesize mandatoryUpdateDictionary=_mandatoryUpdateDictionary;
- (id)delayEndDate;	// IMP=0x0000000100016318
- (_Bool)isDelayingUpdates;	// IMP=0x00000001000162f0
- (_Bool)shouldIgnoreForAutoInstall;	// IMP=0x000000010001629c
- (_Bool)isAutoUpdateEnabled;	// IMP=0x00000001000161dc
- (_Bool)createInstallationKeybag:(id)arg1 forUnattendedInstall:(_Bool)arg2;	// IMP=0x0000000100016014
- (id)slaVersion;	// IMP=0x0000000100015f5c
- (void)updateInstallPolicyDarkBootEnabled:(_Bool)arg1;	// IMP=0x0000000100015eb4
- (void)updateInstallPolicyAutoUpdateEnabled:(_Bool)arg1;	// IMP=0x0000000100015e0c
- (void)managedInstallRequested;	// IMP=0x0000000100015dbc
- (void)updateInstallPolicyType:(unsigned long long)arg1;	// IMP=0x0000000100015d18
- (id)newInstallTonightConfig;	// IMP=0x0000000100015bfc
- (_Bool)installUpdateWithOptions:(id)arg1 error:(id *)arg2;	// IMP=0x00000001000149f4
- (_Bool)installUpdate:(id *)arg1;	// IMP=0x00000001000149e0
- (void)autoSUFailedWithError:(id)arg1;	// IMP=0x0000000100014918
- (_Bool)_isUpdateReadyForInstallation:(id *)arg1 forceDiskCleanupIfNeeded:(_Bool)arg2 ShouldRetry:(_Bool *)arg3;	// IMP=0x0000000100014478
- (_Bool)isUpdateReadyForInstallation:(id *)arg1 shouldRetry:(_Bool *)arg2;	// IMP=0x0000000100014464
- (void)networkChangedFromNetworkType:(int)arg1 toNetworkType:(int)arg2;	// IMP=0x00000001000142ac
- (void)operatorBundleChanged;	// IMP=0x00000001000141ac
- (void)_setUMEventFields:(id)arg1 reason:(id)arg2;	// IMP=0x00000001000140c0
- (void)_setVerifyExclusions:(id)arg1;	// IMP=0x0000000100014050
- (void)_clearKeybagStash;	// IMP=0x0000000100013fcc
- (void)_verifyAndPrepareUpdate;	// IMP=0x00000001000138d0
- (void)_cleanupPreviousDownload:(_Bool)arg1;	// IMP=0x0000000100013588
- (void)_cleanupPreviousDownload;	// IMP=0x0000000100013578
- (void)_purgeSUAsset:(id)arg1;	// IMP=0x0000000100013568
- (void)_clearUnlockCallbacks;	// IMP=0x0000000100013510
- (void)removeUnlockCallback:(id)arg1;	// IMP=0x0000000100013484
- (void)addUnlockCallback:(SEL)arg1 forKey:(id)arg2;	// IMP=0x00000001000133a0
- (id)unlockCallbacks;	// IMP=0x0000000100013398
- (void)_downloadFinished;	// IMP=0x00000001000131c8
- (void)_downloadFailedWithError:(id)arg1;	// IMP=0x0000000100012e4c
- (void)_updateNormalizedDownloadProgress;	// IMP=0x0000000100012c1c
- (void)_updateNormalizedDownloadProgressAndNotifyDelegate;	// IMP=0x0000000100012b00
- (void)_notePhaseCompleted:(id)arg1;	// IMP=0x0000000100012a30
- (void)_changeDownloadPhase:(id)arg1 progress:(float)arg2 timeRemaining:(double)arg3;	// IMP=0x00000001000127d4
- (void)_changeDownloadPhase:(id)arg1 progress:(float)arg2;	// IMP=0x00000001000127c4
- (void)_updateDownloadProgress:(id)arg1 withState:(long long)arg2;	// IMP=0x00000001000125f0
- (void)_verifyAndPrepareWhenReady;	// IMP=0x00000001000124d0
- (void)_verifyAndPrepareOnUnlock;	// IMP=0x0000000100012434
- (void)_doUnlockEvents;	// IMP=0x000000010001227c
- (void)persistStashOnUnlock;	// IMP=0x0000000100012200
- (void)_brainDownloadCompletionHandler;	// IMP=0x0000000100011dfc
- (void)_updateDownloadStatusForBrainAssetState:(id)arg1;	// IMP=0x00000001000118f0
- (_Bool)_isPhase:(id)arg1 beforePhase:(id)arg2;	// IMP=0x000000010001189c
- (_Bool)_isPhase:(id)arg1 afterPhase:(id)arg2;	// IMP=0x0000000100011848
- (int)_orderForPhase:(id)arg1;	// IMP=0x00000001000115e4
- (_Bool)_shouldSendUpdatedProgressToDelegate;	// IMP=0x0000000100011488
- (void)_snapshotProgress;	// IMP=0x00000001000113b8
- (_Bool)__startUpdateAssetDownload:(_Bool)arg1;	// IMP=0x0000000100010d18
- (_Bool)__startBrainAssetDownload;	// IMP=0x0000000100010978
- (_Bool)startDownloadWithMetadata:(id)arg1 error:(id *)arg2;	// IMP=0x0000000100010058
- (_Bool)startDownload:(id *)arg1;	// IMP=0x0000000100010044
- (_Bool)_reapplyExistingDownloadPolicyIfDownloadable:(_Bool)arg1;	// IMP=0x000000010000ff90
- (void)_updateAssetDownloadOptions;	// IMP=0x000000010000fe60
- (_Bool)loadBrainAsset;	// IMP=0x000000010000fdf8
- (int)_downloadPriority;	// IMP=0x000000010000fde4
- (_Bool)updateDownloadMetadata:(id)arg1 error:(id *)arg2;	// IMP=0x000000010000fc20
- (void)_updateLastSavedDownloadsMetadata:(id)arg1;	// IMP=0x000000010000fbb4
- (void)_updateLastSavedDownloadPhase:(id)arg1;	// IMP=0x000000010000fb3c
- (void)resumeDownload:(id *)arg1;	// IMP=0x000000010000fb24
- (_Bool)pauseDownload:(id *)arg1;	// IMP=0x000000010000faf8
- (_Bool)_killDownload:(_Bool)arg1 userRequested:(_Bool)arg2 error:(id *)arg3;	// IMP=0x000000010000f6f8
- (_Bool)purgeDownloadUserRequested:(_Bool)arg1 error:(id *)arg2;	// IMP=0x000000010000f6e0
- (_Bool)_cancelDownload:(_Bool)arg1 userRequested:(_Bool)arg2 error:(id *)arg3;	// IMP=0x000000010000f634
- (_Bool)cancelDownloadUserRequested:(_Bool)arg1 error:(id *)arg2;	// IMP=0x000000010000f61c
- (_Bool)isDownloadHalted;	// IMP=0x000000010000f5c8
- (void)_sendDownloadInvalidatedForNewDescriptor:(id)arg1;	// IMP=0x000000010000f568
- (void)_remoteQueryWithMatcher:(id)arg1 completion:(CDUnknownBlockType)arg2;	// IMP=0x000000010000f434
- (void)_documentationDownloadTimeout:(id)arg1;	// IMP=0x000000010000f3c8
- (void)_scheduleDocumentationDownloadTimeoutTimer:(id)arg1;	// IMP=0x000000010000f330
- (void)_invalidateDocumentationDownloadTimeoutTimer;	// IMP=0x000000010000f2f8
- (void)_fetchDocumentationFromSoftwareUpdateAsset:(id)arg1 completion:(CDUnknownBlockType)arg2;	// IMP=0x000000010000ebc0
- (void)_doScanWithInfo:(id)arg1 completion:(CDUnknownBlockType)arg2;	// IMP=0x000000010000e298
@property(nonatomic, getter=isScanning) _Bool scanning; // @synthesize scanning=_scanning;
- (void)scanForUpdates:(id)arg1 complete:(CDUnknownBlockType)arg2;	// IMP=0x000000010000d0d0
- (void)_handleScanError:(id)arg1;	// IMP=0x000000010000d068
- (void)_setupManualDownloadPolicyPeriodIfNecessary:(id)arg1 fromDate:(id)arg2 save:(_Bool)arg3;	// IMP=0x000000010000cf54
- (void)notifyScanDidComplete:(id)arg1 error:(id)arg2;	// IMP=0x000000010000ceec
- (void)notifyScanRequestDidFinish:(id)arg1 update:(id)arg2 error:(id)arg3;	// IMP=0x000000010000ce38
- (void)notifyScanRequestDidStart:(id)arg1;	// IMP=0x000000010000cdc4
- (void)badgeSettingsForManualSoftwareUpdate;	// IMP=0x000000010000cd70
- (void)unbadgeSettingsForManualSoftwareUpdate;	// IMP=0x000000010000cd1c
- (void)dismissAutoUpdateBanner;	// IMP=0x000000010000ccc8
- (void)clearBadgeAndBanner;	// IMP=0x000000010000cc94
- (void)_presentAutoUpdateBannerOnUnlock;	// IMP=0x000000010000cbfc
- (_Bool)presentAutoUpdateBanner;	// IMP=0x000000010000c8d0
- (id)currentDescriptor;	// IMP=0x000000010000c8c0
- (id)lastScannedDescriptor;	// IMP=0x000000010000c8b0
- (void)_autoDownloadWiFiPeriodDidEnd;	// IMP=0x000000010000c804
- (_Bool)_isDateWithinAutodownloadWifiWindow:(id)arg1;	// IMP=0x000000010000c7b8
- (_Bool)_isWithinAutodownloadWifiWindow;	// IMP=0x000000010000c778
- (void)_endAutodownloadTasksAndResetState:(_Bool)arg1;	// IMP=0x000000010000c6d4
- (void)endAutodownloadTasksAndResetState;	// IMP=0x000000010000c6c4
- (void)noteAutodownloadFailedToStartWithError:(id)arg1;	// IMP=0x000000010000c5b4
- (void)_endOrRescheduleAutodownloadRetryInOneDay:(id)arg1;	// IMP=0x000000010000c468
- (_Bool)_doAutodownload:(id)arg1 error:(id *)arg2;	// IMP=0x000000010000c320
- (void)_tryOrScheduleAutodownloadWithPolicy:(id)arg1 allowOneTimeRetry:(_Bool)arg2;	// IMP=0x000000010000bfa0
- (void)tryAutodownload;	// IMP=0x000000010000bf00
- (void)autoScanAndDownloadIfAvailable:(int)arg1 withResult:(CDUnknownBlockType)arg2;	// IMP=0x000000010000baf4
- (void)autoScanAndDownloadIfAvailable:(int)arg1;	// IMP=0x000000010000bae4
- (void)_resetDownloadState;	// IMP=0x000000010000ba84
- (void)_loadBrainAndPrepare;	// IMP=0x000000010000b910
- (_Bool)_resumeUpdate;	// IMP=0x000000010000b774
- (void)_resumeFromLastKnownState;	// IMP=0x000000010000b240
- (void)adoptPotentialSessionID;	// IMP=0x000000010000b1d0
- (void)createpotentialNextSessionID;	// IMP=0x000000010000b04c
- (void)createSessionID;	// IMP=0x000000010000afb8
- (void)resumeOrResetIfNecessary;	// IMP=0x000000010000aca0
@property(nonatomic, getter=isDownloading) _Bool downloading; // @dynamic downloading;
- (void)removeObserver:(id)arg1;	// IMP=0x000000010000a930
- (void)addObserver:(id)arg1;	// IMP=0x000000010000a918
- (void)loadSavedState;	// IMP=0x000000010000a6f4
- (void)dealloc;	// IMP=0x000000010000a5b8
- (id)init;	// IMP=0x000000010000a284

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

