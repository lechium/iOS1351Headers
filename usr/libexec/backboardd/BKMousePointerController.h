//
//     Generated by classdumpios 1.0.1 (64 bit) (iOS port by DreamDevLost)(Debug version compiled Sep 26 2020 13:48:20).
//
//  Copyright (C) 1997-2019 Steve Nygard.
//

#import <objc/NSObject.h>

#import "BKCADisplayObserver-Protocol.h"
#import "BKDisplayBlankingObserver-Protocol.h"
#import "BKGlobalKeyboardObserver-Protocol.h"
#import "BKHIDEventProcessor-Protocol.h"
#import "BKMousePointerDeviceAvailabilityMonitorObserver-Protocol.h"
#import "BKOrientationManagerObserver-Protocol.h"
#import "BKSmartCoverObserver-Protocol.h"
#import "BSInvalidatable-Protocol.h"

@class BKCADisplayMonitor, BKDisplayController, BKDisplayLink, BKHIDClientConnectionManager, BKKeyboardHIDEventProcessor, BKMouseEventAccumulator, BKMousePointerAnnotationController, BKMousePointerControllerConfiguration, BKMousePointerDeviceAvailabilityMonitor, BKMousePointerEventStatisticsLogger, BKMousePointerRegion, BKMousePointerRegionArrangement, BKMousePointerServiceServer, BKOrientationManager, BKSLocalDefaults, BKSMousePointerDevicePreferences, BKSmartCoverHIDEventProcessor, BKTouchPadManager, NSArray, NSDictionary, NSHashTable, NSMutableArray, NSMutableDictionary, NSMutableOrderedSet, NSSet, NSString;
@protocol BSInvalidatable, OS_dispatch_queue;

@interface BKMousePointerController : NSObject <BKOrientationManagerObserver, BKDisplayBlankingObserver, BKSmartCoverObserver, BKCADisplayObserver, BKMousePointerDeviceAvailabilityMonitorObserver, BKGlobalKeyboardObserver, BKHIDEventProcessor, BSInvalidatable>
{
    struct os_unfair_lock_s _lock;	// 8 = 0x8
    struct os_unfair_lock_s _preferencesLock;	// 12 = 0xc
    NSObject<OS_dispatch_queue> *_pointerDeviceAvailabilityMonitorQueue;	// 16 = 0x10
    BKMousePointerControllerConfiguration *_configuration;	// 24 = 0x18
    double _mainDisplayCornerRadius;	// 32 = 0x20
    BKMousePointerDeviceAvailabilityMonitor *_pointerDeviceAvailabilityMonitor;	// 40 = 0x28
    NSDictionary *_displayUUIDToPointerRegion;	// 48 = 0x30
    BKCADisplayMonitor *_displayMonitor;	// 56 = 0x38
    id <BSInvalidatable> _displayMonitorObservingAssertion;	// 64 = 0x40
    NSString *_mainDisplayUUID;	// 72 = 0x48
    BKMousePointerRegionArrangement *_regionArrangement;	// 80 = 0x50
    BKMousePointerRegion *_pointerRegion;	// 88 = 0x58
    NSMutableArray *_activePointerAnimations;	// 96 = 0x60
    unsigned long long _pointerAnimationRevisionID;	// 104 = 0x68
    struct CGPoint _pointerRegionPoint;	// 112 = 0x70
    unsigned long long _interpolatedEventMask;	// 128 = 0x80
    BKDisplayLink *_displayLink;	// 136 = 0x88
    BKMouseEventAccumulator *_eventAccumulator;	// 144 = 0x90
    NSSet *_lastEventContexts;	// 152 = 0x98
    long long _mainDisplayInterfaceOrientation;	// 160 = 0xa0
    NSMutableDictionary *_senderPropertiesBySenderID;	// 168 = 0xa8
    long long _activeKeyboardModifiers;	// 176 = 0xb0
    BKTouchPadManager *_touchPadManager;	// 184 = 0xb8
    BKKeyboardHIDEventProcessor *_keyboardEventProcessor;	// 192 = 0xc0
    BKSmartCoverHIDEventProcessor *_smartCoverEventProcessor;	// 200 = 0xc8
    BKDisplayController *_displayController;	// 208 = 0xd0
    BKOrientationManager *_orientationManager;	// 216 = 0xd8
    id <BSInvalidatable> _displayBlankingObservationAssertion;	// 224 = 0xe0
    id <BSInvalidatable> _keyboardEventObservationAssertion;	// 232 = 0xe8
    BKMousePointerAnnotationController *_annotationController;	// 240 = 0xf0
    BKMousePointerServiceServer *_ipcServer_do_not_access_directly;	// 248 = 0xf8
    NSMutableArray *_lifecycleObservers;	// 256 = 0x100
    BKMousePointerEventStatisticsLogger *_statisticsLogger;	// 264 = 0x108
    NSHashTable *_globalDevicePreferencesObservers;	// 272 = 0x110
    NSMutableOrderedSet *_buttonDownRepositionAssertions;	// 280 = 0x118
    NSMutableDictionary *_globalEventRoutesByDisplayID;	// 288 = 0x120
    NSMutableDictionary *_modelUpdateSuppressionAssertionsByDisplayID;	// 296 = 0x128
    _Bool _debugVisualizationEnabled;	// 304 = 0x130
    _Bool _displayLinkDisabled;	// 305 = 0x131
    struct atomic_flag _invalid;	// 306 = 0x132
    BKSLocalDefaults *_localDefaults;	// 312 = 0x138
    BKHIDClientConnectionManager *_HIDConnectionManager;	// 320 = 0x140
}

+ (id)standardConfiguration;	// IMP=0x0000000100062b5c
- (void).cxx_destruct;	// IMP=0x0000000100061b20
@property(retain, nonatomic) BKHIDClientConnectionManager *HIDConnectionManager; // @synthesize HIDConnectionManager=_HIDConnectionManager;
@property(retain, nonatomic) BKSLocalDefaults *localDefaults; // @synthesize localDefaults=_localDefaults;
- (long long)_processTopLevelTrackpadEvent:(struct __IOHIDEvent *)arg1 sender:(id)arg2 dispatcher:(id)arg3;	// IMP=0x00000001000617d0
- (void)_locked_updateEventLifecycleObservers;	// IMP=0x000000010006149c
- (long long)_processTopLevelScaleEvent:(struct __IOHIDEvent *)arg1 sender:(id)arg2 dispatcher:(id)arg3;	// IMP=0x0000000100061424
- (long long)_processTopLevelScrollEvent:(struct __IOHIDEvent *)arg1 sender:(id)arg2 dispatcher:(id)arg3;	// IMP=0x000000010006139c
- (long long)_processTopLevelMouseEvent:(struct __IOHIDEvent *)arg1 sender:(id)arg2 dispatcher:(id)arg3;	// IMP=0x00000001000612fc
- (id)_locked_senderPropertiesForSenderID:(unsigned long long)arg1;	// IMP=0x0000000100061294
- (void)_locked_setupSenderStateForService:(id)arg1;	// IMP=0x00000001000611d0
- (id)_locked_pidsCorrespondingToContextsAtGlobalLocation:(struct CGPoint)arg1;	// IMP=0x0000000100060f1c
- (_Bool)_locked_validateNewGlobalPointerLocationRemainsInContextOfPid:(int)arg1 afterApplyingDeltaPoint:(struct CGPoint)arg2;	// IMP=0x0000000100060e2c
- (void)_locked_updateGlobalPointerLocationFromDeltaPoint:(struct CGPoint)arg1 reason:(id)arg2;	// IMP=0x0000000100060ba0
- (void)_locked_processOneAccumulatedEventAtTimestamp:(unsigned long long)arg1 shouldDisableDeltaPointerLocationUpdate:(_Bool)arg2;	// IMP=0x0000000100060284
- (void)_locked_getHitTestPoint:(out struct CGPoint *)arg1 display:(out id *)arg2 interfaceOrientation:(out long long *)arg3;	// IMP=0x0000000100060128
- (void)_locked_recenterModelPointIfNeeded:(out _Bool *)arg1;	// IMP=0x000000010005fc30
- (void)_locked_processAccumulatedEvents:(unsigned long long)arg1;	// IMP=0x000000010005facc
- (void)_locked_produceSyntheticPointerEventsAtTimestamp:(unsigned long long)arg1 alwaysSend:(_Bool)arg2;	// IMP=0x000000010005fa54
- (_Bool)_locked_shouldProcessEventsOnDisplayLink;	// IMP=0x000000010005fa38
- (void)_locked_produceSyntheticPointerEventsAtTimestamp:(unsigned long long)arg1;	// IMP=0x000000010005fa28
- (struct __IOHIDEvent *)_locked_exitEventForEventContext:(id)arg1 timestamp:(unsigned long long)arg2;	// IMP=0x000000010005f92c
- (void)_locked_dispatchExitEventAtTimestamp:(unsigned long long)arg1;	// IMP=0x000000010005f748
- (struct __IOHIDEvent *)_locked_eventWithPointerState:(unsigned short)arg1 timestamp:(unsigned long long)arg2 sender:(id)arg3 hitTestPoint:(struct CGPoint)arg4 unacceleratedRelativePoint:(struct CGPoint)arg5 acceleratedRelativePoint:(struct CGPoint)arg6 contextID:(unsigned int)arg7 displayUUID:(id)arg8;	// IMP=0x000000010005f0cc
- (long long)_locked_orientationForDisplayUUID:(id)arg1;	// IMP=0x000000010005f03c
- (void)_locked_updatePointerWithProposedGlobalPoint:(struct CGPoint)arg1 shouldUpdateDisplayProperties:(_Bool)arg2;	// IMP=0x000000010005ed78
- (void)_locked_updateMousePointerRegionArrangement;	// IMP=0x000000010005e954
- (void)_displayLinkFired:(id)arg1;	// IMP=0x000000010005e7e8
- (void)_locked_reevaluateDisplayLinkForReason:(id)arg1;	// IMP=0x000000010005e5f0
- (void)_locked_sendExitEventsAfterTerminatingDisplayLink;	// IMP=0x000000010005e100
- (void)_locked_invalidateGlobalEventRoutesInSet:(id)arg1 forPID:(int)arg2 display:(id)arg3;	// IMP=0x000000010005de90
- (void)_locked_setGlobalPointerEventContextIDsForPID:(int)arg1 displayUUID:(id)arg2 targetContextIDs:(id)arg3;	// IMP=0x000000010005dacc
- (void)_locked_removeLifecycleObserver:(id)arg1;	// IMP=0x000000010005da68
- (void)_locked_addLifecycleObserver:(id)arg1;	// IMP=0x000000010005da0c
- (_Bool)_preferencesLock_setGlobalDevicePreferences:(id)arg1;	// IMP=0x000000010005d8b8
- (id)_preferencesLock_globalDevicePreferences;	// IMP=0x000000010005d6dc
- (void)_preferencesLock_applyDevicePreferences:(id)arg1 toService:(id)arg2;	// IMP=0x000000010005d254
- (void)_locked_applyViewStateToServices:(id)arg1;	// IMP=0x000000010005d11c
- (void)_locked_updateService:(id)arg1 viewStateDictionary:(id)arg2;	// IMP=0x000000010005cf3c
- (void)_locked_resetEventAccumulator;	// IMP=0x000000010005ce20
- (void)_locked_updateEventAccumulatorSettings;	// IMP=0x000000010005cd84
- (id)_viewStateDictionaryForScreenOn:(_Bool)arg1 digitizerSurfaceCovered:(_Bool)arg2;	// IMP=0x000000010005cc90
- (void)_reevaluteMousePointerVisualizationFromDefaults;	// IMP=0x000000010005c804
- (void)globalKeyboardModifiersDidChange:(long long)arg1;	// IMP=0x000000010005c788
- (void)smartCoverStateDidChange:(int)arg1;	// IMP=0x000000010005c6d4
- (void)displayUUIDDidChange:(id)arg1;	// IMP=0x000000010005c688
- (void)displayCurrentModeDidChange:(id)arg1;	// IMP=0x000000010005c63c
- (void)displayAvailableModesDidChange:(id)arg1;	// IMP=0x000000010005c5f0
- (void)display:(id)arg1 didBecomeBlank:(_Bool)arg2;	// IMP=0x000000010005c55c
- (void)mousePointerIOHIDServicesRemoved:(id)arg1;	// IMP=0x000000010005c324
- (void)_invokeServerCallout:(CDUnknownBlockType)arg1;	// IMP=0x000000010005c2f0
- (void)mousePointerIOHIDServicesAdded:(id)arg1;	// IMP=0x000000010005bfbc
- (void)mousePointerDeviceAvailabilityMonitorDidChangeAvailability:(id)arg1;	// IMP=0x000000010005be38
- (void)orientationManager:(id)arg1 deviceOrientationMayHaveChanged:(long long)arg2 changeSource:(long long)arg3 isDeviceOrientationLocked:(_Bool)arg4;	// IMP=0x000000010005bdd0
- (long long)processEvent:(struct __IOHIDEvent *)arg1 sender:(id)arg2 dispatcher:(id)arg3;	// IMP=0x000000010005bce4
- (void)removeGlobalDevicePreferencesObserver:(id)arg1;	// IMP=0x000000010005bc70
- (void)addGlobalDevicePreferencesObserver:(id)arg1;	// IMP=0x000000010005bbe8
- (void)removeLifecycleObserver:(id)arg1;	// IMP=0x000000010005bb94
- (void)addLifecycleObserver:(id)arg1;	// IMP=0x000000010005bb40
@property(nonatomic) BKSMousePointerDevicePreferences *globalDevicePreferences;
- (void)setPreferences:(id)arg1 forDevice:(id)arg2;	// IMP=0x000000010005b818
- (id)preferencesForDevice:(id)arg1;	// IMP=0x000000010005b7b4
- (void)hitTestRegionsDidChange:(id)arg1 forDisplayUUID:(id)arg2;	// IMP=0x000000010005b6bc
- (void)stopRoutingGlobalEventsForPID:(int)arg1;	// IMP=0x000000010005b610
- (void)setGlobalPointerEventContextIDsForPID:(int)arg1 displayUUID:(id)arg2 targetContextIDs:(id)arg3;	// IMP=0x000000010005b434
- (void)getHitTestContextsAtPoint:(id)arg1 withAdditionalContexts:(id)arg2 onDisplay:(id)arg3 withCompletion:(CDUnknownBlockType)arg4;	// IMP=0x000000010005afb0
- (id)acquireButtonDownPointerRepositionAssertionForReason:(id)arg1 contextRelativePointerPosition:(id)arg2 onDisplay:(id)arg3 restrictingToPID:(int)arg4;	// IMP=0x000000010005ac30
- (void)_setPointerPosition:(struct CGPoint)arg1 onDisplay:(id)arg2 restrictedToPid:(int)arg3 withAnimationDriverProvider:(CDUnknownBlockType)arg4;	// IMP=0x000000010005a814
- (void)setContextRelativePointerPosition:(id)arg1 withInitialVelocity:(id)arg2 onDisplay:(id)arg3 withDecelerationRate:(double)arg4 restrictingToPID:(int)arg5;	// IMP=0x000000010005a678
- (void)setContextRelativePointerPosition:(id)arg1 onDisplay:(id)arg2 withAnimationParameters:(id)arg3 restrictingToPID:(int)arg4;	// IMP=0x000000010005a5a8
- (int)_pidForContextID:(unsigned int)arg1 onDisplay:(id)arg2 pidValidOut:(out _Bool *)arg3;	// IMP=0x000000010005a4dc
- (void)setPointerPosition:(struct CGPoint)arg1 onDisplay:(id)arg2 withAnimationParameters:(id)arg3;	// IMP=0x000000010005a31c
- (struct CGPoint)_pointerRegionPointForContextRelativePoint:(id)arg1 onDisplay:(id)arg2;	// IMP=0x000000010005a204
- (void)setGlobalPointerPosition:(struct CGPoint)arg1 synthesizeEvents:(_Bool)arg2;	// IMP=0x000000010005a13c
@property(nonatomic) struct CGPoint globalPointerPosition;
- (id)suppressPointerModelUpdatesAssertionForDisplay:(id)arg1 reason:(id)arg2;	// IMP=0x0000000100059e90
@property(readonly, nonatomic) NSArray *availableDevices;
- (void)invalidate;	// IMP=0x0000000100059bc8
- (void)dealloc;	// IMP=0x0000000100059b7c
- (id)initWithConfiguration:(id)arg1;	// IMP=0x00000001000595c8
- (id)init;	// IMP=0x000000010005956c

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

