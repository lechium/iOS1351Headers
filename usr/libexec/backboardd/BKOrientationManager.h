//
//     Generated by classdumpios 1.0.1 (64 bit) (iOS port by DreamDevLost)(Debug version compiled Sep 26 2020 13:48:20).
//
//  Copyright (C) 1997-2019 Steve Nygard.
//

#import <objc/NSObject.h>

#import "BKIOHIDServiceDisappearanceObserver-Protocol.h"
#import "BKIOHIDServiceMatchObserver-Protocol.h"

@class BKIOHIDService, BKIOHIDServiceMatcher, CMDeviceOrientationManager, NSHashTable, NSOperationQueue, NSString;
@protocol OS_dispatch_queue;

@interface BKOrientationManager : NSObject <BKIOHIDServiceMatchObserver, BKIOHIDServiceDisappearanceObserver>
{
    NSObject<OS_dispatch_queue> *_queue;	// 8 = 0x8
    NSObject<OS_dispatch_queue> *_observerCalloutQueue;	// 16 = 0x10
    NSHashTable *_queue_observers;	// 24 = 0x18
    double _queue_updateInterval;	// 32 = 0x20
    float _queue_interruptEventThresholds;	// 40 = 0x28
    _Bool _queue_isOrientationEventsEnabled;	// 44 = 0x2c
    long long _queue_lastUnambiguousRawAccelerometerDeviceOrientation;	// 48 = 0x30
    long long _queue_currentUserInterfaceOrientation;	// 56 = 0x38
    long long _queue_currentRawAccelerometerDeviceOrientation;	// 64 = 0x40
    long long _queue_lastEffectiveInterfaceOrientation;	// 72 = 0x48
    long long _queue_effectiveDeviceOrientation;	// 80 = 0x50
    unsigned long long _queue_orientationLocksEnabled;	// 88 = 0x58
    _Bool _queue_ignoreAccelerometerAndOrientationEventsForTesting;	// 96 = 0x60
    NSOperationQueue *_queue_orientationManagerOperationQueue;	// 104 = 0x68
    CMDeviceOrientationManager *_queue_orientationManager;	// 112 = 0x70
    BKIOHIDService *_queue_HIDService;	// 120 = 0x78
    BKIOHIDServiceMatcher *_queue_HIDServiceMatcher;	// 128 = 0x80
    NSObject<OS_dispatch_queue> *_notifyQueue;	// 136 = 0x88
}

+ (id)sharedInstance;	// IMP=0x000000010007ef8c
- (void).cxx_destruct;	// IMP=0x000000010007e6cc
@property(retain, nonatomic, getter=_queue_HIDService, setter=_queue_setHIDService:) BKIOHIDService *queue_HIDService; // @synthesize queue_HIDService=_queue_HIDService;
- (void)_queue_postDeviceOrientationLockChangedNotification:(_Bool)arg1;	// IMP=0x000000010007e664
- (void)_queue_postUpdatedLastUnambiguousDeviceOrientation:(long long)arg1;	// IMP=0x000000010007e60c
- (void)_queue_postUpdatedRawAccelerometerDeviceOrientation:(long long)arg1;	// IMP=0x000000010007e5b4
- (void)_queue_postUpdatedOrientation:(long long)arg1;	// IMP=0x000000010007e55c
- (void)_queue_unlockDeviceOrientationForType:(unsigned long long)arg1;	// IMP=0x000000010007e434
- (_Bool)_queue_isDeviceLockedForAtLeastOneType:(unsigned long long)arg1;	// IMP=0x000000010007e424
- (_Bool)_queue_isDeviceLockedForAllTypes:(unsigned long long)arg1;	// IMP=0x000000010007e414
- (void)_queue_lockDeviceOrientation:(unsigned long long)arg1 deviceOrientation:(long long)arg2;	// IMP=0x000000010007e1b8
- (void)_queue_postDeviceOrientationLockChangedNotification;	// IMP=0x000000010007e180
- (void)_queue_noteEffectiveOrRawDeviceOrientationDidChange:(long long)arg1 changeSource:(long long)arg2;	// IMP=0x000000010007e008
- (void)_queue_updateDeviceOrientation:(long long)arg1 changeSource:(long long)arg2;	// IMP=0x000000010007df78
- (void)_queue_updateDeviceOrientationFromCoreMotion:(id)arg1;	// IMP=0x000000010007de64
- (void)_queue_updateDeviceOrientationWithTemporaryManager;	// IMP=0x000000010007dd08
- (void)_queue_updateDeviceOrientationSynchronously;	// IMP=0x000000010007dc38
- (void)_queue_setLastUnambiguousDeviceOrientation:(long long)arg1;	// IMP=0x000000010007dc18
- (void)_queue_setCurrentRawAccelerometerDeviceOrientation:(long long)arg1;	// IMP=0x000000010007dbf8
- (void)_queue_setEffectiveDeviceOrientation:(long long)arg1 affectingLastEffectiveInterfaceOrientation:(_Bool)arg2;	// IMP=0x000000010007dac8
- (void)_queue_setCurrentUserInterfaceOrientation:(long long)arg1;	// IMP=0x000000010007d948
- (void)_queue_resetDeviceOrientation;	// IMP=0x000000010007d87c
- (void)_queue_setOrientationEventsEnabled:(_Bool)arg1;	// IMP=0x000000010007d70c
- (_Bool)_queue_isOrientationLocked;	// IMP=0x000000010007d6fc
- (void)_queue_setUpdateInterval:(double)arg1;	// IMP=0x000000010007d588
- (void)_queue_setInterruptEventThresholds:(float)arg1;	// IMP=0x000000010007d384
- (void)_systemAppDidExit:(id)arg1;	// IMP=0x000000010007d374
- (void)_systemAppDidCheckin:(id)arg1;	// IMP=0x000000010007d31c
- (void)removeObserver:(id)arg1;	// IMP=0x000000010007d288
- (void)addObserver:(id)arg1;	// IMP=0x000000010007d1f4
- (void)refreshEffectiveDeviceOrientation;	// IMP=0x000000010007d19c
- (void)updateDeviceOrientation:(long long)arg1 changeSource:(long long)arg2;	// IMP=0x000000010007d140
- (void)unlockDeviceOrientation:(unsigned long long)arg1;	// IMP=0x000000010007d0e8
- (void)lockDeviceOrientation:(unsigned long long)arg1 deviceOrientation:(long long)arg2;	// IMP=0x000000010007d08c
- (_Bool)isDeviceOrientationLockedForType:(unsigned long long)arg1;	// IMP=0x000000010007cff8
- (_Bool)isDeviceOrientationLocked:(long long *)arg1;	// IMP=0x000000010007cf64
- (_Bool)isDeviceOrientationLocked;	// IMP=0x000000010007ced4
@property(readonly, nonatomic) long long effectiveDeviceOrientation;
@property(readonly, nonatomic) long long currentRawAccelerometerDeviceOrientation;
@property(readonly, nonatomic) long long lastEffectiveInterfaceOrientation;
@property(nonatomic) long long currentUserInterfaceOrientation;
@property(nonatomic, getter=isOrientationEventsEnabled) _Bool orientationEventsEnabled;
@property(nonatomic) double updateInterval;
@property(nonatomic) float interruptEventThresholds;
- (void)serviceDidDisappear:(id)arg1;	// IMP=0x000000010007c8d4
- (void)matcher:(id)arg1 servicesDidMatch:(id)arg2;	// IMP=0x000000010007c83c
- (void)dealloc;	// IMP=0x000000010007c7b4
- (id)_initWithDeviceOrientationManager:(id)arg1;	// IMP=0x000000010007c518
- (id)init;	// IMP=0x000000010007c4c8

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

