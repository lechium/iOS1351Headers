//
//     Generated by classdumpios 1.0.1 (64 bit) (iOS port by DreamDevLost)(Debug version compiled Sep 26 2020 13:48:20).
//
//  Copyright (C) 1997-2019 Steve Nygard.
//

#import "BaseRequestHandler.h"

#import "ICEnvironmentMonitorObserver-Protocol.h"
#import "LibraryManaging-Protocol.h"

@class CloudUpdateLibraryOperation, NSMutableArray, NSObject, NSOperationQueue, NSString, SagaArtworkImporter, SagaLibrary;
@protocol OS_dispatch_queue, OS_dispatch_source;

@interface SagaRequestHandler : BaseRequestHandler <ICEnvironmentMonitorObserver, LibraryManaging>
{
    SagaLibrary *_library;	// 8 = 0x8
    SagaArtworkImporter *_artworkImporter;	// 16 = 0x10
    NSObject<OS_dispatch_queue> *_uploadItemPropertiesQueue;	// 24 = 0x18
    NSObject<OS_dispatch_queue> *_uploadPlaylistPropertiesQueue;	// 32 = 0x20
    NSObject<OS_dispatch_queue> *_updateCloudLibraryQueue;	// 40 = 0x28
    NSObject<OS_dispatch_queue> *_retryCloudAuthenticationQueue;	// 48 = 0x30
    NSObject<OS_dispatch_queue> *_updateMergePreferenceQueue;	// 56 = 0x38
    CloudUpdateLibraryOperation *_updateCloudLibraryOperation;	// 64 = 0x40
    NSMutableArray *_updateLibraryCompletionHandlers;	// 72 = 0x48
    NSObject<OS_dispatch_source> *_itemPropertiesCoalescingTimer;	// 80 = 0x50
    NSObject<OS_dispatch_source> *_playlistPropertiesCoalescingTimer;	// 88 = 0x58
    NSOperationQueue *_autoEnableOperationQueue;	// 96 = 0x60
    NSOperationQueue *_autoRetryCloudAuthenticateOperationQueue;	// 104 = 0x68
    unsigned long long _autoEnableFailureCount;	// 112 = 0x70
    unsigned long long _autoRetryCloudAuthenticateFailureCount;	// 120 = 0x78
    _Bool _autoEnableRetryScheduled;	// 128 = 0x80
    _Bool _autoRetryCloudAuthenticateScheduled;	// 129 = 0x81
}

+ (id)handler;	// IMP=0x000000010003f840
+ (id)handlers;	// IMP=0x000000010003f7d4
- (void).cxx_destruct;	// IMP=0x0000000100050094
- (_Bool)_isInstallDispositionUpgradeOrRestoreFromBackup;	// IMP=0x000000010004ffc8
- (long long)_cloudLibraryEnableReasonFromICRequestReason:(long long)arg1;	// IMP=0x000000010004ffb8
- (_Bool)_isValidReason:(long long)arg1 forInstallDispositionWithProperties:(id)arg2;	// IMP=0x000000010004fe3c
- (_Bool)_isValidReasonForOverride:(long long)arg1;	// IMP=0x000000010004fe20
- (void)_handleMusicSubscriptionStatusDidChangeNotification:(id)arg1;	// IMP=0x000000010004fae8
- (void)_handleCloudLibraryUpdateOperationFinishedWithError:(id)arg1;	// IMP=0x000000010004f928
- (void)_updateLibraryWithRequestReason:(long long)arg1 enableICMLReason:(long long)arg2 allowNoisyAuthPrompt:(_Bool)arg3 completionHandler:(CDUnknownBlockType)arg4;	// IMP=0x000000010004e774
- (void)_handleAutomaticEnablingOfCloudLibraryForReason:(long long)arg1;	// IMP=0x000000010004d164
- (void)_handleAutomaticAuthenticatingOfCloudLibraryStartInitialImport:(_Bool)arg1 mergeWithCloudLibrary:(_Bool)arg2 isExplicitUserAction:(_Bool)arg3;	// IMP=0x000000010004c7e4
- (void)_handleAutomaticEnablingOfCloudLibraryError:(id)arg1 reason:(long long)arg2;	// IMP=0x000000010004c32c
- (void)_addLibraryOperation:(id)arg1 priority:(int)arg2 noLibraryHandler:(CDUnknownBlockType)arg3;	// IMP=0x000000010004c254
- (void)_authenticateAndStartInitialImport:(_Bool)arg1 mergeWithCloudLibrary:(_Bool)arg2 isExplicitUserAction:(_Bool)arg3 completion:(CDUnknownBlockType)arg4;	// IMP=0x000000010004beb4
- (void)_authenticateWithMergeToCloudLibraryPreference:(id)arg1 allowNoisyAuthPrompt:(_Bool)arg2 withCompletionHandler:(CDUnknownBlockType)arg3;	// IMP=0x000000010004b60c
- (id)_library;	// IMP=0x000000010004b56c
- (void)_deauthenticateDeletingDB:(_Bool)arg1 disableActiveLockerAccount:(_Bool)arg2 disableMediaKindSongForJaliscoImport:(_Bool)arg3 completionHandler:(CDUnknownBlockType)arg4;	// IMP=0x000000010004ad14
- (void)_updateMergePreference:(_Bool)arg1 onMusicLibrary:(id)arg2;	// IMP=0x000000010004ab74
- (void)environmentMonitorDidChangePower:(id)arg1;	// IMP=0x000000010004a9f8
- (void)loadLastKnownEnableICMLStatusWithCompletionHandler:(CDUnknownBlockType)arg1;	// IMP=0x000000010004a748
- (void)enableCloudLibraryForDaemonStartup;	// IMP=0x000000010004a738
- (void)authenticateAndStartInitialImport:(_Bool)arg1 enableCloudLibraryPolicy:(long long)arg2 isExplicitUserAction:(_Bool)arg3 completion:(CDUnknownBlockType)arg4;	// IMP=0x00000001000499f8
- (float)updateProgress;	// IMP=0x0000000100049918
- (void)updateLibraryWithReason:(long long)arg1 allowNoisyAuthPrompt:(_Bool)arg2 completionHandler:(CDUnknownBlockType)arg3;	// IMP=0x000000010004968c
- (void)updateLibraryWithReason:(long long)arg1 completionHandler:(CDUnknownBlockType)arg2;	// IMP=0x0000000100049678
- (void)setItemProperties:(id)arg1 forSagaID:(unsigned long long)arg2 completionHandler:(CDUnknownBlockType)arg3;	// IMP=0x000000010004924c
- (void)loadGeniusItemsForSagaID:(unsigned long long)arg1 completionHandler:(CDUnknownBlockType)arg2;	// IMP=0x0000000100048f78
- (void)loadScreenshotInfoForSagaIDs:(id)arg1 completionHandler:(CDUnknownBlockType)arg2;	// IMP=0x0000000100048ae0
- (void)loadArtworkInfoForContainerSagaIDs:(id)arg1 completionHandler:(CDUnknownBlockType)arg2;	// IMP=0x0000000100048710
- (void)loadArtworkInfoForSagaIDs:(id)arg1 completionHandler:(CDUnknownBlockType)arg2;	// IMP=0x0000000100048340
- (void)deprioritizeContainerArtworkForSagaID:(unsigned long long)arg1;	// IMP=0x0000000100048324
- (void)deprioritizeScreenshotForSagaID:(unsigned long long)arg1;	// IMP=0x0000000100048308
- (void)deprioritizeItemArtworkForSagaID:(unsigned long long)arg1;	// IMP=0x00000001000482ec
- (void)importContainerArtworkForSagaID:(unsigned long long)arg1 completionHandler:(CDUnknownBlockType)arg2;	// IMP=0x00000001000480a4
- (void)importScreenshotForSagaID:(unsigned long long)arg1 completionHandler:(CDUnknownBlockType)arg2;	// IMP=0x0000000100047e5c
- (void)importItemArtworkForSagaID:(unsigned long long)arg1 completionHandler:(CDUnknownBlockType)arg2;	// IMP=0x0000000100047c14
- (_Bool)isUpdateInProgressWithIsInitialImport:(_Bool *)arg1;	// IMP=0x0000000100047a70
- (void)setAlbumProperties:(id)arg1 forItemsWithAlbumPersistentID:(long long)arg2 completionHandler:(CDUnknownBlockType)arg3;	// IMP=0x0000000100047784
- (void)setCloudAddToPlaylistBehavior:(long long)arg1 completionHandler:(CDUnknownBlockType)arg2;	// IMP=0x000000010004749c
- (void)deauthenticateAndDisableActiveLockerAccountWithCompletion:(CDUnknownBlockType)arg1;	// IMP=0x000000010004704c
- (void)deauthenticateWithCompletionHandler:(CDUnknownBlockType)arg1;	// IMP=0x0000000100047030
- (void)addStorePlaylistWithGlobalID:(id)arg1 completionHandler:(CDUnknownBlockType)arg2;	// IMP=0x0000000100046d30
- (void)addStoreItemWithOpaqueID:(id)arg1 requestingBundleID:(id)arg2 completionHandler:(CDUnknownBlockType)arg3;	// IMP=0x0000000100046aa0
- (void)addStoreItemWithAdamID:(long long)arg1 referral:(id)arg2 completionHandler:(CDUnknownBlockType)arg3;	// IMP=0x0000000100046584
- (void)updateSubscribedPlaylistsWithSagaIDs:(id)arg1 ignoreMinRefreshInterval:(_Bool)arg2 requestReason:(long long)arg3 pinnedOnly:(_Bool)arg4 completionHandler:(CDUnknownBlockType)arg5;	// IMP=0x0000000100046268
- (void)uploadArtworkForPlaylistWithPersistentID:(long long)arg1 completionHandler:(CDUnknownBlockType)arg2;	// IMP=0x0000000100045f88
- (void)removePlaylistsWithSagaIDs:(id)arg1 completionHandler:(CDUnknownBlockType)arg2;	// IMP=0x0000000100045cb0
- (void)removeItemsWithSagaIDs:(id)arg1 completionHandler:(CDUnknownBlockType)arg2;	// IMP=0x00000001000459d8
- (void)publishPlaylistWithSagaID:(unsigned long long)arg1 completionHandler:(CDUnknownBlockType)arg2;	// IMP=0x00000001000456a4
- (void)setPlaylistProperties:(id)arg1 trackList:(id)arg2 forPlaylistPersistentID:(long long)arg3 completionHandler:(CDUnknownBlockType)arg4;	// IMP=0x000000010004532c
- (void)addStoreItemWithOpaqueID:(id)arg1 toPlaylistWithPersistentID:(long long)arg2 requestingBundleID:(id)arg3 completionHandler:(CDUnknownBlockType)arg4;	// IMP=0x0000000100045088
- (void)addItemWithSagaID:(unsigned long long)arg1 toPlaylistWithPersistentID:(long long)arg2 completionHandler:(CDUnknownBlockType)arg3;	// IMP=0x0000000100044db4
- (void)addStoreItemWithAdamID:(long long)arg1 referral:(id)arg2 toPlaylistWithPersistentID:(long long)arg3 completionHandler:(CDUnknownBlockType)arg4;	// IMP=0x0000000100044890
- (void)addGeniusPlaylistWithPersistentID:(long long)arg1 name:(id)arg2 seedItemIDs:(id)arg3 itemIDs:(id)arg4 completionHandler:(CDUnknownBlockType)arg5;	// IMP=0x0000000100044510
- (void)createPlaylistWithPersistentID:(long long)arg1 properties:(id)arg2 trackList:(id)arg3 requestingBundleID:(id)arg4 completionHandler:(CDUnknownBlockType)arg5;	// IMP=0x0000000100044158
- (void)createPlaylistWithPersistentID:(long long)arg1 properties:(id)arg2 trackList:(id)arg3 completionHandler:(CDUnknownBlockType)arg4;	// IMP=0x0000000100043d64
- (void)uploadPlaylistPropertiesWithMinimumTimeInterval:(double)arg1;	// IMP=0x0000000100043760
- (void)uploadItemPropertiesWithMinimumTimeInterval:(double)arg1;	// IMP=0x00000001000430e0
- (void)updatePlaylistPlayDataWithCompletionHandler:(CDUnknownBlockType)arg1;	// IMP=0x0000000100042dd4
- (void)updateItemPlayDataWithCompletionHandler:(CDUnknownBlockType)arg1;	// IMP=0x0000000100042ac8
- (void)increasePriorityForAllOperations;	// IMP=0x000000010004287c
- (void)decreasePriorityForAllOperations;	// IMP=0x0000000100042630
- (void)cancelOperationsWithCompletion:(CDUnknownBlockType)arg1;	// IMP=0x0000000100042284
- (void)performInitialLibraryUpdateWithCompletion:(CDUnknownBlockType)arg1;	// IMP=0x0000000100041eec
- (void)becomeInactiveWithDeauthentication:(_Bool)arg1 completion:(CDUnknownBlockType)arg2;	// IMP=0x00000001000418a4
- (void)becomeActive;	// IMP=0x0000000100040238
- (void)cancelPendingChanges;	// IMP=0x0000000100040228
- (void)cancelPendingChangesWithCompletion:(CDUnknownBlockType)arg1;	// IMP=0x000000010004009c
- (void)addBackgroundOperation:(id)arg1 priority:(int)arg2;	// IMP=0x0000000100040020
- (void)addOperation:(id)arg1 priority:(int)arg2;	// IMP=0x000000010003ffa4
- (id)initWithConfiguration:(id)arg1;	// IMP=0x000000010003fa7c
- (id)init;	// IMP=0x000000010003fa2c
- (void)dealloc;	// IMP=0x000000010003f89c

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

