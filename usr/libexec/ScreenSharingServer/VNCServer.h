//
//     Generated by classdumpios 1.0.1 (64 bit) (iOS port by DreamDevLost)(Debug version compiled Sep 26 2020 13:48:20).
//
//  Copyright (C) 1997-2019 Steve Nygard.
//

#import <objc/NSObject.h>

@protocol OS_dispatch_queue, OS_dispatch_semaphore, OS_dispatch_source, OS_xpc_object;

@interface VNCServer : NSObject
{
    int clientFd;	// 8 = 0x8
    int writeLock;	// 12 = 0xc
    int fbLock;	// 16 = 0x10
    char *oldData;	// 24 = 0x18
    char *newData;	// 32 = 0x20
    unsigned long long oldWidth;	// 40 = 0x28
    unsigned long long oldHeight;	// 48 = 0x30
    unsigned long long oldBPP;	// 56 = 0x38
    unsigned long long currentBPP;	// 64 = 0x40
    unsigned long long shared_flag;	// 72 = 0x48
    struct CGContext *oldContext;	// 80 = 0x50
    struct CGContext *newContext;	// 88 = 0x58
    char *lastClientMessage;	// 96 = 0x60
    long long lastClientMessageLength;	// 104 = 0x68
    NSObject<OS_dispatch_source> *clientSource;	// 112 = 0x70
    NSObject<OS_dispatch_source> *updateFBSource;	// 120 = 0x78
    NSObject<OS_dispatch_queue> *clientQueue;	// 128 = 0x80
    int state;	// 136 = 0x88
    int update_requested;	// 140 = 0x8c
    int last_update;	// 144 = 0x90
    int notifierToken;	// 148 = 0x94
    struct {
        int sockFD;
        CDStruct_183601bc *ndata;
        unsigned int viewerMajorVersion;
        unsigned int viewerMinorVersion;
        unsigned char enhancedViewer;
        unsigned char viewerWantsExtendedServerInfo;
        unsigned short mode;
        unsigned int state;
        unsigned short authState;
        unsigned char VersionRFB3dot888Viewer;
        unsigned char viewerInitializationFlags;
        unsigned char guestAppFlag;
        unsigned int scrapTransferSession;
        unsigned char autoUpdateFlag;
        unsigned int autoUpdateMininumInterval;
        unsigned int guestAppToken;
        struct Rect viewerAutoUpdateRectangle;
        struct Rect viewerAutoUpdateRectangleScaled;
        struct Rect viewerFrameUpdateRectangle;
        struct Rect viewerFrameUpdateRectangleScaled;
        struct Rect maxFrameUpdateRect;
        struct Rect changedRectangle;
        struct {
            unsigned char bitsPerPixel;
            unsigned char depth;
            unsigned char bigEndianFlag;
            unsigned char trueColorFlag;
            unsigned short redMax;
            unsigned short greenMax;
            unsigned short blueMax;
            unsigned char redShift;
            unsigned char greenShift;
            unsigned char blueShift;
            unsigned char padding;
            unsigned char padding2;
            unsigned char padding3;
        } viewerDesiredPixelFormat;
        unsigned char changedRectangleAvailable;
        unsigned char viewerFrameUpdateRequest;
        unsigned char lastDepth;
        unsigned char lastMouseMask;
        struct Point lastMouseLocation;
        struct Point lastMouseLocationVirtual;
        unsigned int lastMouseTime;
        unsigned int lastUpdateTime;
        unsigned int codec;
        unsigned int oldCodec;
        unsigned int supportedLosslessCodec;
        unsigned char copyRectSupported;
        unsigned char sendCursorAlphaFlag;
        unsigned char sendCursorImageFlag;
        unsigned char sendCursorPositionFlag;
        unsigned char sentInitialCursorImageFlag;
        unsigned char sentInitialCursorPositionFlag;
        unsigned char sendDesktopSizeFlag;
        unsigned char sendDisplayInfoFlag;
        unsigned char sendDisplayInfo2Flag;
        unsigned char sendCacheEncodingsFlag;
        unsigned char capsLockFlag;
        unsigned char shiftKeyFlag;
        unsigned char controlKeyFlag;
        unsigned char optionKeyFlag;
        unsigned char commandKeyFlag;
        unsigned char signalFileCopyThreadFlag;
        unsigned char enable_lastrect;
        int compress_level;
        int jpeg_quality;
        struct z_stream_s zs_struct[4];
        int zs_active[4];
        int zs_level[4];
        struct UserInfoEncoding userInfo;
        struct SubZlibCodecInfo zinfo[4];
        CDUnknownFunctionPointerType trans_func;
        char *trans_table;
        unsigned short translatedPixelSize;
        unsigned char pwChallenge[16];
        CDStruct_183601bc *firstCmdBuffer;
        CDStruct_183601bc *lastCmdBuffer;
        CDStruct_183601bc *firstFrameBuffer;
        CDStruct_183601bc *lastFrameBuffer;
        CDStruct_183601bc *sendBufferTCP;
        void *bufferPtrCR;
        void *TCPSendCR;
        void *sendBufferCR;
        struct _opaque_pthread_t *sendThread;
        void *mouseChangeCR;
        unsigned int totalBytesSent;
        int totalBytesPending;
        unsigned char sendResolutionChange;
        unsigned char desktopSizeEncodingSupported;
        unsigned char screenIsScaled;
        unsigned char updatedScaleFactor;
        double screenScaleFactor;
        char *scaledScreenBitmap;
        unsigned int scaledScreenBitmapSize;
        unsigned short scaledWidth;
        unsigned short scaledHeight;
        unsigned short scaledRowBytes;
        unsigned short lastWidth;
        unsigned short lastHeight;
        short lastGlobalOriginX;
        short lastGlobalOriginY;
        unsigned short updateSemaphoreTimeLimit;
        void *screenBase;
        unsigned int screenRowBytes;
        struct ARDBigNum *DHRandNum;
        struct ARDBigNum *DHPrime;
        struct ARDBigNum *DHGenerator;
        unsigned short DHPrimeSize;
        unsigned char updateDisplayInfoFlag;
        unsigned char stealthControlFlag;
        struct _CCCryptor *AESkeyReceiveCC;
        struct _CCCryptor *AESkeySend;
        struct _CCCryptor *AESKeyECB;
        struct _CCCryptor *AESKeyECBSend;
        unsigned int securityFlags;
        unsigned char observeFlag;
        unsigned char absControlFlag;
        unsigned char askFlag;
        unsigned char sendTCP;
        unsigned char discconnectViewer;
        unsigned char stopScreenRedirect;
        unsigned char sendThreadInitFlag;
        unsigned char onlyShareScreenFlag;
        unsigned char onlySendMainDisplayFlag;
        unsigned char setDisplayFlag;
        unsigned char preauthorizedFlag;
        unsigned char kerberosAuthFlag;
        unsigned short currentDisplayIndex;
        unsigned char codecChanged;
        unsigned char sse2AvailableFlag;
        unsigned int modifierFlags;
        unsigned char sentFrameToViewerFlag;
        unsigned char pendingCmd;
        unsigned char pendingCmdFlag;
        unsigned char readFirstScreenFlag;
        char *dropEventData;
        unsigned int dropEventDataLength;
        unsigned int dropEventDataLengthUncompressed;
        unsigned int dropEventDataAmtRead;
        char *clipboardData;
        unsigned int clipboardDataLength;
        unsigned int clipboardDataLengthUncompressed;
        unsigned int clipboardDataAmtRead;
        unsigned char clipboardDataOnlyPromisesFlag;
        unsigned char autoPasteboardCmdSet;
        unsigned short autoPasteboardCmd;
        struct sockaddr_in6 viewerAddress;
        unsigned int maxBandwidth;
        unsigned short encryption;
        unsigned char encryptionKey[16];
        unsigned char userNameUTF8[512];
        void *ScreenChangeCR;
        struct ScreenChangeInfo *firstScreenChange;
        struct ScreenChangeInfo *lastScreenChange;
        struct UnsignedWide startTime;
        unsigned int lastCommunicationTimeLo;
        unsigned int lastUpdateSinceCaptured;
        unsigned char OpenGLScalingSupported;
        unsigned char gotNormalUpdate;
        unsigned char updateEncryptionInfoFlag;
        unsigned int encryptionMethod;
        unsigned short encryptionLevel;
        unsigned char newAESkey[16];
        unsigned char newIV[16];
        unsigned char encryptEverythingReceivedFlag;
        unsigned char encryptEverythingSentFlag;
        unsigned char IVsend[16];
        unsigned char IVreceive[16];
        unsigned int messageIndex;
        unsigned int messageIndexReceive;
        char *decryptedMessagePtr;
        char *encryptedMessagePtr;
        struct __CFString *addressString;
        struct MVSInfo multiVariantInfo;
        CDStruct_183601bc *encryptedData;
        struct CachedCursor *knownCursors;
        char *screenReadBuffer;
        unsigned int screenReadBufferSize;
        struct Rect currentGlobalRect;
        struct RFBSenderInfoUDP *sendInfo;
        struct RFBReceiverInfoUDP *receiveInfo;
        struct ZRLEInfo zrle;
        struct ScaledScreenInfo scaledScreen[25];
        unsigned char lowLatencyConnectionFlag;
        unsigned char serialNumberAuthFlag;
        unsigned char vfbFlag;
        char unused2;
        unsigned int authenticationUID;
        struct ViewerInfo info;
        unsigned int lastWriteTime;
        unsigned char postedMouseEvent;
        unsigned char displayChangeFlag;
        unsigned char disableMVSCacheFlag;
        unsigned char sendNextUpdateFlag;
        unsigned char dsDisplayStreamScaled[25];
        NSObject<OS_dispatch_semaphore> *dsSemaphore;
        unsigned char dsStopped[25];
        short dsTop[25];
        short dsLeft[25];
        int dsStoppedLock;
        unsigned short dsRefCount;
        NSObject<OS_dispatch_queue> *dsQueue;
        void *dsCR;
        unsigned int viewerIndex;
        unsigned int screenUpdateCount;
        unsigned int pendingLimitTCP;
        unsigned int estimatedBytesPerSecondTCP;
        _Bool closingTheConnection;
        unsigned char userOnlyAllowsObserveFlag;
        unsigned char invitedSessionFlag;
        unsigned char AppleCare;
        unsigned char AppleID;
        void *sysInfoNotificationRef;
        void *controlNotificationRef;
        char *sysInfoArguements;
        CDStruct_183601bc *sysInfoRequest;
        void *sysInfoRequestCR;
        _Bool AppleCareAllowedToGetSysstemInfoFlag;
        NSObject<OS_xpc_object> *xpcConnection;
        struct __CFRunLoopTimer *keepAliveTimerRef;
        unsigned int lowWaterMarkAmount;
        int lowWaterMarkKqueue;
        struct kevent lowWaterMarkKevent;
        unsigned char sentFirstScreen;
        unsigned int lastSecondaryUpdateTick;
        unsigned char srpStep;
        unsigned long long srpStartMachTime;
        unsigned char monitoringTouchEvents;
    } viewer;	// 152 = 0x98
    NSObject<OS_dispatch_semaphore> *_readyToAuthSemaphore;	// 3248 = 0xcb0
    char *_lastTouchInfo;	// 3256 = 0xcb8
    int _lastTouchInfoSize;	// 3264 = 0xcc0
    _Bool _screenLocked;	// 3268 = 0xcc4
}

@property _Bool screenLocked; // @synthesize screenLocked=_screenLocked;
- (void)handleTouchEventUpdate;	// IMP=0x000000010001cf78
- (void)notificationHandler:(id)arg1;	// IMP=0x000000010001cf1c
- (void)consumeMessage;	// IMP=0x000000010001aee0
- (void)updateFB;	// IMP=0x000000010001aedc
- (void)userRequestResult:(int)arg1 senderToken:(unsigned int)arg2;	// IMP=0x000000010001ac90
- (void)termsAndConditionsAccepted;	// IMP=0x000000010001ab30
- (void)sendScreenLockChangeMessage:(unsigned long long)arg1;	// IMP=0x000000010001a9e4
- (void)sendPauseMessage:(unsigned long long)arg1;	// IMP=0x000000010001a774
- (void)stopUDPSend;	// IMP=0x000000010001a5dc
- (void)startWithClient:(int)arg1 NWConnectionManager:(void *)arg2;	// IMP=0x000000010001a26c
- (void)HandleIncomingData:(char *)arg1 dataSize:(unsigned int)arg2;	// IMP=0x000000010001a21c
- (void)invalidate;	// IMP=0x000000010001a1f0
- (long long)writeData:(const void *)arg1 length:(unsigned long long)arg2;	// IMP=0x0000000100019f30
- (void)dealloc;	// IMP=0x0000000100019eb4
- (id)init;	// IMP=0x0000000100019e74

@end

