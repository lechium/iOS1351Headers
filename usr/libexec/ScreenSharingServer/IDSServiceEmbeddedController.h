//
//     Generated by classdumpios 1.0.1 (64 bit) (iOS port by DreamDevLost)(Debug version compiled Sep 26 2020 13:48:20).
//
//  Copyright (C) 1997-2019 Steve Nygard.
//

#import <objc/NSObject.h>

#import "IDSIDQueryControllerDelegate-Protocol.h"
#import "IDSServiceDelegate-Protocol.h"
#import "NSURLSessionDelegate-Protocol.h"
#import "ViewServiceHelperDelegate-Protocol.h"

@class IDSService, IDSSessionEmbeddedControllerBase, NSData, NSDate, NSMutableDictionary, NSString, NSTimer, SBSAssertion, SBSStatusBarStyleOverridesAssertion, ViewServiceHelper;
@protocol OS_dispatch_semaphore, OS_os_transaction, SSUserResponseDelegate;

@interface IDSServiceEmbeddedController : NSObject <IDSIDQueryControllerDelegate, NSURLSessionDelegate, IDSServiceDelegate, ViewServiceHelperDelegate>
{
    NSObject<OS_dispatch_semaphore> *url_sem;	// 8 = 0x8
    SBSStatusBarStyleOverridesAssertion *_doubleHeightStatusBarAssertion;	// 16 = 0x10
    NSObject<OS_os_transaction> *_osTransaction;	// 24 = 0x18
    int _osTransactionLock;	// 32 = 0x20
    int _lockScreenNotifierToken;	// 36 = 0x24
    _Bool _sessionPaused;	// 40 = 0x28
    _Bool _screenPausedBeforeLock;	// 41 = 0x29
    _Bool _askToResumeTimedOut;	// 42 = 0x2a
    _Bool _askToCopyToPasteboardTimedOut;	// 43 = 0x2b
    _Bool _showUserMessageTimedOut;	// 44 = 0x2c
    _Bool _showViewerPausedTimedOut;	// 45 = 0x2d
    _Bool _askToOpenURLTimedOut;	// 46 = 0x2e
    _Bool _screenLocked;	// 47 = 0x2f
    int viewServicePID;	// 48 = 0x30
    unsigned int _askToResumeToken;	// 52 = 0x34
    unsigned int _askToCopyToPasteboardToken;	// 56 = 0x38
    unsigned int _askToOpenURLToken;	// 60 = 0x3c
    IDSService *_idsService;	// 64 = 0x40
    NSData *urlResponseData;	// 72 = 0x48
    NSString *validationURL;	// 80 = 0x50
    IDSSessionEmbeddedControllerBase *_pendingSession;	// 88 = 0x58
    NSString *_idsIDQueryListenerID;	// 96 = 0x60
    IDSSessionEmbeddedControllerBase *_idsSessionController;	// 104 = 0x68
    NSMutableDictionary *_activeSessions;	// 112 = 0x70
    ViewServiceHelper *_vsHelper;	// 120 = 0x78
    NSTimer *_exitTimer;	// 128 = 0x80
    SBSAssertion *_wallpaperSuspensionAssertion;	// 136 = 0x88
    struct __CFUserNotification *_askToResumeNotification;	// 144 = 0x90
    NSTimer *_askToResumeTimeoutTimer;	// 152 = 0x98
    NSDate *_notificationStartTime;	// 160 = 0xa0
    id <SSUserResponseDelegate> _askToResumeDelegate;	// 168 = 0xa8
    id <SSUserResponseDelegate> _askToCopyToPasteboardDelegate;	// 176 = 0xb0
    NSString *_askToCopyToPasteboardUserMessage;	// 184 = 0xb8
    struct __CFUserNotification *_askToCopyToPasteboardNotification;	// 192 = 0xc0
    NSTimer *_askToCopyToPasteboardTimeoutTimer;	// 200 = 0xc8
    NSString *_showUserMessage;	// 208 = 0xd0
    NSTimer *_showUserMessageTimeoutTimer;	// 216 = 0xd8
    struct __CFUserNotification *_showUserMessageNotification;	// 224 = 0xe0
    NSTimer *_showViewerPausedTimeoutTimer;	// 232 = 0xe8
    struct __CFUserNotification *_showViewerPausedNotification;	// 240 = 0xf0
    NSString *_urlToOpen;	// 248 = 0xf8
    NSTimer *_askToOpenURLTimeoutTimer;	// 256 = 0x100
    struct __CFUserNotification *_askToOpenURLNotification;	// 264 = 0x108
    id <SSUserResponseDelegate> _askToOpenURLDelegate;	// 272 = 0x110
}

+ (id)sharedIDServiceController;	// IMP=0x0000000100005f94
@property _Bool screenLocked; // @synthesize screenLocked=_screenLocked;
@property id <SSUserResponseDelegate> askToOpenURLDelegate; // @synthesize askToOpenURLDelegate=_askToOpenURLDelegate;
@property unsigned int askToOpenURLToken; // @synthesize askToOpenURLToken=_askToOpenURLToken;
@property struct __CFUserNotification *askToOpenURLNotification; // @synthesize askToOpenURLNotification=_askToOpenURLNotification;
@property(retain) NSTimer *askToOpenURLTimeoutTimer; // @synthesize askToOpenURLTimeoutTimer=_askToOpenURLTimeoutTimer;
@property _Bool askToOpenURLTimedOut; // @synthesize askToOpenURLTimedOut=_askToOpenURLTimedOut;
@property(retain) NSString *urlToOpen; // @synthesize urlToOpen=_urlToOpen;
@property struct __CFUserNotification *showViewerPausedNotification; // @synthesize showViewerPausedNotification=_showViewerPausedNotification;
@property(retain) NSTimer *showViewerPausedTimeoutTimer; // @synthesize showViewerPausedTimeoutTimer=_showViewerPausedTimeoutTimer;
@property _Bool showViewerPausedTimedOut; // @synthesize showViewerPausedTimedOut=_showViewerPausedTimedOut;
@property struct __CFUserNotification *showUserMessageNotification; // @synthesize showUserMessageNotification=_showUserMessageNotification;
@property(retain) NSTimer *showUserMessageTimeoutTimer; // @synthesize showUserMessageTimeoutTimer=_showUserMessageTimeoutTimer;
@property _Bool showUserMessageTimedOut; // @synthesize showUserMessageTimedOut=_showUserMessageTimedOut;
@property(retain) NSString *showUserMessage; // @synthesize showUserMessage=_showUserMessage;
@property _Bool askToCopyToPasteboardTimedOut; // @synthesize askToCopyToPasteboardTimedOut=_askToCopyToPasteboardTimedOut;
@property(retain) NSTimer *askToCopyToPasteboardTimeoutTimer; // @synthesize askToCopyToPasteboardTimeoutTimer=_askToCopyToPasteboardTimeoutTimer;
@property struct __CFUserNotification *askToCopyToPasteboardNotification; // @synthesize askToCopyToPasteboardNotification=_askToCopyToPasteboardNotification;
@property(retain) NSString *askToCopyToPasteboardUserMessage; // @synthesize askToCopyToPasteboardUserMessage=_askToCopyToPasteboardUserMessage;
@property unsigned int askToCopyToPasteboardToken; // @synthesize askToCopyToPasteboardToken=_askToCopyToPasteboardToken;
@property id <SSUserResponseDelegate> askToCopyToPasteboardDelegate; // @synthesize askToCopyToPasteboardDelegate=_askToCopyToPasteboardDelegate;
@property unsigned int askToResumeToken; // @synthesize askToResumeToken=_askToResumeToken;
@property id <SSUserResponseDelegate> askToResumeDelegate; // @synthesize askToResumeDelegate=_askToResumeDelegate;
@property(retain) NSDate *notificationStartTime; // @synthesize notificationStartTime=_notificationStartTime;
@property _Bool askToResumeTimedOut; // @synthesize askToResumeTimedOut=_askToResumeTimedOut;
@property(retain) NSTimer *askToResumeTimeoutTimer; // @synthesize askToResumeTimeoutTimer=_askToResumeTimeoutTimer;
@property struct __CFUserNotification *askToResumeNotification; // @synthesize askToResumeNotification=_askToResumeNotification;
@property _Bool screenPausedBeforeLock; // @synthesize screenPausedBeforeLock=_screenPausedBeforeLock;
@property(retain) SBSAssertion *wallpaperSuspensionAssertion; // @synthesize wallpaperSuspensionAssertion=_wallpaperSuspensionAssertion;
@property(retain) NSTimer *exitTimer; // @synthesize exitTimer=_exitTimer;
@property(retain) ViewServiceHelper *vsHelper; // @synthesize vsHelper=_vsHelper;
@property _Bool sessionPaused; // @synthesize sessionPaused=_sessionPaused;
@property(retain) NSMutableDictionary *activeSessions; // @synthesize activeSessions=_activeSessions;
@property(retain) IDSSessionEmbeddedControllerBase *idsSessionController; // @synthesize idsSessionController=_idsSessionController;
@property(copy) NSString *idsIDQueryListenerID; // @synthesize idsIDQueryListenerID=_idsIDQueryListenerID;
@property int viewServicePID; // @synthesize viewServicePID;
@property(retain) IDSSessionEmbeddedControllerBase *pendingSession; // @synthesize pendingSession=_pendingSession;
@property(retain) NSString *validationURL; // @synthesize validationURL;
@property(retain) NSData *urlResponseData; // @synthesize urlResponseData;
@property(retain) IDSService *idsService; // @synthesize idsService=_idsService;
- (void)dealloc;	// IMP=0x00000001000101a0
- (void)pidNotification:(id)arg1;	// IMP=0x0000000100010074
- (void)termsAndConditionsResult:(id)arg1;	// IMP=0x000000010000ff54
- (void)sessionState:(id)arg1;	// IMP=0x000000010000fd18
- (void)pauseResumeResult:(id)arg1;	// IMP=0x000000010000f9a4
- (void)pauseScreenSharing:(_Bool)arg1;	// IMP=0x000000010000f884
- (void)pauseScreenSharing:(_Bool)arg1 pausingDueToScreenLock:(_Bool)arg2;	// IMP=0x000000010000f42c
- (void)removeViewerPausedNotification;	// IMP=0x000000010000f1e8
- (void)showViewerPausedTimeout:(id)arg1;	// IMP=0x000000010000f140
- (void)postViewerPausedMessageNotification;	// IMP=0x000000010000e9ec
- (void)removeShowUserMessageNotification;	// IMP=0x000000010000e7a8
- (void)showUserMessageTimeout:(id)arg1;	// IMP=0x000000010000e700
- (void)postShowUserMessageNotification;	// IMP=0x000000010000db64
- (void)showMessageToUser:(id)arg1;	// IMP=0x000000010000dabc
- (void)removeUserAskToResumeNotification;	// IMP=0x000000010000d87c
- (void)askToResumeTimeout:(id)arg1;	// IMP=0x000000010000d7d4
- (void)postAskToResumeNotification;	// IMP=0x000000010000c8a8
- (void)postAskToResumeNotification:(id)arg1 senderToken:(unsigned int)arg2;	// IMP=0x000000010000c85c
- (void)removeAskToOpenURLNotification;	// IMP=0x000000010000c618
- (void)askToOpenURLTimeout:(id)arg1;	// IMP=0x000000010000c570
- (void)postAskToOpenURLNotification;	// IMP=0x000000010000b74c
- (void)askToOpenURL:(id)arg1 senderToken:(unsigned int)arg2 URL:(id)arg3;	// IMP=0x000000010000b4c8
- (void)removeAskToCopyToPasteboardNotification;	// IMP=0x000000010000b284
- (void)askToToCopyToPasteboardTimeout:(id)arg1;	// IMP=0x000000010000b1dc
- (void)postAskToCopyToPasteboardNotification;	// IMP=0x000000010000a480
- (void)askToCopyToPasteboard:(id)arg1 senderToken:(unsigned int)arg2 message:(id)arg3;	// IMP=0x000000010000a3b4
- (void)sendLockScreenChangeMessageToAllSessions:(_Bool)arg1;	// IMP=0x000000010000a208
- (void)createLockScreenNotifier;	// IMP=0x0000000100009d08
- (void)createStatusBar;	// IMP=0x0000000100009a10
- (id)activeViewerStatusString;	// IMP=0x00000001000098c8
- (void)checkIfNoSessions;	// IMP=0x00000001000095b0
- (void)exitTimerCallback:(id)arg1;	// IMP=0x0000000100009454
- (void)closeAllSessions;	// IMP=0x0000000100009328
- (void)removeSession:(id)arg1 andEndIDSSession:(_Bool)arg2;	// IMP=0x0000000100009150
- (void)addActiveSession:(id)arg1;	// IMP=0x0000000100008eb8
- (id)datagramConnectionFromIDS:(id)arg1;	// IMP=0x0000000100008e14
- (_Bool)validateRedwoodRequestDictionary:(id)arg1 account:(id)arg2 fromID:(id)arg3 error:(id *)arg4;	// IMP=0x0000000100008358
- (void)URLSession:(id)arg1 task:(id)arg2 didCompleteWithError:(id)arg3;	// IMP=0x000000010000824c
- (void)URLSession:(id)arg1 dataTask:(id)arg2 didReceiveData:(id)arg3;	// IMP=0x000000010000823c
- (void)URLSession:(id)arg1 didReceiveChallenge:(id)arg2 completionHandler:(CDUnknownBlockType)arg3;	// IMP=0x0000000100007edc
- (void)serviceAllowedTrafficClassifiersDidReset:(id)arg1;	// IMP=0x0000000100007e50
- (void)serviceSpaceDidBecomeAvailable:(id)arg1;	// IMP=0x0000000100007dc4
- (void)service:(id)arg1 account:(id)arg2 inviteReceivedForSession:(id)arg3 fromID:(id)arg4 withContext:(id)arg5;	// IMP=0x000000010000694c
- (void)service:(id)arg1 account:(id)arg2 identifier:(id)arg3 hasBeenDeliveredWithContext:(id)arg4;	// IMP=0x00000001000068c0
- (void)service:(id)arg1 account:(id)arg2 identifier:(id)arg3 didSendWithSuccess:(_Bool)arg4 error:(id)arg5 context:(id)arg6;	// IMP=0x00000001000067cc
- (void)service:(id)arg1 account:(id)arg2 identifier:(id)arg3 didSendWithSuccess:(_Bool)arg4 error:(id)arg5;	// IMP=0x00000001000066d8
- (void)service:(id)arg1 nearbyDevicesChanged:(id)arg2;	// IMP=0x000000010000664c
- (void)service:(id)arg1 devicesChanged:(id)arg2;	// IMP=0x00000001000065c0
- (void)service:(id)arg1 activeAccountsChanged:(id)arg2;	// IMP=0x0000000100006534
- (void)service:(id)arg1 account:(id)arg2 incomingResourceAtURL:(id)arg3 metadata:(id)arg4 fromID:(id)arg5 context:(id)arg6;	// IMP=0x00000001000064a8
- (void)service:(id)arg1 account:(id)arg2 incomingResourceAtURL:(id)arg3 fromID:(id)arg4 context:(id)arg5;	// IMP=0x000000010000641c
- (void)service:(id)arg1 account:(id)arg2 incomingUnhandledProtobuf:(id)arg3 fromID:(id)arg4 context:(id)arg5;	// IMP=0x0000000100006390
- (void)service:(id)arg1 account:(id)arg2 incomingData:(id)arg3 fromID:(id)arg4 context:(id)arg5;	// IMP=0x0000000100006304
- (void)service:(id)arg1 account:(id)arg2 incomingMessage:(id)arg3 fromID:(id)arg4 context:(id)arg5;	// IMP=0x0000000100006278
- (void)initScreenSharingIDSService;	// IMP=0x00000001000060f4
- (id)init;	// IMP=0x0000000100006044

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

