//
//     Generated by classdumpios 1.0.1 (64 bit) (iOS port by DreamDevLost)(Debug version compiled Sep 26 2020 13:48:20).
//
//  Copyright (C) 1997-2019 Steve Nygard.
//

#pragma mark Blocks

typedef void (^CDUnknownBlockType)(void); // return type and parameters are unknown

#pragma mark Named Structures

struct ARDBigNum;

struct CGPoint {
    double _field1;
    double _field2;
};

struct CGRect {
    struct CGPoint _field1;
    struct CGSize _field2;
};

struct CGSize {
    double _field1;
    double _field2;
};

struct CachedCursor;

struct MVSCacheEntryInfo;

struct MVSCoefficeintInfo;

struct MVSInfo {
    unsigned short width;
    unsigned short height;
    unsigned short lastCache;
    unsigned short lastTile;
    unsigned int tileRepeatCount;
    unsigned short tilesPerRow;
    short startVertical;
    struct Rect secondaryUpdateRect;
    unsigned char secondaryUpdateFlag;
    unsigned char screenChangeFlag;
    struct Rect screenChangeRect;
    struct Rect lastSecondaryUpdateRect;
    unsigned char lastSecondaryUpdateRectFlag;
    unsigned char lastSecondaryUpdateRectIgnoredFlag;
    char unused[2];
    unsigned int lastSecondaryUpdateRectTime;
    struct Point lastMouse;
    unsigned short mouseDelta;
    char *buff;
    char *buffSecondRow;
    void *DCTstate;
    unsigned char sentFirstUpdate;
    struct MVSCoefficeintInfo *tiles;
    struct {
        struct MVSCacheEntryInfo *cache;
        unsigned short lastCacheMatch;
        unsigned short cacheIndex;
        unsigned int cacheTotalEntryCount;
        unsigned short *hashTable;
        unsigned int cacheMiss;
        unsigned int cacheHit;
        unsigned int hashCollision;
        unsigned int cacheHitInc;
        int cacheDisabledFlag;
    } cacheInfo;
};

struct Point {
    short v;
    short h;
};

struct RFBAssistCursorV2Info {
    unsigned char _field1;
    unsigned char _field2;
    double _field3;
    double _field4;
};

struct RFBReceiverInfoUDP;

struct RFBSenderInfoUDP;

struct Rect {
    short top;
    short left;
    short bottom;
    short right;
};

struct ScaledScreenInfo;

struct ScreenChangeInfo;

struct SubZlibCodecInfo {
    unsigned char initializedFlag;
    char unused;
    struct z_stream_s stream;
};

struct TouchEventInfo {
    double _field1;
    double _field2;
    double _field3;
    int _field4;
};

struct UnsignedWide {
    unsigned int lo;
    unsigned int hi;
};

struct UserInfoEncoding {
    unsigned char sendUserInfoFlag;
    unsigned char updateUserInfoFlag;
    struct z_stream_s zlib_stream;
};

struct ViewerInfo {
    int viewerInfoSet;
    unsigned int appID;
    unsigned int appMajorVersion;
    unsigned int appMinorVersion;
    unsigned int appBugFixVersion;
    unsigned int OSMajorVersion;
    unsigned int OSMinorVersion;
    unsigned int OSBugFixVersion;
    unsigned char supportedCommands[32];
};

struct ZRLEInfo {
    struct SubZlibCodecInfo zinfo;
    char *screenBuffer;
    unsigned int screenBufferSize;
    unsigned int compressedScreenSize;
};

struct _CCCryptor;

struct in6_addr {
    union {
        unsigned char __u6_addr8[16];
        unsigned short __u6_addr16[8];
        unsigned int __u6_addr32[4];
    } __u6_addr;
};

struct internal_state;

struct kevent {
    unsigned long long ident;
    short filter;
    unsigned short flags;
    unsigned int fflags;
    long long data;
    void *udata;
};

struct sockaddr_in6 {
    unsigned char sin6_len;
    unsigned char sin6_family;
    unsigned short sin6_port;
    unsigned int sin6_flowinfo;
    struct in6_addr sin6_addr;
    unsigned int sin6_scope_id;
};

struct z_stream_s {
    char *next_in;
    unsigned int avail_in;
    unsigned long long total_in;
    char *next_out;
    unsigned int avail_out;
    unsigned long long total_out;
    char *msg;
    struct internal_state *state;
    CDUnknownFunctionPointerType zalloc;
    CDUnknownFunctionPointerType zfree;
    void *opaque;
    int data_type;
    unsigned long long adler;
    unsigned long long reserved;
};

#pragma mark Typedef'd Structures

typedef struct CDStruct_183601bc;

