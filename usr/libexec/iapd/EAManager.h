//
//     Generated by classdumpios 1.0.1 (64 bit) (iOS port by DreamDevLost)(Debug version compiled Sep 26 2020 13:48:20).
//
//  Copyright (C) 1997-2019 Steve Nygard.
//

#import <objc/NSObject.h>

@class IAPApplicationStateMonitor, NSLock, NSMutableDictionary;

@interface EAManager : NSObject
{
    NSMutableDictionary *_connectedAccessories;	// 8 = 0x8
    struct map<unsigned int, NSNumber *, std::__1::less<unsigned int>, std::__1::allocator<std::__1::pair<const unsigned int, NSNumber *>>> _connectionIDMap;	// 16 = 0x10
    NSLock *_connectedAccessoriesLock;	// 40 = 0x28
    _Bool _fakedLocationDeviceEnabled;	// 48 = 0x30
    _Bool _fakedLocationDeviceFilteringSupport;	// 49 = 0x31
    NSMutableDictionary *_clients;	// 56 = 0x38
    NSLock *_clientLock;	// 64 = 0x40
    IAPApplicationStateMonitor *_appStateMonitor;	// 72 = 0x48
}

+ (void)_updatePlistWithAccessoryProtocolsInternal:(id)arg1;	// IMP=0x0000000100008e28
+ (id)newPlistForAccessory:(id)arg1;	// IMP=0x0000000100001ed8
+ (id)stringForClientID:(unsigned int)arg1;	// IMP=0x0000000100001ea0
+ (id)sharedManager;	// IMP=0x0000000100001d00
- (id).cxx_construct;	// IMP=0x0000000100008eb4
- (void).cxx_destruct;	// IMP=0x0000000100008ea0
@property(nonatomic) _Bool fakedLocationDeviceFilteringSupport; // @synthesize fakedLocationDeviceFilteringSupport=_fakedLocationDeviceFilteringSupport;
- (void)updatePlistWithProtocolsForAccessory:(id)arg1;	// IMP=0x0000000100008de0
- (_Bool)_isProtocolContainedInWhitelist:(id)arg1;	// IMP=0x0000000100008d10
- (void)_unregisteredClientAssertionTimerFired:(id)arg1;	// IMP=0x0000000100008c98
- (void)_takeClientAssertionsForAccessoryDisconnection;	// IMP=0x0000000100008b08
- (void)_takeClientAssertionsForAccessoryConnection;	// IMP=0x0000000100008948
- (void)_dpServiceWithFirmwareVersionFound:(id)arg1;	// IMP=0x00000001000086fc
- (void)takeProcessAssertionForBundleID:(id)arg1;	// IMP=0x00000001000085f8
- (void)applicationStateChanged:(id)arg1;	// IMP=0x0000000100007de4
- (void)_shouldPostNoAppAlert:(id)arg1;	// IMP=0x0000000100007938
- (void)setFakedLocationDeviceEnabled:(_Bool)arg1 forClientID:(unsigned int)arg2;	// IMP=0x0000000100007614
- (_Bool)isFakedLocationDeviceEnabled;	// IMP=0x00000001000075fc
- (void)fakedLocationDeviceFilteringSupport:(_Bool)arg1;	// IMP=0x000000010000758c
- (void)fakedLocationDeviceSetFilter:(id)arg1;	// IMP=0x00000001000073c0
- (void)fakedLocationRequestGPSTime;	// IMP=0x000000010000735c
- (void)fakedLocationDeviceEphemerisRefreshIntervalAvailable;	// IMP=0x00000001000072f8
- (void)fakedLocationDeviceEphemerisMaxIntervalAvailable;	// IMP=0x0000000100007294
- (void)fakedLocationDeviceEphemerisURLAvailable;	// IMP=0x0000000100007230
- (void)fakedLocationDevicePointDataAvailable;	// IMP=0x00000001000071cc
- (void)fakedLocationDeviceNMEAAvailable;	// IMP=0x0000000100007168
- (id)connectedAccessoriesForEAClient:(unsigned int)arg1;	// IMP=0x0000000100006ef0
- (id)connectedAccessories;	// IMP=0x0000000100006e58
- (_Bool)closeSessionForConnectionID:(unsigned int)arg1 sessionID:(unsigned short)arg2 notifyApp:(_Bool)arg3;	// IMP=0x0000000100006c70
- (void)openCompleteForSessionWithConnectionID:(unsigned int)arg1 sessionID:(unsigned short)arg2;	// IMP=0x0000000100006bb4
- (_Bool)openSessionForClientID:(unsigned int)arg1 connetionID:(unsigned int)arg2 protocolID:(unsigned char)arg3 sessionID:(unsigned short *)arg4;	// IMP=0x000000010000677c
- (id)sessionForAccessoryWithConnectionID:(unsigned int)arg1 andSessionID:(unsigned short)arg2;	// IMP=0x000000010000670c
- (id)accessoryForConnectionID:(id)arg1;	// IMP=0x00000001000066ec
- (void)reset;	// IMP=0x0000000100006590
- (void)detachAccessory:(unsigned int)arg1;	// IMP=0x0000000100006238
- (id)valueForProperty:(id)arg1 forAccessory:(unsigned int)arg2;	// IMP=0x0000000100006184
- (void)updateValueFromApp:(id)arg1;	// IMP=0x0000000100005e20
- (void)updateValueFromIap:(id)arg1 forPort:(id)arg2 andPortPorperty:(id)arg3 forAccessory:(unsigned int)arg4 updateApp:(_Bool)arg5;	// IMP=0x0000000100005c24
- (void)updateValueFromIap:(id)arg1 forPort:(id)arg2 andPortPorperty:(id)arg3 forAccessory:(unsigned int)arg4;	// IMP=0x0000000100005c14
- (void)updateLocationSupport:(unsigned int)arg1 isReady:(_Bool)arg2;	// IMP=0x0000000100005acc
- (void)updateSpeakerEqIndex:(unsigned int)arg1 eqIndex:(unsigned int)arg2;	// IMP=0x00000001000059c8
- (void)updateSpeakerMenu:(unsigned int)arg1 withEqNames:(id)arg2 andSelection:(unsigned int)arg3;	// IMP=0x000000010000586c
- (void)updateAccessoryInfo:(const struct IPodAccessoryDetails *)arg1;	// IMP=0x0000000100005478
- (void)updateAccessoryProtocols:(const struct IPodAccessoryDetails *)arg1;	// IMP=0x0000000100005004
- (void)attachAccessory:(const struct IPodAccessoryDetails *)arg1 forTransport:(struct IPodTransport *)arg2;	// IMP=0x0000000100003688
- (_Bool)sessionsOpenForDisplayIdentifer:(const char *)arg1;	// IMP=0x0000000100003398
- (unsigned int)clientIDForDisplayIdentifier:(const char *)arg1;	// IMP=0x00000001000031ac
- (void)removeAllClients;	// IMP=0x0000000100002c58
- (void)removeClientForXPCConnection:(id)arg1;	// IMP=0x00000001000027f4
- (unsigned int)addClient:(unsigned int)arg1 withAuditToken:(CDStruct_4c969caf)arg2 currentClientID:(unsigned int)arg3 xpcConnection:(id)arg4 eaProtocols:(id)arg5 notifyOfAlreadyConnectedAccessories:(_Bool)arg6 andBundleId:(id)arg7;	// IMP=0x0000000100002314
- (id)connectionIDObjectForConnectionID:(unsigned int)arg1;	// IMP=0x000000010000226c
- (void)logAccessoryDetach:(id)arg1 reason:(id)arg2;	// IMP=0x0000000100002144
- (void)logAccessoryAttach:(id)arg1 reason:(id)arg2;	// IMP=0x0000000100002004
- (unsigned int)generateClientID;	// IMP=0x0000000100001f74
- (void)dealloc;	// IMP=0x0000000100001b7c
- (id)init;	// IMP=0x0000000100001a60
- (void)notifyEAClientsOfAccessoryReconnection:(id)arg1;	// IMP=0x0000000100017020
- (void)notifyEAClientsOfAccessoryDisconnection:(id)arg1;	// IMP=0x0000000100017008
- (void)notifyEAClientsOfAccessoryConnection:(id)arg1;	// IMP=0x0000000100016ff0
- (void)notifyEAClientsOfAccessoryEvent:(const char *)arg1 accessory:(id)arg2;	// IMP=0x0000000100016e48
- (void)notifyEAClient:(id)arg1 ofAccessoryEvent:(const char *)arg2 accessory:(id)arg3;	// IMP=0x0000000100016d00

@end

