//
//     Generated by classdumpios 1.0.1 (64 bit) (iOS port by DreamDevLost)(Debug version compiled Sep 26 2020 13:48:20).
//
//  Copyright (C) 1997-2019 Steve Nygard.
//

#pragma mark Blocks

typedef void (^CDUnknownBlockType)(void); // return type and parameters are unknown

#pragma mark Named Structures

struct AuthPortInfo_t;

struct CIapPacket;

struct EAPacket {
    CDUnknownFunctionPointerType *_field1;
    struct IPodTransport *_field2;
    unsigned int _field3;
    char *_field4;
    char *_field5;
    char *_field6;
    unsigned int _field7;
    unsigned int _field8;
    unsigned int _field9;
    unsigned int _field10;
    int _field11;
    unsigned int _field12;
    unsigned long long _field13;
    unsigned long long _field14;
    unsigned int _field15;
    char *_field16;
    char *_field17;
    char *_field18;
    unsigned short _field19;
    unsigned short _field20;
    unsigned short _field21;
    unsigned short _field22;
    unsigned short _field23;
    unsigned char _field24;
    unsigned char _field25;
    unsigned char _field26;
    unsigned char _field27;
    unsigned char _field28;
    struct WorkItem *_field29;
    unsigned int _field30;
    unsigned int _field31;
    unsigned int _field32;
    unsigned short _field33;
};

struct IPodAccessoryDetails {
    CDUnknownFunctionPointerType *_field1;
};

struct IPodEventSender {
    CDUnknownFunctionPointerType *_field1;
};

struct IPodTransport {
    CDUnknownFunctionPointerType *_field1;
    unsigned short _field2;
    unsigned int _field3;
    _Bool _field4;
    struct AuthPortInfo_t *_field5;
    struct PortInfo_t *_field6;
    struct IPodTransport *_field7;
    struct set<MACAddress_t, std::__1::less<MACAddress_t>, std::__1::allocator<MACAddress_t>> _field8;
    _Bool _field9;
};

struct IapTransport {
    CDUnknownFunctionPointerType *_field1;
    unsigned short _field2;
    unsigned int _field3;
    _Bool _field4;
    struct AuthPortInfo_t *_field5;
    struct PortInfo_t *_field6;
    struct IPodTransport *_field7;
    struct set<MACAddress_t, std::__1::less<MACAddress_t>, std::__1::allocator<MACAddress_t>> _field8;
    _Bool _field9;
    unsigned int _field10;
    int _field11;
    int _field12;
    _Bool _field13;
    _Bool _field14;
    int _field15;
    unsigned long long _field16;
    int _field17;
    struct CIapPacket *_field18;
    unsigned long long _field19;
    struct MACAddress_t _field20;
    id _field21;
};

struct MACAddress_t {
    unsigned char _field1[6];
};

struct PortInfo_t;

struct WorkItem;

struct _NSRange {
    unsigned long long location;
    unsigned long long length;
};

struct __tree_end_node<std::__1::__tree_node_base<void *>*> {
    struct __tree_node_base<void *> *__left_;
};

struct map<unsigned int, NSNumber *, std::__1::less<unsigned int>, std::__1::allocator<std::__1::pair<const unsigned int, NSNumber *>>> {
    struct __tree<std::__1::__value_type<unsigned int, NSNumber *>, std::__1::__map_value_compare<unsigned int, std::__1::__value_type<unsigned int, NSNumber *>, std::__1::less<unsigned int>, true>, std::__1::allocator<std::__1::__value_type<unsigned int, NSNumber *>>> {
        struct __tree_end_node<std::__1::__tree_node_base<void *>*> *__begin_node_;
        struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *>*>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<unsigned int, NSNumber *>, void *>>> {
            struct __tree_end_node<std::__1::__tree_node_base<void *>*> __value_;
        } __pair1_;
        struct __compressed_pair<unsigned long, std::__1::__map_value_compare<unsigned int, std::__1::__value_type<unsigned int, NSNumber *>, std::__1::less<unsigned int>, true>> {
            unsigned long long __value_;
        } __pair3_;
    } __tree_;
};

struct map<unsigned short, IAPSession *, std::__1::less<unsigned short>, std::__1::allocator<std::__1::pair<const unsigned short, IAPSession *>>> {
    struct __tree<std::__1::__value_type<unsigned short, IAPSession *>, std::__1::__map_value_compare<unsigned short, std::__1::__value_type<unsigned short, IAPSession *>, std::__1::less<unsigned short>, true>, std::__1::allocator<std::__1::__value_type<unsigned short, IAPSession *>>> {
        struct __tree_end_node<std::__1::__tree_node_base<void *>*> *__begin_node_;
        struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *>*>, std::__1::allocator<std::__1::__tree_node<std::__1::__value_type<unsigned short, IAPSession *>, void *>>> {
            struct __tree_end_node<std::__1::__tree_node_base<void *>*> __value_;
        } __pair1_;
        struct __compressed_pair<unsigned long, std::__1::__map_value_compare<unsigned short, std::__1::__value_type<unsigned short, IAPSession *>, std::__1::less<unsigned short>, true>> {
            unsigned long long __value_;
        } __pair3_;
    } __tree_;
};

struct set<MACAddress_t, std::__1::less<MACAddress_t>, std::__1::allocator<MACAddress_t>> {
    struct __tree<MACAddress_t, std::__1::less<MACAddress_t>, std::__1::allocator<MACAddress_t>> {
        struct __tree_end_node<std::__1::__tree_node_base<void *>*> *_field1;
        struct __compressed_pair<std::__1::__tree_end_node<std::__1::__tree_node_base<void *>*>, std::__1::allocator<std::__1::__tree_node<MACAddress_t, void *>>> {
            struct __tree_end_node<std::__1::__tree_node_base<void *>*> _field1;
        } _field2;
        struct __compressed_pair<unsigned long, std::__1::less<MACAddress_t>> {
            unsigned long long _field1;
        } _field3;
    } _field1;
};

#pragma mark Typedef'd Structures

typedef struct {
    unsigned int val[8];
} CDStruct_4c969caf;

