//
//     Generated by classdumpios 1.0.1 (64 bit) (iOS port by DreamDevLost)(Debug version compiled Sep 26 2020 13:48:20).
//
//  Copyright (C) 1997-2019 Steve Nygard.
//

#import <CloudPhotoLibrary/CPLPlatformObject.h>

#import "CPLEngineStoreImplementation-Protocol.h"

@class CPLChangeSessionUpdate, CPLPrequeliteVariable, NSDate, NSMutableDictionary, NSMutableSet, NSObject, NSString, NSURL, PQLConnection;
@protocol OS_dispatch_queue;

@interface CPLPrequeliteStore : CPLPlatformObject <CPLEngineStoreImplementation>
{
    NSObject<OS_dispatch_queue> *_queue;	// 8 = 0x8
    PQLConnection *_db;	// 16 = 0x10
    NSURL *_dbURL;	// 24 = 0x18
    _Bool _configuringDB;	// 32 = 0x20
    NSMutableSet *_modifiedVariables;	// 40 = 0x28
    id _globalVariableCacheIdentifier;	// 48 = 0x30
    CPLPrequeliteVariable *_libraryVersionVar;	// 56 = 0x38
    CPLPrequeliteVariable *_userIdentifierVar;	// 64 = 0x40
    CPLPrequeliteVariable *_lastQuarantineCountReportDateVar;	// 72 = 0x48
    CPLPrequeliteVariable *_clientCacheIdentifierVar;	// 80 = 0x50
    CPLPrequeliteVariable *_clientCacheIdentifierAsKnownByClient;	// 88 = 0x58
    CPLPrequeliteVariable *_libraryCreationDateVar;	// 96 = 0x60
    CPLPrequeliteVariable *_changeSessionUpdateVar;	// 104 = 0x68
    CPLPrequeliteVariable *_libraryOptionsVar;	// 112 = 0x70
    CPLPrequeliteVariable *_shouldUpdateDisabledFeaturesVar;	// 120 = 0x78
    CPLPrequeliteVariable *_disabledFeaturesDataVar;	// 128 = 0x80
    _Bool _versionHasChanged;	// 136 = 0x88
    CPLPrequeliteVariable *_derivativesFilterVar;	// 144 = 0x90
    CPLPrequeliteVariable *_deactivatedVar;	// 152 = 0x98
    Class _userIdentifierClass;	// 160 = 0xa0
    NSObject<OS_dispatch_queue> *_isClientInSyncWithClientCacheQueue;	// 168 = 0xa8
    _Bool _isClientInSyncWithClientCache;	// 176 = 0xb0
    unsigned long long _resetOption;	// 184 = 0xb8
    NSString *_resetReason;	// 192 = 0xc0
    NSString *_wipeReason;	// 200 = 0xc8
    _Bool _needsToReset;	// 208 = 0xd0
    _Bool _reentrencyGuard;	// 209 = 0xd1
    _Bool _didWipeLibrary;	// 210 = 0xd2
    int _upgradeEventJournal;	// 212 = 0xd4
    _Bool _mustFix22666940;	// 216 = 0xd8
    _Bool _mustMigratePushQueue;	// 217 = 0xd9
    _Bool _checkConsistencyIfVersionHasChanged;	// 218 = 0xda
    _Bool _shouldProfile;	// 219 = 0xdb
    _Bool _showStatsForAllTransactions;	// 220 = 0xdc
    double _lastLongTransactionDate;	// 224 = 0xe0
    NSMutableDictionary *_transactionStatistics;	// 232 = 0xe8
    NSDate *_libraryCreationDate;	// 240 = 0xf0
}

- (void).cxx_destruct;	// IMP=0x0000000100033798
@property(readonly) NSDate *libraryCreationDate; // @synthesize libraryCreationDate=_libraryCreationDate;
- (_Bool)table:(id)arg1 hasColumnWithName:(id)arg2;	// IMP=0x0000000100033644
- (void)table:(id)arg1 enumerateCountGroupedByProperty:(id)arg2 block:(CDUnknownBlockType)arg3;	// IMP=0x00000001000334e8
- (void)table:(id)arg1 enumerateCountGroupedByUnsignedIntegerProperty:(id)arg2 block:(CDUnknownBlockType)arg3;	// IMP=0x000000010003339c
- (unsigned long long)table:(id)arg1 countOfRecordsMatchingQuery:(id)arg2;	// IMP=0x00000001000332e4
- (unsigned long long)tableCountOfRecords:(id)arg1;	// IMP=0x0000000100033248
- (_Bool)table:(id)arg1 hasRecordsMatchingQuery:(id)arg2;	// IMP=0x000000010003319c
- (_Bool)tableHasRecords:(id)arg1;	// IMP=0x000000010003310c
- (void)recordUpgradeEvent:(id)arg1 arguments:(char *)arg2;	// IMP=0x0000000100033028
- (void)recordUpgradeEvent:(id)arg1;	// IMP=0x0000000100032ff8
- (id)status;	// IMP=0x0000000100032bcc
- (void)writeTransactionDidFail;	// IMP=0x0000000100032a98
- (void)writeTransactionDidSucceed;	// IMP=0x0000000100032a80
- (void)wipeStoreAtNextOpeningWithReason:(id)arg1 completionBlock:(CDUnknownBlockType)arg2;	// IMP=0x0000000100032810
- (void)_deleteWipeReason;	// IMP=0x000000010003265c
- (id)wipeReason;	// IMP=0x00000001000325a0
- (id)_wipeStoreMarkerURL;	// IMP=0x00000001000324f8
- (_Bool)storeDerivativesFilter:(id)arg1 error:(id *)arg2;	// IMP=0x00000001000323a8
- (id)derivativesFilter;	// IMP=0x000000010003231c
- (id)disabledFeatures;	// IMP=0x000000010003224c
- (_Bool)storeDisabledFeatures:(id)arg1 error:(id *)arg2;	// IMP=0x000000010003212c
- (_Bool)setShouldUpdateDisabledFeaturesWithError:(id *)arg1;	// IMP=0x00000001000320ac
@property(readonly, nonatomic) _Bool shouldUpdateDisabledFeatures;
- (_Bool)storeChangeSessionUpdate:(id)arg1 error:(id *)arg2;	// IMP=0x0000000100031e88
@property(readonly, nonatomic) CPLChangeSessionUpdate *storedChangeSessionUpdate;
@property(readonly, nonatomic) _Bool hasStoredChangeSessionUpdate;
- (_Bool)isClientInSyncWithClientCache;	// IMP=0x0000000100031c20
- (_Bool)storeClientIsNotInSyncWithClientCacheWithError:(id *)arg1;	// IMP=0x0000000100031a6c
- (_Bool)storeClientIsInSyncWithClientCacheWithError:(id *)arg1;	// IMP=0x000000010003188c
- (id)createNewClientCacheIdentifier;	// IMP=0x0000000100031830
- (_Bool)storeClientCacheIdentifier:(id)arg1 error:(id *)arg2;	// IMP=0x0000000100031814
- (id)clientCacheIdentifier;	// IMP=0x00000001000317fc
- (_Bool)storeLastQuarantineCountReportDate:(id)arg1 error:(id *)arg2;	// IMP=0x00000001000317e0
- (id)lastQuarantineCountReportDate;	// IMP=0x0000000100031768
- (_Bool)storeUserIdentifier:(id)arg1 error:(id *)arg2;	// IMP=0x0000000100031540
- (id)userIdentifier;	// IMP=0x00000001000312c0
- (Class)_userIdentifierClass;	// IMP=0x0000000100031168
- (_Bool)resetValueForGlobalVariable:(id)arg1 error:(id *)arg2;	// IMP=0x00000001000310e4
- (id)valueForGlobalVariable:(id)arg1;	// IMP=0x0000000100030fbc
- (_Bool)setValue:(id)arg1 forGlobalVariable:(id)arg2 error:(id *)arg3;	// IMP=0x0000000100030eb8
- (_Bool)addGlobalVariable:(id)arg1 defaultValue:(id)arg2 error:(id *)arg3;	// IMP=0x0000000100030b3c
- (void)_cacheValue:(id)arg1 forVariable:(id)arg2;	// IMP=0x0000000100030aa4
- (id)pqlConnection;	// IMP=0x0000000100030a94
- (id)createNewLibraryVersion;	// IMP=0x0000000100030a38
- (_Bool)storeLibraryVersion:(id)arg1 withError:(id *)arg2;	// IMP=0x0000000100030a1c
- (id)libraryVersion;	// IMP=0x0000000100030a04
- (_Bool)updateLibraryOptions:(unsigned long long)arg1 error:(id *)arg2;	// IMP=0x00000001000307e4
- (unsigned long long)libraryOptions;	// IMP=0x000000010003078c
- (void)performBarrier;	// IMP=0x0000000100030770
- (void)performBarrierTransaction:(id)arg1 withBlock:(CDUnknownBlockType)arg2;	// IMP=0x0000000100030674
- (_Bool)closeWithError:(id *)arg1;	// IMP=0x0000000100030624
- (void)performWriteTransaction:(id)arg1 withBlock:(CDUnknownBlockType)arg2 completionHandler:(CDUnknownBlockType)arg3;	// IMP=0x0000000100030080
- (void)performReadTransaction:(id)arg1 withBlock:(CDUnknownBlockType)arg2;	// IMP=0x000000010002fcc0
- (_Bool)executePostOpenWithError:(id *)arg1;	// IMP=0x000000010002fbec
- (_Bool)openWithError:(id *)arg1;	// IMP=0x000000010002f628
- (_Bool)_openWithError:(id *)arg1;	// IMP=0x000000010002e124
- (_Bool)_setupPragmasAndFunctions;	// IMP=0x000000010002e10c
- (_Bool)markDatabaseAsDeactivatedWithError:(id *)arg1;	// IMP=0x000000010002e08c
- (void)_deleteCorruptionInfo;	// IMP=0x000000010002ded8
@property(readonly, nonatomic) id corruptionInfo;
- (id)_corruptionMarkerURL;	// IMP=0x000000010002dd28
- (_Bool)_setupDBIfNeeded;	// IMP=0x000000010002d8e4
- (_Bool)_upgradeDB:(long long)arg1;	// IMP=0x000000010002ceb0
- (_Bool)_wipeIfDeactivated:(long long)arg1 didWipeDatabase:(_Bool *)arg2 error:(id *)arg3;	// IMP=0x000000010002cd88
- (void)_wipeBeforeOpeningIfNecessary;	// IMP=0x000000010002cbc4
- (_Bool)_closeWipeAndReOpenWithReason:(id)arg1 error:(id *)arg2;	// IMP=0x000000010002c9b4
- (void)_wipeWithReason:(id)arg1;	// IMP=0x000000010002c7bc
- (_Bool)_postUpgradeToVersion:(long long)arg1;	// IMP=0x000000010002c598
- (_Bool)_upgradeToVersion:(long long)arg1;	// IMP=0x000000010002c1cc
- (void)_resetSyncAnchorsIfNecessary;	// IMP=0x000000010002bbdc
- (_Bool)_fix22666940;	// IMP=0x000000010002b4c8
- (_Bool)_performWithFlags:(unsigned int)arg1 action:(CDUnknownBlockType)arg2;	// IMP=0x000000010002b150
- (void)_unsetupProfilingHooks;	// IMP=0x000000010002b0c8
- (void)_setupProfilingHooks;	// IMP=0x000000010002abf8
- (id)_transactionStatsDescription;	// IMP=0x000000010002a9f8
- (_Bool)_initializeDB;	// IMP=0x000000010002a178
- (void)triggerResetAfterUpgrade:(unsigned long long)arg1 withReason:(id)arg2;	// IMP=0x0000000100029fac
- (id)initWithAbstractObject:(id)arg1;	// IMP=0x00000001000298b8

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

