//
//     Generated by classdumpios 1.0.1 (64 bit) (iOS port by DreamDevLost)(Debug version compiled Sep 26 2020 13:48:20).
//
//  Copyright (C) 1997-2019 Steve Nygard.
//

#import <objc/NSObject.h>

#import "NSXPCListenerDelegate-Protocol.h"
#import "SPCompanionAppServerProtocol-Protocol.h"
#import "SPDaemonManagerTransactionObserver-Protocol.h"
#import "SPLocalServerProtocol-Protocol.h"
#import "SPTransportDelegate-Protocol.h"

@class BKSProcessAssertion, NRDevice, NSDate, NSDictionary, NSMutableDictionary, NSString, NSXPCListener, SPUsageTrack;
@protocol OS_dispatch_queue, OS_dispatch_source;

@interface SPCompanionAppServer : NSObject <NSXPCListenerDelegate, SPLocalServerProtocol, SPDaemonManagerTransactionObserver, SPTransportDelegate, SPCompanionAppServerProtocol>
{
    _Bool _paired;	// 8 = 0x8
    unsigned int _nextTransactionID;	// 12 = 0xc
    NSObject<OS_dispatch_queue> *_queue;	// 16 = 0x10
    NSObject<OS_dispatch_queue> *_queueRemote;	// 24 = 0x18
    NSObject<OS_dispatch_source> *_gizmoApplicationsUpdateTimer;	// 32 = 0x20
    NSXPCListener *_localListener;	// 40 = 0x28
    NSMutableDictionary *_localConnections;	// 48 = 0x30
    NRDevice *_pairedDevice;	// 56 = 0x38
    NSObject<OS_dispatch_queue> *_transactionQueue;	// 64 = 0x40
    NSMutableDictionary *_outstandingtransactions;	// 72 = 0x48
    SPUsageTrack *_usageTrack;	// 80 = 0x50
    NSMutableDictionary *_dateOfFirstAttemptToLaunchGizmoAppsByBundleID;	// 88 = 0x58
    NSObject<OS_dispatch_queue> *_processAssertionQueue;	// 96 = 0x60
    BKSProcessAssertion *_processAssertion;	// 104 = 0x68
    NSString *_activeApplication;	// 112 = 0x70
    NSObject<OS_dispatch_queue> *_processAssertionForXcodeQueue;	// 120 = 0x78
    BKSProcessAssertion *_processAssertionForXcode;	// 128 = 0x80
    NSString *_plugInIdentifierForXcodeProcessAssertion;	// 136 = 0x88
    id _batteryStateObserver;	// 144 = 0x90
    NSObject<OS_dispatch_queue> *_remoteInterfaceProcessAssertionsQueue;	// 152 = 0x98
    NSMutableDictionary *_remoteInterfaceProcessAssertions;	// 160 = 0xa0
    NSObject<OS_dispatch_queue> *_launchSockPuppetAppQueue;	// 168 = 0xa8
    NSString *_launchSockPuppetAppCompanionAppIdentifer;	// 176 = 0xb0
    NSDictionary *_launchSockPuppetAppOptions;	// 184 = 0xb8
    CDUnknownBlockType _launchSockPuppetAppCompletion;	// 192 = 0xc0
    NSObject<OS_dispatch_source> *_launchSockPuppetCancelLaunchTimer;	// 200 = 0xc8
    NSDate *_dateOfFirstUnlock;	// 208 = 0xd0
    NSMutableDictionary *_extensionsDoingSnapshot;	// 216 = 0xd8
    NSObject<OS_dispatch_queue> *_extensionsDoingSnapshotQueue;	// 224 = 0xe0
    NSMutableDictionary *_lastExtensionKilledDates;	// 232 = 0xe8
    NSObject<OS_dispatch_queue> *_lastExtensionKilledDatesQueue;	// 240 = 0xf0
    double _timingTest_IDSReceiveTime;	// 248 = 0xf8
    double _timingTest_IDSSendTime;	// 256 = 0x100
    unsigned long long _timingTest_IDSSendSize;	// 264 = 0x108
    NSObject<OS_dispatch_queue> *_timingTest_queue;	// 272 = 0x110
}

- (void).cxx_destruct;	// IMP=0x000000010001a334
@property(retain, nonatomic) NSObject<OS_dispatch_queue> *timingTest_queue; // @synthesize timingTest_queue=_timingTest_queue;
@property(nonatomic) unsigned long long timingTest_IDSSendSize; // @synthesize timingTest_IDSSendSize=_timingTest_IDSSendSize;
@property(nonatomic) double timingTest_IDSSendTime; // @synthesize timingTest_IDSSendTime=_timingTest_IDSSendTime;
@property(nonatomic) double timingTest_IDSReceiveTime; // @synthesize timingTest_IDSReceiveTime=_timingTest_IDSReceiveTime;
@property(retain, nonatomic) NSObject<OS_dispatch_queue> *lastExtensionKilledDatesQueue; // @synthesize lastExtensionKilledDatesQueue=_lastExtensionKilledDatesQueue;
@property(retain, nonatomic) NSMutableDictionary *lastExtensionKilledDates; // @synthesize lastExtensionKilledDates=_lastExtensionKilledDates;
@property(retain, nonatomic) NSObject<OS_dispatch_queue> *extensionsDoingSnapshotQueue; // @synthesize extensionsDoingSnapshotQueue=_extensionsDoingSnapshotQueue;
@property(retain) NSMutableDictionary *extensionsDoingSnapshot; // @synthesize extensionsDoingSnapshot=_extensionsDoingSnapshot;
@property(retain, nonatomic) NSDate *dateOfFirstUnlock; // @synthesize dateOfFirstUnlock=_dateOfFirstUnlock;
@property(retain, nonatomic) NSObject<OS_dispatch_source> *launchSockPuppetCancelLaunchTimer; // @synthesize launchSockPuppetCancelLaunchTimer=_launchSockPuppetCancelLaunchTimer;
@property(copy, nonatomic) CDUnknownBlockType launchSockPuppetAppCompletion; // @synthesize launchSockPuppetAppCompletion=_launchSockPuppetAppCompletion;
@property(retain, nonatomic) NSDictionary *launchSockPuppetAppOptions; // @synthesize launchSockPuppetAppOptions=_launchSockPuppetAppOptions;
@property(retain, nonatomic) NSString *launchSockPuppetAppCompanionAppIdentifer; // @synthesize launchSockPuppetAppCompanionAppIdentifer=_launchSockPuppetAppCompanionAppIdentifer;
@property(retain, nonatomic) NSObject<OS_dispatch_queue> *launchSockPuppetAppQueue; // @synthesize launchSockPuppetAppQueue=_launchSockPuppetAppQueue;
@property(retain, nonatomic) NSMutableDictionary *remoteInterfaceProcessAssertions; // @synthesize remoteInterfaceProcessAssertions=_remoteInterfaceProcessAssertions;
@property(retain, nonatomic) NSObject<OS_dispatch_queue> *remoteInterfaceProcessAssertionsQueue; // @synthesize remoteInterfaceProcessAssertionsQueue=_remoteInterfaceProcessAssertionsQueue;
@property(retain, nonatomic) id batteryStateObserver; // @synthesize batteryStateObserver=_batteryStateObserver;
@property(retain, nonatomic) NSString *plugInIdentifierForXcodeProcessAssertion; // @synthesize plugInIdentifierForXcodeProcessAssertion=_plugInIdentifierForXcodeProcessAssertion;
@property(retain) BKSProcessAssertion *processAssertionForXcode; // @synthesize processAssertionForXcode=_processAssertionForXcode;
@property(retain, nonatomic) NSObject<OS_dispatch_queue> *processAssertionForXcodeQueue; // @synthesize processAssertionForXcodeQueue=_processAssertionForXcodeQueue;
@property(retain, nonatomic) NSString *activeApplication; // @synthesize activeApplication=_activeApplication;
@property(retain) BKSProcessAssertion *processAssertion; // @synthesize processAssertion=_processAssertion;
@property(retain, nonatomic) NSObject<OS_dispatch_queue> *processAssertionQueue; // @synthesize processAssertionQueue=_processAssertionQueue;
@property(retain, nonatomic) NSMutableDictionary *dateOfFirstAttemptToLaunchGizmoAppsByBundleID; // @synthesize dateOfFirstAttemptToLaunchGizmoAppsByBundleID=_dateOfFirstAttemptToLaunchGizmoAppsByBundleID;
@property(retain, nonatomic) SPUsageTrack *usageTrack; // @synthesize usageTrack=_usageTrack;
@property(nonatomic) unsigned int nextTransactionID; // @synthesize nextTransactionID=_nextTransactionID;
@property(retain, nonatomic) NSMutableDictionary *outstandingtransactions; // @synthesize outstandingtransactions=_outstandingtransactions;
@property(retain, nonatomic) NSObject<OS_dispatch_queue> *transactionQueue; // @synthesize transactionQueue=_transactionQueue;
@property(retain, nonatomic) NRDevice *pairedDevice; // @synthesize pairedDevice=_pairedDevice;
@property _Bool paired; // @synthesize paired=_paired;
@property(retain) NSMutableDictionary *localConnections; // @synthesize localConnections=_localConnections;
@property(retain) NSXPCListener *localListener; // @synthesize localListener=_localListener;
@property(retain, nonatomic) NSObject<OS_dispatch_source> *gizmoApplicationsUpdateTimer; // @synthesize gizmoApplicationsUpdateTimer=_gizmoApplicationsUpdateTimer;
@property(retain, nonatomic) NSObject<OS_dispatch_queue> *queueRemote; // @synthesize queueRemote=_queueRemote;
@property(retain, nonatomic) NSObject<OS_dispatch_queue> *queue; // @synthesize queue=_queue;
- (_Bool)connection:(id)arg1 hasEntitlement:(id)arg2;	// IMP=0x0000000100019f78
- (id)applicationIdentifierFromXPCConnection:(id)arg1;	// IMP=0x0000000100019ec0
- (void)activeComplicationsWithCompletion:(CDUnknownBlockType)arg1;	// IMP=0x0000000100019d10
- (void)daemonManagerWillEndXPCTransaction;	// IMP=0x00000001000199f0
- (_Bool)_isApplicationViewControllerActivate:(id)arg1;	// IMP=0x0000000100019870
- (void)_sendTextSizeToApplication:(id)arg1 onlyIfChanged:(_Bool)arg2;	// IMP=0x0000000100019700
- (id)_textSize;	// IMP=0x0000000100019630
- (id)_textSizeChanged;	// IMP=0x000000010001959c
- (_Bool)isExtensionDoingSnapshot:(id)arg1;	// IMP=0x0000000100019460
- (void)extensionDidEndSnapshot:(id)arg1;	// IMP=0x0000000100019238
- (void)extensionDidBeginSnapshot:(id)arg1;	// IMP=0x0000000100018e7c
- (id)logStringArray:(id)arg1;	// IMP=0x0000000100018dec
- (id)logDictionary:(id)arg1;	// IMP=0x0000000100018a14
- (id)decodeInData:(id)arg1;	// IMP=0x00000001000187e0
- (id)decodeOutData:(id)arg1;	// IMP=0x0000000100018034
- (id)decodeProtoData:(id)arg1;	// IMP=0x0000000100017ef8
- (id)transactionDictForID:(id)arg1 removeFromOutstanding:(_Bool)arg2;	// IMP=0x0000000100017ba0
- (void)sendAndTrackTransactionDict:(id)arg1 withCompletion:(id)arg2;	// IMP=0x00000001000176a4
- (_Bool)isPaired;	// IMP=0x0000000100017650
- (void)nanoRegistryChanged:(id)arg1;	// IMP=0x0000000100017558
- (_Bool)showUserNotificationWithTitle:(id)arg1 message:(id)arg2;	// IMP=0x00000001000173cc
- (void)releaseRemoteInterfaceAssertionsForPluginIdentifer:(id)arg1;	// IMP=0x0000000100017064
- (void)takeRemoteInterfaceProcessAssertionForPlugin:(id)arg1;	// IMP=0x00000001000162d0
- (void)releaseProcessAssertionForXcode;	// IMP=0x0000000100015fcc
- (void)takeProcessAssertionForXcode:(id)arg1;	// IMP=0x0000000100015550
- (void)setApplicationIDForXcodeProcessAssertion:(id)arg1;	// IMP=0x00000001000150d0
- (void)releaseProcessAssertion:(id)arg1;	// IMP=0x0000000100014e64
- (void)takeProcessAssertion:(id)arg1;	// IMP=0x0000000100014498
- (void)_applicationDeactivated:(id)arg1;	// IMP=0x0000000100014278
- (void)_applicationActivated:(id)arg1;	// IMP=0x0000000100014078
- (void)handleIncomingPlist:(id)arg1;	// IMP=0x00000001000126b8
- (id)appBundleIDFromPlist:(id)arg1;	// IMP=0x0000000100012674
- (void)handleIncomingData:(id)arg1;	// IMP=0x00000001000123c8
- (_Bool)unlockedSinceBoot;	// IMP=0x00000001000123bc
- (void)incomingData:(id)arg1;	// IMP=0x0000000100012350
- (void)_saveReceiveTime;	// IMP=0x0000000100012298
- (void)_saveSendTimeAndSize:(unsigned long long)arg1;	// IMP=0x00000001000121b4
- (void)launchCompanionAppForGizmoAppWithIdentifier:(id)arg1 withUserInfoData:(id)arg2 reply:(CDUnknownBlockType)arg3;	// IMP=0x0000000100010e54
- (void)handleIncomingProtoPlist:(id)arg1;	// IMP=0x0000000100010b30
- (void)incomingProtobuf:(id)arg1;	// IMP=0x0000000100010a08
- (void)fetchNotificationForNotificationID:(id)arg1 completion:(CDUnknownBlockType)arg2;	// IMP=0x0000000100010900
- (void)requestTimingData:(id)arg1 timingMetaData:(id)arg2;	// IMP=0x00000001000106a8
- (void)sendCacheRequest:(id)arg1 identifier:(id)arg2;	// IMP=0x00000001000105f8
- (void)sendData:(id)arg1 identifier:(id)arg2 clientIdentifiers:(id)arg3 reply:(CDUnknownBlockType)arg4;	// IMP=0x000000010001052c
- (void)sendData:(id)arg1 identifier:(id)arg2 clientIdentifiers:(id)arg3;	// IMP=0x00000001000102d8
- (void)extensionWithIdentifier:(id)arg1 gotUnknownInterfaceController:(id)arg2;	// IMP=0x00000001000101b8
- (void)wakeExtensionForWatchApp:(id)arg1;	// IMP=0x00000001000100a8
- (void)hideUserNotification;	// IMP=0x000000010000ffec
- (void)showUserNotification:(long long)arg1 applicationName:(id)arg2;	// IMP=0x000000010000feb4
- (void)xcodeWillInstallSockPuppetAppWithCompanionAppIdentifier:(id)arg1 completion:(CDUnknownBlockType)arg2;	// IMP=0x000000010000fdd8
- (void)getCompanionExtensionPIDForCompanionAppWithIdentifier:(id)arg1 completion:(CDUnknownBlockType)arg2;	// IMP=0x000000010000f8c4
- (void)getSockPuppetAppRunningStatusForCompanionAppWithIdentifier:(id)arg1 completion:(CDUnknownBlockType)arg2;	// IMP=0x000000010000f480
- (void)terminateSockPuppetAppForCompanionAppWithIdentifier:(id)arg1 completion:(CDUnknownBlockType)arg2;	// IMP=0x000000010000ec00
- (void)_cancelLaunchSockPuppetAppTimeout;	// IMP=0x000000010000eac4
- (void)_sockPuppetAppListUpdatedToLaunchSockPuppetAppForCompanionAppWithIdentifier:(id)arg1 options:(id)arg2 acxRetryGeneration:(unsigned long long)arg3 completion:(CDUnknownBlockType)arg4;	// IMP=0x000000010000d874
- (void)launchSockPuppetAppForCompanionAppWithIdentifier:(id)arg1 options:(id)arg2 completion:(CDUnknownBlockType)arg3;	// IMP=0x000000010000d0f4
- (void)fetchInstalledApplicationsWithCompletion:(CDUnknownBlockType)arg1;	// IMP=0x000000010000d084
- (void)killExtensionForAppIdentifier:(id)arg1;	// IMP=0x000000010000cf28
- (void)sendData:(id)arg1 toApplication:(id)arg2;	// IMP=0x000000010000cc44
- (void)sendProtoData:(id)arg1 toCompanionApplication:(id)arg2 fromIdentifier:(id)arg3;	// IMP=0x000000010000c950
- (void)sendData:(id)arg1 toCompanionApplication:(id)arg2 fromIdentifier:(id)arg3;	// IMP=0x000000010000c658
- (void)sendToRemoteInterface:(id)arg1 call:(CDUnknownBlockType)arg2;	// IMP=0x000000010000bc34
- (void)sendPlist:(id)arg1 securityType:(long long)arg2;	// IMP=0x000000010000bc20
- (_Bool)shouldKillExtensionOnError:(id)arg1;	// IMP=0x000000010000ba40
- (void)clearLastResetDateForPluginIdentifier:(id)arg1;	// IMP=0x000000010000b95c
- (void)setLastExtensionKilledDateForPluginIdentifier:(id)arg1;	// IMP=0x000000010000b7cc
- (void)sendProtobuf:(id)arg1 sender:(id)arg2 timeOut:(double)arg3 securityType:(long long)arg4;	// IMP=0x000000010000b348
- (void)sendPlist:(id)arg1 timeOut:(double)arg2 securityType:(long long)arg3;	// IMP=0x000000010000b1fc
- (_Bool)listener:(id)arg1 shouldAcceptNewConnection:(id)arg2;	// IMP=0x000000010000ad84
- (void)sendFirstUnlockStatusToGizmo;	// IMP=0x000000010000abc0
- (_Bool)_checkUnlockedSinceBoot;	// IMP=0x000000010000ab84
- (_Bool)_unlockedSinceBoot;	// IMP=0x000000010000ab48
- (void)cancelGizmoApplicationsUpdateTimer;	// IMP=0x000000010000ab0c
- (void)setup;	// IMP=0x000000010000aacc
- (void)logDataSent:(unsigned long long)arg1 application:(id)arg2;	// IMP=0x000000010000aa44
- (id)_setupSignal:(int)arg1 handler:(CDUnknownBlockType)arg2;	// IMP=0x000000010000a92c
- (void)_setupSignalHandlers;	// IMP=0x000000010000a3e8
- (id)init;	// IMP=0x0000000100009840

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

