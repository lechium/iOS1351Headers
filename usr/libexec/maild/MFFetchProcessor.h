//
//     Generated by classdumpios 1.0.1 (64 bit) (iOS port by DreamDevLost)(Debug version compiled Sep 26 2020 13:48:20).
//
//  Copyright (C) 1997-2019 Steve Nygard.
//

#import <objc/NSObject.h>

@class EFCancelationToken, FavoritesPersistence, MFInvocationQueue, NSArray, NSCountedSet, NSMutableSet, NSSet, NSString;
@protocol MFActivityCondition, OS_dispatch_queue, OS_dispatch_semaphore;

@interface MFFetchProcessor : NSObject
{
    NSCountedSet *_mailboxFetchCounts;	// 8 = 0x8
    MFInvocationQueue *_workQueue;	// 16 = 0x10
    NSObject<OS_dispatch_queue> *_stateQueue;	// 24 = 0x18
    NSObject<OS_dispatch_semaphore> *_finishedProcessing;	// 32 = 0x20
    NSObject<OS_dispatch_semaphore> *_requestLimiter;	// 40 = 0x28
    unsigned long long _requestLimiterLimit;	// 48 = 0x30
    unsigned long long _runningRequests;	// 56 = 0x38
    NSMutableSet *_currentInvocations;	// 64 = 0x40
    NSMutableSet *_failedMailboxes;	// 72 = 0x48
    double _stopTime;	// 80 = 0x50
    EFCancelationToken *_cancelationToken;	// 88 = 0x58
    _Bool _loadMessageBodies;	// 96 = 0x60
    _Bool _includePushedMailboxes;	// 97 = 0x61
    _Bool _includeFavoritesMailboxes;	// 98 = 0x62
    _Bool _useMailboxFrecencyRanking;	// 99 = 0x63
    NSString *_name;	// 104 = 0x68
    NSSet *_accounts;	// 112 = 0x70
    long long _accountMailboxesBatchSize;	// 120 = 0x78
    long long _lastFetchDateCutoff;	// 128 = 0x80
    unsigned long long _loadNumOlderMessages;	// 136 = 0x88
    FavoritesPersistence *_favoritesPersistence;	// 144 = 0x90
    unsigned long long _maximumMailboxesToFetch;	// 152 = 0x98
    NSArray *_excludedMailboxTypes;	// 160 = 0xa0
    id <MFActivityCondition> _condition;	// 168 = 0xa8
}

+ (id)intelligentSkeletonFetchProcessor;	// IMP=0x000000010007e844
+ (id)powernapProcessor;	// IMP=0x000000010007e5cc
+ (id)processorWithName:(id)arg1 condition:(id)arg2;	// IMP=0x000000010007e538
+ (void)initialize;	// IMP=0x000000010007e204
- (void).cxx_destruct;	// IMP=0x0000000100081294
@property(retain, nonatomic) id <MFActivityCondition> condition; // @synthesize condition=_condition;
@property(copy, nonatomic) NSArray *excludedMailboxTypes; // @synthesize excludedMailboxTypes=_excludedMailboxTypes;
@property(nonatomic) unsigned long long maximumMailboxesToFetch; // @synthesize maximumMailboxesToFetch=_maximumMailboxesToFetch;
@property(nonatomic) _Bool useMailboxFrecencyRanking; // @synthesize useMailboxFrecencyRanking=_useMailboxFrecencyRanking;
@property(retain, nonatomic) FavoritesPersistence *favoritesPersistence; // @synthesize favoritesPersistence=_favoritesPersistence;
@property(nonatomic) _Bool includeFavoritesMailboxes; // @synthesize includeFavoritesMailboxes=_includeFavoritesMailboxes;
@property(nonatomic) _Bool includePushedMailboxes; // @synthesize includePushedMailboxes=_includePushedMailboxes;
@property(nonatomic) _Bool loadMessageBodies; // @synthesize loadMessageBodies=_loadMessageBodies;
@property(nonatomic) unsigned long long loadNumOlderMessages; // @synthesize loadNumOlderMessages=_loadNumOlderMessages;
@property(nonatomic) long long lastFetchDateCutoff; // @synthesize lastFetchDateCutoff=_lastFetchDateCutoff;
@property(nonatomic) long long accountMailboxesBatchSize; // @synthesize accountMailboxesBatchSize=_accountMailboxesBatchSize;
@property(copy, nonatomic) NSSet *accounts; // @synthesize accounts=_accounts;
@property(readonly, nonatomic) NSString *name; // @synthesize name=_name;
@property(readonly, nonatomic) unsigned long long numberOfMailboxesFetched;
- (id)_mailboxesToFetch;	// IMP=0x000000010008089c
- (id)_accountsExcludingBlacklistedHostnames;	// IMP=0x0000000100080494
- (void)_fetchCompleted:(id)arg1;	// IMP=0x000000010007fed8
- (void)_finishRequest;	// IMP=0x000000010007fe58
- (void)_cancelCurrentInvocations;	// IMP=0x000000010007fb50
- (id)_observeChangesInConditions;	// IMP=0x000000010007f984
- (_Bool)_processEligibleMailboxesAndWait;	// IMP=0x000000010007ee68
- (_Bool)_runSynchronously:(long long)arg1;	// IMP=0x000000010007eab0
- (_Bool)runSynchronouslyWithDuration:(double)arg1;	// IMP=0x000000010007ea6c
- (_Bool)runSynchronously;	// IMP=0x000000010007ea5c
- (void)_setRequestLimiterLimit:(unsigned long long)arg1;	// IMP=0x000000010007ea54
- (void)dealloc;	// IMP=0x000000010007e4b8
- (id)initWithName:(id)arg1 condition:(id)arg2;	// IMP=0x000000010007e2b8

@end

