//
//     Generated by classdumpios 1.0.1 (64 bit) (iOS port by DreamDevLost)(Debug version compiled Sep 26 2020 13:48:20).
//
//  Copyright (C) 1997-2019 Steve Nygard.
//

#import <objc/NSObject.h>

@protocol CLConnectionDataDelegate, CLConnectionLifecycleDelegate, OS_dispatch_queue, OS_xpc_object;

@interface CLConnectionEndpoint : NSObject
{
    NSObject<OS_dispatch_queue> *_queue;	// 8 = 0x8
    id <CLConnectionLifecycleDelegate> _connectionDelegate;	// 16 = 0x10
    id <CLConnectionDataDelegate> _dataDelegate;	// 24 = 0x18
    NSObject<OS_xpc_object> *_streamingServerConnection;	// 32 = 0x20
    NSObject<OS_xpc_object> *_streamingClientConnection;	// 40 = 0x28
    NSObject<OS_xpc_object> *_streamingClientListener;	// 48 = 0x30
    NSObject<OS_xpc_object> *_messagingConnection;	// 56 = 0x38
}

- (void).cxx_destruct;	// IMP=0x000000010000b750
@property(retain, nonatomic) NSObject<OS_xpc_object> *messagingConnection; // @synthesize messagingConnection=_messagingConnection;
@property(retain, nonatomic) NSObject<OS_xpc_object> *streamingClientListener; // @synthesize streamingClientListener=_streamingClientListener;
@property(retain, nonatomic) NSObject<OS_xpc_object> *streamingClientConnection; // @synthesize streamingClientConnection=_streamingClientConnection;
@property(retain, nonatomic) NSObject<OS_xpc_object> *streamingServerConnection; // @synthesize streamingServerConnection=_streamingServerConnection;
@property(nonatomic) __weak id <CLConnectionDataDelegate> dataDelegate; // @synthesize dataDelegate=_dataDelegate;
@property(nonatomic) __weak id <CLConnectionLifecycleDelegate> connectionDelegate; // @synthesize connectionDelegate=_connectionDelegate;
@property(retain, nonatomic) NSObject<OS_dispatch_queue> *queue; // @synthesize queue=_queue;
@property(readonly, nonatomic) NSObject<OS_xpc_object> *connection;
- (_Bool)isValid;	// IMP=0x000000010000b630
- (void)handleInterruption;	// IMP=0x000000010000b5e8
- (void)invalidate;	// IMP=0x000000010000b4a8
- (void)requestStreamWithMessage:(id)arg1 data:(id)arg2 errorHandler:(CDUnknownBlockType)arg3;	// IMP=0x000000010000af80
- (void)handleStreamXpcReply:(id)arg1 withErrorHandler:(CDUnknownBlockType)arg2;	// IMP=0x000000010000ab60
- (void)stopReceivingStream;	// IMP=0x000000010000a9d4
- (void)startReceivingStreamOnConnection:(id)arg1 errorHandler:(CDUnknownBlockType)arg2;	// IMP=0x000000010000a650
- (void)handleStreamXpcError:(id)arg1 withErrorHandler:(CDUnknownBlockType)arg2;	// IMP=0x000000010000a400
- (void)stopServingStream;	// IMP=0x000000010000a2f4
- (_Bool)startServingStreamWithHandler:(id)arg1;	// IMP=0x0000000100009e70
- (void)sendMessage:(id)arg1 withData:(id)arg2 reply:(CDUnknownBlockType)arg3;	// IMP=0x0000000100009ab0
- (void)sendMessage:(id)arg1 withData:(id)arg2;	// IMP=0x0000000100009878
- (void)pause;	// IMP=0x0000000100009814
- (void)start;	// IMP=0x00000001000097b0
- (id)initWithConnection:(id)arg1 queue:(id)arg2;	// IMP=0x00000001000094b4
- (void)handleXpcMessage:(id)arg1 replyBlock:(CDUnknownBlockType)arg2;	// IMP=0x0000000100008f84
- (void)startServingStreamToEndpoint:(id)arg1 error:(id *)arg2;	// IMP=0x0000000100008c14
- (void)wrapReplyToXpcMessage:(id)arg1 withName:(id)arg2 data:(id)arg3;	// IMP=0x0000000100008adc
- (id)name;	// IMP=0x0000000100006284
- (_Bool)isEntitledTo:(id)arg1;	// IMP=0x0000000100005ae0
- (CDStruct_6ad76789)auditToken;	// IMP=0x0000000100005aa0

@end

