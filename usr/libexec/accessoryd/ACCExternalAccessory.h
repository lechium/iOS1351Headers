//
//     Generated by classdumpios 1.0.1 (64 bit) (iOS port by DreamDevLost)(Debug version compiled Sep 26 2020 13:48:20).
//
//  Copyright (C) 1997-2019 Steve Nygard.
//

#import <objc/NSObject.h>

@class NSArray, NSData, NSDictionary, NSNumber, NSString;

@interface ACCExternalAccessory : NSObject
{
    unsigned long long _eaAccessoryCapabilities;	// 8 = 0x8
    _Bool _supportsMultipleSessionsPerProtocol;	// 16 = 0x10
    NSString *_primaryEndpointUUID;	// 24 = 0x18
    NSArray *_endpointUUIDs;	// 32 = 0x20
    NSString *_EAName;	// 40 = 0x28
    NSString *_EAManufacturer;	// 48 = 0x30
    NSString *_EAModelNumber;	// 56 = 0x38
    NSString *_EASerialNumber;	// 64 = 0x40
    NSString *_EAFirmwareRevisionActive;	// 72 = 0x48
    NSString *_EAFirmwareRevisionPending;	// 80 = 0x50
    NSString *_EAHardwareRevision;	// 88 = 0x58
    NSString *_EAPPID;	// 96 = 0x60
    NSString *_EADockType;	// 104 = 0x68
    NSString *_EAMACAddress;	// 112 = 0x70
    NSNumber *_EAConnectionID;	// 120 = 0x78
    NSNumber *_EATransportType;	// 128 = 0x80
    NSArray *_EAProtocolsAppMatching;	// 136 = 0x88
    NSString *_EAPreferredApp;	// 144 = 0x90
    NSData *_EACertData;	// 152 = 0x98
    NSData *_EACertSerial;	// 160 = 0xa0
    NSDictionary *_EAAccessoryDictionary;	// 168 = 0xa8
    NSDictionary *_vehicleStatus;	// 176 = 0xb0
    unsigned long long _destinationSharingOptions;	// 184 = 0xb8
    NSDictionary *_vehicleInfoDictionary;	// 192 = 0xc0
    NSDictionary *_EAProtocols;	// 200 = 0xc8
}

+ (id)accessoryDictionaryForLogging:(id)arg1;	// IMP=0x00000001000a9404
+ (unsigned int)_generateLegacyIAPConnectionID;	// IMP=0x00000001000a938c
- (void).cxx_destruct;	// IMP=0x00000001000a9690
@property(readonly, nonatomic) NSDictionary *EAProtocols; // @synthesize EAProtocols=_EAProtocols;
@property(readonly, nonatomic) NSDictionary *vehicleInfoDictionary; // @synthesize vehicleInfoDictionary=_vehicleInfoDictionary;
@property(nonatomic) unsigned long long destinationSharingOptions; // @synthesize destinationSharingOptions=_destinationSharingOptions;
@property(retain, nonatomic) NSDictionary *vehicleStatus; // @synthesize vehicleStatus=_vehicleStatus;
@property(readonly, nonatomic) _Bool supportsMultipleSessionsPerProtocol; // @synthesize supportsMultipleSessionsPerProtocol=_supportsMultipleSessionsPerProtocol;
@property(readonly, nonatomic) NSDictionary *EAAccessoryDictionary; // @synthesize EAAccessoryDictionary=_EAAccessoryDictionary;
@property(readonly, nonatomic) NSData *EACertSerial; // @synthesize EACertSerial=_EACertSerial;
@property(readonly, nonatomic) NSData *EACertData; // @synthesize EACertData=_EACertData;
@property(readonly, nonatomic) NSString *EAPreferredApp; // @synthesize EAPreferredApp=_EAPreferredApp;
@property(readonly, nonatomic) NSArray *EAProtocolsAppMatching; // @synthesize EAProtocolsAppMatching=_EAProtocolsAppMatching;
@property(readonly, nonatomic) NSNumber *EATransportType; // @synthesize EATransportType=_EATransportType;
@property(readonly, nonatomic) NSNumber *EAConnectionID; // @synthesize EAConnectionID=_EAConnectionID;
@property(readonly, nonatomic) NSString *EAMACAddress; // @synthesize EAMACAddress=_EAMACAddress;
@property(readonly, nonatomic) NSString *EADockType; // @synthesize EADockType=_EADockType;
@property(readonly, nonatomic) NSString *EAPPID; // @synthesize EAPPID=_EAPPID;
@property(readonly, nonatomic) NSString *EAHardwareRevision; // @synthesize EAHardwareRevision=_EAHardwareRevision;
@property(readonly, nonatomic) NSString *EAFirmwareRevisionPending; // @synthesize EAFirmwareRevisionPending=_EAFirmwareRevisionPending;
@property(readonly, nonatomic) NSString *EAFirmwareRevisionActive; // @synthesize EAFirmwareRevisionActive=_EAFirmwareRevisionActive;
@property(readonly, nonatomic) NSString *EASerialNumber; // @synthesize EASerialNumber=_EASerialNumber;
@property(readonly, nonatomic) NSString *EAModelNumber; // @synthesize EAModelNumber=_EAModelNumber;
@property(readonly, nonatomic) NSString *EAManufacturer; // @synthesize EAManufacturer=_EAManufacturer;
@property(readonly, nonatomic) NSString *EAName; // @synthesize EAName=_EAName;
@property(readonly, nonatomic) NSArray *endpointUUIDs; // @synthesize endpointUUIDs=_endpointUUIDs;
@property(readonly, nonatomic) NSString *primaryEndpointUUID; // @synthesize primaryEndpointUUID=_primaryEndpointUUID;
- (void)_constructEADictionary:(id)arg1;	// IMP=0x00000001000a85f0
- (void)_addEAProtocolsForEAEndpoints:(id)arg1;	// IMP=0x00000001000a8284
- (void)_addEAProtocolPrimaryEndpointInfo:(struct ACCEndpoint_s *)arg1;	// IMP=0x00000001000a7f5c
- (id)_nativeUSBEndpointUUIDForProtocolIdentifier:(id)arg1 iAP2Endpoint:(CDStruct_a71c2b86 *)arg2;	// IMP=0x00000001000a7ca0
- (void)_addiAP2VehicleInfo:(CDStruct_a71c2b86 *)arg1;	// IMP=0x00000001000a799c
- (void)_addiAP2EAProtocols:(CDStruct_a71c2b86 *)arg1;	// IMP=0x00000001000a71f4
- (void)_addiAP2IdentificationInfo:(CDStruct_a71c2b86 *)arg1;	// IMP=0x00000001000a6fb4
- (void)_addAccessoryInfo:(struct ACCEndpoint_s *)arg1;	// IMP=0x00000001000a6ad0
- (void)_addiAP2AuthInfo:(CDStruct_a71c2b86 *)arg1;	// IMP=0x00000001000a6a48
- (id)copyExternalAccessoryProtocols;	// IMP=0x00000001000a6940
- (id)externalAccessoryProtocolInformationForProtocolName:(id)arg1;	// IMP=0x00000001000a6714
- (void)updateAccessoryInfo;	// IMP=0x00000001000a5e44
- (id)description;	// IMP=0x00000001000a5df0
- (id)initWithEndpointUUIDs:(id)arg1 primaryEndpointUUID:(id)arg2;	// IMP=0x00000001000a5ad8

@end

