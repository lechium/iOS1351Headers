//
//     Generated by classdumpios 1.0.1 (64 bit) (iOS port by DreamDevLost)(Debug version compiled Sep 26 2020 13:48:20).
//
//  Copyright (C) 1997-2019 Steve Nygard.
//

#import <objc/NSObject.h>

#import "GKClientProtocol-Protocol.h"
#import "_GKStateMachineDelegate-Protocol.h"

@class GKDatabaseConnection, GKEntitlements, GKEventTuple, GKGameInternal, GKInviteSession, GKMatchResponse, GKQuickAction, GKResourceManager, GKThreadsafeDictionary, NSDate, NSDictionary, NSLocale, NSMapTable, NSMutableSet, NSNumber, NSString, NSXPCConnection, _GKStateMachine;
@protocol GKUIViewService, OS_dispatch_queue;

@interface GKClientProxy : NSObject <GKClientProtocol, _GKStateMachineDelegate>
{
    _Bool _deniedProductionEnvironment;	// 8 = 0x8
    _Bool _productionSigned;	// 9 = 0x9
    _Bool _installed;	// 10 = 0xa
    _Bool _supportsMultipleActivePlayers;	// 11 = 0xb
    _Bool _isOcelot;	// 12 = 0xc
    unsigned char _achievementsRateLimitedCurrentState;	// 13 = 0xd
    unsigned char _scoresRateLimitedCurrentState;	// 14 = 0xe
    _Bool _initialized;	// 15 = 0xf
    int _pid;	// 16 = 0x10
    unsigned int _applicationState;	// 20 = 0x14
    unsigned int _previousApplicationState;	// 24 = 0x18
    GKClientProxy<GKUIViewService> *_weakViewService;	// 32 = 0x20
    NSObject<OS_dispatch_queue> *_replyQueue;	// 40 = 0x28
    NSObject<OS_dispatch_queue> *_authQueue;	// 48 = 0x30
    NSXPCConnection *_connection;	// 56 = 0x38
    GKEntitlements *_entitlements;	// 64 = 0x40
    NSNumber *_adamID;	// 72 = 0x48
    NSNumber *_externalVersion;	// 80 = 0x50
    NSString *_bundleIdentifier;	// 88 = 0x58
    NSString *_bundleVersion;	// 96 = 0x60
    NSString *_bundleShortVersion;	// 104 = 0x68
    long long _environment;	// 112 = 0x70
    NSDate *_achievementsRateLimitingStartDate;	// 120 = 0x78
    long long _achievementsRateLimitingCurrentNumberOfRequests;	// 128 = 0x80
    NSDate *_scoresRateLimitingStartDate;	// 136 = 0x88
    long long _scoresRateLimitingCurrentNumberOfRequests;	// 144 = 0x90
    NSString *_language;	// 152 = 0x98
    GKGameInternal *_currentGame;	// 160 = 0xa0
    GKEventTuple *_launchEvent;	// 168 = 0xa8
    GKQuickAction *_pendingQuickAction;	// 176 = 0xb0
    GKInviteSession *_inviteSession;	// 184 = 0xb8
    GKMatchResponse *_currentMatchResponse;	// 192 = 0xc0
    _GKStateMachine *_initAppStateMachine;	// 200 = 0xc8
    GKThreadsafeDictionary *_appSessions;	// 208 = 0xd0
    NSObject<OS_dispatch_queue> *_delayedRequestsQueue;	// 216 = 0xd8
    GKDatabaseConnection *_delayedRequestsDBConnection;	// 224 = 0xe0
    NSObject<OS_dispatch_queue> *_cacheQueue;	// 232 = 0xe8
    GKResourceManager *_resourceManager;	// 240 = 0xf0
    NSMutableSet *_pendingDataTypesForRefresh;	// 248 = 0xf8
    NSMapTable *_extensionProxies;	// 256 = 0x100
    NSDictionary *_preferencesFromBag;	// 264 = 0x108
}

+ (id)syncQueue;	// IMP=0x0000000100147e58
+ (void)closeDatabaseFromManagedObjectContextForMOC:(id)arg1;	// IMP=0x000000010007b718
+ (void)closeDatabaseFromManagedObjectContextForPlayer:(id)arg1;	// IMP=0x000000010007b6e0
+ (id)newManagedObjectContextForClient:(id)arg1 player:(id)arg2;	// IMP=0x000000010007b5a8
+ (id)_newManagedObjectContextForPlayer:(id)arg1;	// IMP=0x000000010007ab00
+ (id)cacheFileQueue;	// IMP=0x000000010007aa98
+ (id)managedObjectModel;	// IMP=0x000000010007a810
+ (void)removeAllCaches;	// IMP=0x000000010007a344
+ (void)removeCacheForPlayer:(id)arg1;	// IMP=0x0000000100079d50
+ (id)cacheFileURLForClient:(id)arg1 player:(id)arg2;	// IMP=0x0000000100079d20
+ (id)cacheDirectoryURLForClient:(id)arg1 player:(id)arg2;	// IMP=0x0000000100079944
+ (id)cacheDirectoryForBundleID:(id)arg1 environment:(long long)arg2;	// IMP=0x00000001000798d4
+ (id)_existingManagedObjectContextForPlayer:(id)arg1;	// IMP=0x000000010007968c
+ (id)contextKeyForPlayer:(id)arg1;	// IMP=0x000000010007965c
+ (void)removeClient:(id)arg1;	// IMP=0x000000010014a698
+ (void)enumerateClientsUsingBlock:(CDUnknownBlockType)arg1;	// IMP=0x000000010014a60c
+ (id)clientsToBeEnumerated;	// IMP=0x000000010014a430
+ (id)clientForMatchmakingRID:(id)arg1;	// IMP=0x000000010014a2e0
+ (id)clientForInviteSessionToken:(id)arg1;	// IMP=0x0000000100149f28
+ (id)foregroundClient;	// IMP=0x0000000100149dd8
+ (id)clientForBundleID:(id)arg1 pid:(int)arg2 createIfNecessary:(_Bool)arg3;	// IMP=0x0000000100149dc0
+ (id)clientForBundleID:(id)arg1 bundle:(id)arg2 pid:(int)arg3 createIfNecessary:(_Bool)arg4;	// IMP=0x00000001001494e0
+ (_Bool)isExtensionBundleID:(id)arg1;	// IMP=0x0000000100149394
+ (id)clientForProcessIdentifier:(int)arg1;	// IMP=0x000000010014932c
+ (id)clientForBundleID:(id)arg1;	// IMP=0x0000000100149314
+ (id)gameCenterClient;	// IMP=0x00000001001492f0
+ (id)_clientLookup;	// IMP=0x000000010014927c
+ (id)factoryQueue;	// IMP=0x0000000100149214
+ (void)saveAppInitState:(id)arg1 forBundleID:(id)arg2 pid:(int)arg3;	// IMP=0x000000010014d628
+ (id)lastKnownAppInitStateForClientWithBundleID:(id)arg1 pid:(int)arg2;	// IMP=0x000000010014d248
+ (void)authenticationDidChange;	// IMP=0x000000010014cd6c
+ (void)performDelayedRequestsForEnvironment:(long long)arg1;	// IMP=0x0000000100153c74
+ (id)storeAndForwardDirectoryPathForEnvironment:(long long)arg1;	// IMP=0x0000000100152c58
@property(copy, nonatomic) NSDictionary *preferencesFromBag; // @synthesize preferencesFromBag=_preferencesFromBag;
@property(retain, nonatomic) NSMapTable *extensionProxies; // @synthesize extensionProxies=_extensionProxies;
@property(retain, nonatomic) NSMutableSet *pendingDataTypesForRefresh; // @synthesize pendingDataTypesForRefresh=_pendingDataTypesForRefresh;
@property(retain, nonatomic) GKResourceManager *resourceManager; // @synthesize resourceManager=_resourceManager;
@property(retain, nonatomic) NSObject<OS_dispatch_queue> *cacheQueue; // @synthesize cacheQueue=_cacheQueue;
@property(retain, nonatomic) GKDatabaseConnection *delayedRequestsDBConnection; // @synthesize delayedRequestsDBConnection=_delayedRequestsDBConnection;
@property(retain, nonatomic) NSObject<OS_dispatch_queue> *delayedRequestsQueue; // @synthesize delayedRequestsQueue=_delayedRequestsQueue;
@property(retain, nonatomic) GKThreadsafeDictionary *appSessions; // @synthesize appSessions=_appSessions;
@property(retain) _GKStateMachine *initAppStateMachine; // @synthesize initAppStateMachine=_initAppStateMachine;
@property _Bool initialized; // @synthesize initialized=_initialized;
@property(retain) GKMatchResponse *currentMatchResponse; // @synthesize currentMatchResponse=_currentMatchResponse;
@property(retain) GKInviteSession *inviteSession; // @synthesize inviteSession=_inviteSession;
@property(retain, nonatomic) GKQuickAction *pendingQuickAction; // @synthesize pendingQuickAction=_pendingQuickAction;
@property(retain, nonatomic) GKEventTuple *launchEvent; // @synthesize launchEvent=_launchEvent;
@property unsigned int previousApplicationState; // @synthesize previousApplicationState=_previousApplicationState;
@property unsigned int applicationState; // @synthesize applicationState=_applicationState;
@property(retain, nonatomic) GKGameInternal *currentGame; // @synthesize currentGame=_currentGame;
@property(retain, nonatomic) NSString *language; // @synthesize language=_language;
@property(nonatomic) unsigned char scoresRateLimitedCurrentState; // @synthesize scoresRateLimitedCurrentState=_scoresRateLimitedCurrentState;
@property(nonatomic) long long scoresRateLimitingCurrentNumberOfRequests; // @synthesize scoresRateLimitingCurrentNumberOfRequests=_scoresRateLimitingCurrentNumberOfRequests;
@property(retain, nonatomic) NSDate *scoresRateLimitingStartDate; // @synthesize scoresRateLimitingStartDate=_scoresRateLimitingStartDate;
@property(nonatomic) unsigned char achievementsRateLimitedCurrentState; // @synthesize achievementsRateLimitedCurrentState=_achievementsRateLimitedCurrentState;
@property(nonatomic) long long achievementsRateLimitingCurrentNumberOfRequests; // @synthesize achievementsRateLimitingCurrentNumberOfRequests=_achievementsRateLimitingCurrentNumberOfRequests;
@property(retain, nonatomic) NSDate *achievementsRateLimitingStartDate; // @synthesize achievementsRateLimitingStartDate=_achievementsRateLimitingStartDate;
@property _Bool isOcelot; // @synthesize isOcelot=_isOcelot;
@property(nonatomic) _Bool supportsMultipleActivePlayers; // @synthesize supportsMultipleActivePlayers=_supportsMultipleActivePlayers;
@property(nonatomic) _Bool installed; // @synthesize installed=_installed;
@property(nonatomic) _Bool productionSigned; // @synthesize productionSigned=_productionSigned;
@property(nonatomic) _Bool deniedProductionEnvironment; // @synthesize deniedProductionEnvironment=_deniedProductionEnvironment;
@property(nonatomic) long long environment; // @synthesize environment=_environment;
@property(retain, nonatomic) NSString *bundleShortVersion; // @synthesize bundleShortVersion=_bundleShortVersion;
@property(retain, nonatomic) NSString *bundleVersion; // @synthesize bundleVersion=_bundleVersion;
@property(retain, nonatomic) NSString *bundleIdentifier; // @synthesize bundleIdentifier=_bundleIdentifier;
@property(retain, nonatomic) NSNumber *externalVersion; // @synthesize externalVersion=_externalVersion;
@property(retain, nonatomic) NSNumber *adamID; // @synthesize adamID=_adamID;
@property(retain) GKEntitlements *entitlements; // @synthesize entitlements=_entitlements;
@property(nonatomic) NSXPCConnection *connection; // @synthesize connection=_connection;
@property(nonatomic) int pid; // @synthesize pid=_pid;
@property(retain, nonatomic) NSObject<OS_dispatch_queue> *authQueue; // @synthesize authQueue=_authQueue;
@property(readonly, nonatomic) NSObject<OS_dispatch_queue> *replyQueue; // @synthesize replyQueue=_replyQueue;
- (void)deleteInviteSession;	// IMP=0x0000000100148ddc
- (void)cancelInvitationForSession:(id)arg1 playerID:(id)arg2 pushTokens:(id)arg3 handler:(CDUnknownBlockType)arg4;	// IMP=0x0000000100148980
- (_Bool)processMatchResponse:(id)arg1;	// IMP=0x0000000100148384
- (void)checkMatchStatus;	// IMP=0x0000000100148028
- (void)performAsync:(CDUnknownBlockType)arg1;	// IMP=0x0000000100147ff8
- (void)performSync:(CDUnknownBlockType)arg1;	// IMP=0x0000000100147ec0
- (void)setLaunchEvent:(unsigned long long)arg1 withContext:(id)arg2;	// IMP=0x0000000100147c48
- (void)updatePreferencesFromBag:(id)arg1;	// IMP=0x0000000100147c0c
- (void)setExtensionProxy:(id)arg1 forBundleID:(id)arg2;	// IMP=0x0000000100147b44
@property(nonatomic) GKClientProxy<GKUIViewService> *viewService; // @synthesize viewService=_weakViewService;
- (_Bool)isExtension;	// IMP=0x0000000100147b28
- (_Bool)isUIService;	// IMP=0x0000000100147b20
- (_Bool)isGameCenter;	// IMP=0x0000000100147af0
@property(readonly, nonatomic) NSLocale *locale; // @dynamic locale;
@property(readonly, nonatomic) NSDictionary *gameDescriptor;
- (_Bool)isEqual:(id)arg1;	// IMP=0x00000001001477d4
@property(readonly) unsigned long long hash;
@property(readonly, copy) NSString *description;
- (void)resetCache:(id)arg1;	// IMP=0x0000000100147710
- (void)_setupCache;	// IMP=0x000000010014770c
- (id)credentialForPlayer:(id)arg1;	// IMP=0x000000010014760c
- (id)transportWithCredential:(id)arg1;	// IMP=0x00000001001475a4
- (void)dealloc;	// IMP=0x0000000100147464
- (void)updateIfRecentlyInstalled;	// IMP=0x0000000100147168
- (id)initWithBundleIdentifier:(id)arg1 bundleOrNil:(id)arg2 pid:(int)arg3;	// IMP=0x0000000100146d7c
- (void)initializeInitializationStateMachine;	// IMP=0x0000000100146c34
- (void)invalidateStoreFrontDependentObjects;	// IMP=0x000000010007a8b0
- (id)transactionGroupIfCacheExistsForPlayer:(id)arg1;	// IMP=0x0000000100079850
- (id)transactionGroupForPlayer:(id)arg1;	// IMP=0x00000001000797ec
- (id)_managedObjectContextForPlayer:(id)arg1;	// IMP=0x00000001000796d0
- (void)handleCloudKitShareMetadata:(id)arg1 completionHandler:(CDUnknownBlockType)arg2;	// IMP=0x000000010014cb34
- (oneway void)resetLoginCancelCount;	// IMP=0x000000010014c914
- (oneway void)processQuickAction:(id)arg1;	// IMP=0x000000010014c8d8
- (oneway void)loadRemoteImageDataForURL:(id)arg1 reply:(CDUnknownBlockType)arg2;	// IMP=0x000000010014c884
- (oneway void)localizedMessageFromDictionary:(id)arg1 forBundleID:(id)arg2 handler:(CDUnknownBlockType)arg3;	// IMP=0x000000010014c7bc
- (oneway void)getAuthenticatedPlayerIDWithHandler:(CDUnknownBlockType)arg1;	// IMP=0x000000010014c70c
- (oneway void)getAccountNameWithHandler:(CDUnknownBlockType)arg1;	// IMP=0x000000010014c564
- (oneway void)getAuthenticatedLocalPlayersWithStatus:(unsigned long long)arg1 handler:(CDUnknownBlockType)arg2;	// IMP=0x000000010014bd44
- (oneway void)getAuthenticatedPlayerInfo:(CDUnknownBlockType)arg1;	// IMP=0x000000010014bacc
- (oneway void)getPrivateServicesForPID:(int)arg1 localPlayer:(id)arg2 reply:(CDUnknownBlockType)arg3;	// IMP=0x000000010014b740
- (oneway void)getServicesForPID:(int)arg1 localPlayer:(id)arg2 reply:(CDUnknownBlockType)arg3;	// IMP=0x000000010014b2e4
- (oneway void)getPrivateServicesWithTransport:(id)arg1 forClient:(id)arg2 reply:(CDUnknownBlockType)arg3;	// IMP=0x000000010014af50
- (oneway void)getServicesWithTransport:(id)arg1 forClient:(id)arg2 reply:(CDUnknownBlockType)arg3;	// IMP=0x000000010014aa00
- (oneway void)setTestGame:(id)arg1 reply:(CDUnknownBlockType)arg2;	// IMP=0x000000010014a9ec
- (oneway void)setHostPID:(int)arg1 reply:(CDUnknownBlockType)arg2;	// IMP=0x000000010014a9d8
- (id)serviceForClass:(Class)arg1 transport:(id)arg2 client:(id)arg3 credential:(id)arg4;	// IMP=0x000000010014a7c4
- (void)didEnterForeground;	// IMP=0x000000010014db94
- (void)updateAppInitState;	// IMP=0x000000010014daec
- (id)verifyAuthorized;	// IMP=0x000000010014d150
- (id)appInitState;	// IMP=0x000000010014d140
- (_Bool)setAppInitState:(id)arg1;	// IMP=0x000000010014d130
- (void)stateDidChange;	// IMP=0x000000010014d0c4
- (id)missingTransitionFromState:(id)arg1 toState:(id)arg2;	// IMP=0x000000010014cfbc
- (void)sendAuthenticationDidChangeNotificationWithCompletionHandler:(CDUnknownBlockType)arg1;	// IMP=0x000000010014cdc8
- (void)bgInitializeWithCredential:(id)arg1 completionHandler:(CDUnknownBlockType)arg2;	// IMP=0x0000000100152978
- (void)initializeWithCredential:(id)arg1 completionHandler:(CDUnknownBlockType)arg2;	// IMP=0x00000001001525c4
- (void)removeAppSessionForPlayer:(id)arg1;	// IMP=0x00000001001525b4
- (id)appSessionForPlayer:(id)arg1;	// IMP=0x000000010015256c
- (void)addAppSession:(id)arg1 forCredential:(id)arg2;	// IMP=0x00000001001524b4
- (void)backgroundWithCompletionHandler:(CDUnknownBlockType)arg1;	// IMP=0x0000000100151f78
- (void)terminateWithCompletionHandler:(CDUnknownBlockType)arg1;	// IMP=0x0000000100151a30
- (oneway void)setLogBits:(int)arg1;	// IMP=0x0000000100151848
- (oneway void)authenticatedPlayersDidChange:(id)arg1 reply:(CDUnknownBlockType)arg2;	// IMP=0x0000000100151318
- (oneway void)completedOptimisticAuthenticationWithResponse:(id)arg1 error:(id)arg2;	// IMP=0x00000001001512d0
- (oneway void)setCurrentGame:(id)arg1 serverEnvironment:(long long)arg2 reply:(CDUnknownBlockType)arg3;	// IMP=0x0000000100150f78
- (oneway void)setPreferencesValues:(id)arg1;	// IMP=0x0000000100150e98
- (oneway void)refreshPendingDataTypes;	// IMP=0x0000000100150da0
- (oneway void)refreshContentsForDataType:(unsigned int)arg1 userInfo:(id)arg2;	// IMP=0x00000001001508ec
- (oneway void)setBadgeCount:(unsigned long long)arg1 forType:(unsigned long long)arg2;	// IMP=0x000000010015075c
- (oneway void)session:(id)arg1 didReceiveMessage:(id)arg2 withData:(id)arg3 fromPlayer:(id)arg4;	// IMP=0x00000001001505f4
- (oneway void)session:(id)arg1 didReceiveData:(id)arg2 fromPlayer:(id)arg3;	// IMP=0x0000000100150494
- (oneway void)session:(id)arg1 player:(id)arg2 didSaveData:(id)arg3;	// IMP=0x0000000100150334
- (oneway void)session:(id)arg1 player:(id)arg2 didChangeConnectionState:(long long)arg3;	// IMP=0x00000001001501d4
- (oneway void)session:(id)arg1 removedPlayer:(id)arg2;	// IMP=0x0000000100150084
- (oneway void)session:(id)arg1 addedPlayer:(id)arg2;	// IMP=0x000000010014ff34
- (oneway void)localPlayerAcceptedCustomTournamentInvite;	// IMP=0x000000010014fda4
- (oneway void)didReceiveData:(id)arg1 reliably:(_Bool)arg2 forRecipients:(id)arg3 fromSender:(id)arg4;	// IMP=0x000000010014fc3c
- (oneway void)didDisconnectFromParticipantWithID:(id)arg1;	// IMP=0x000000010014faf4
- (oneway void)didConnectToParticipantWithID:(id)arg1;	// IMP=0x000000010014f9ac
- (oneway void)relayPushNotification:(id)arg1;	// IMP=0x000000010014f7c4
- (oneway void)cancelGameInvite:(id)arg1;	// IMP=0x000000010014f5dc
- (oneway void)declineInviteWithNotification:(id)arg1;	// IMP=0x000000010014f3f4
- (oneway void)acceptInviteWithNotification:(id)arg1;	// IMP=0x000000010014f20c
- (oneway void)acceptMultiplayerGameInvite;	// IMP=0x000000010014f078
- (oneway void)fetchTurnBasedData;	// IMP=0x000000010014ef1c
- (oneway void)achievementSelected:(id)arg1;	// IMP=0x000000010014edd4
- (oneway void)scoreSelected:(id)arg1;	// IMP=0x000000010014ec8c
- (oneway void)challengeCompleted:(id)arg1;	// IMP=0x000000010014eaec
- (oneway void)challengeReceived:(id)arg1;	// IMP=0x000000010014e9a4
- (oneway void)completedChallengeSelected:(id)arg1;	// IMP=0x000000010014e85c
- (oneway void)receivedChallengeSelected:(id)arg1;	// IMP=0x000000010014e714
- (oneway void)friendRequestSelected:(id)arg1;	// IMP=0x000000010014e57c
- (oneway void)respondedToNearbyInvite:(id)arg1;	// IMP=0x000000010014e434
- (oneway void)resetNetworkActivity;	// IMP=0x000000010014e2fc
- (oneway void)endNetworkActivity;	// IMP=0x000000010014e1c4
- (oneway void)beginNetworkActivity;	// IMP=0x000000010014e08c
- (void)performDelayedRequestsForCredential:(id)arg1;	// IMP=0x0000000100154ebc
- (void)performDelayedRequestsForEnvironment:(long long)arg1;	// IMP=0x0000000100154e1c
- (void)performPassThroughScoreRequestsForEnvironment:(long long)arg1;	// IMP=0x00000001001547b0
- (void)performPassThroughAchievementRequestsForEnvironment:(long long)arg1;	// IMP=0x0000000100154084
- (id)removeAllFriendsWriterWithCredential:(id)arg1;	// IMP=0x0000000100153bf8
- (id)removeFriendWriterWithCredential:(id)arg1;	// IMP=0x0000000100153b7c
- (id)removeGameWriterWithCredential:(id)arg1;	// IMP=0x0000000100153b00
- (id)deletePlayerPhotoWriterWithCredential:(id)arg1;	// IMP=0x0000000100153a84
- (id)setPlayerPhotoWriterWithCredential:(id)arg1;	// IMP=0x0000000100153a08
- (id)setPlayerStatusWriterWithCredential:(id)arg1;	// IMP=0x000000010015398c
- (id)abortChallengesWriterWithCredential:(id)arg1;	// IMP=0x0000000100153910
- (id)issueChallengesWriterWithCredential:(id)arg1;	// IMP=0x0000000100153894
- (id)submitAchievementsWriterWithCredential:(id)arg1;	// IMP=0x00000001001537fc
- (id)submitRatingsWriterWithCredential:(id)arg1;	// IMP=0x0000000100153780
- (id)submitScoresWriterWithCredential:(id)arg1;	// IMP=0x0000000100153704
- (id)_delayedRequestWriterWithCacheWriterClass:(Class)arg1 cacheReaderClass:(Class)arg2 networkWriterClass:(Class)arg3 bagKey:(id)arg4 batchSubmissionInterval:(long long)arg5 credential:(id)arg6;	// IMP=0x00000001001534ec
- (void)_removeDelayedRequestStore;	// IMP=0x0000000100153048
- (void)_setupDelayedRequestsWriters;	// IMP=0x0000000100152ec8
- (id)requestsCacheForEnvironment:(long long)arg1;	// IMP=0x0000000100152d40
- (id)storeAndForwardDirectoryPathForEnvironment:(long long)arg1;	// IMP=0x0000000100152d00

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly) Class superclass;

@end

