//
//     Generated by classdumpios 1.0.1 (64 bit) (iOS port by DreamDevLost)(Debug version compiled Sep 26 2020 13:48:20).
//
//  Copyright (C) 1997-2019 Steve Nygard.
//

#import "SOSAccountTrust.h"

__attribute__((visibility("hidden")))
@interface SOSAccountTrustClassic : SOSAccountTrust
{
}

+ (id)trustClassic;	// IMP=0x00000001001b06f4
- (void)resetRingDictionary;	// IMP=0x00000001001af748
- (void)addRingDictionary;	// IMP=0x00000001001af64c
- (_Bool)clientPing:(id)arg1;	// IMP=0x00000001001af554
- (_Bool)removeIncompleteiCloudIdentities:(struct __OpaqueSOSCircle *)arg1 privKey:(struct __SecKey *)arg2 err:(struct __CFError **)arg3;	// IMP=0x00000001001af444
- (struct __SecKey *)copyDeviceKey:(struct __CFError **)arg1;	// IMP=0x00000001001af3cc
- (_Bool)postDebugScope:(id)arg1 scope:(void *)arg2 err:(struct __CFError **)arg3;	// IMP=0x00000001001af3a4
- (struct __OpaqueSOSEngine *)getDataSourceEngine:(struct SOSDataSourceFactory *)arg1;	// IMP=0x00000001001af340
- (_Bool)isSyncingV0;	// IMP=0x00000001001af294
- (_Bool)requestSyncWithAllPeers:(id)arg1 key:(struct __SecKey *)arg2 err:(struct __CFError **)arg3;	// IMP=0x00000001001af158
- (struct __CFSet *)syncWithPeers:(id)arg1 peerIDs:(struct __CFSet *)arg2 err:(struct __CFError **)arg3;	// IMP=0x00000001001aef5c
- (char *)encodeToDER:(id)arg1 err:(id *)arg2 start:(const char *)arg3 end:(char *)arg4;	// IMP=0x00000001001aec5c
- (unsigned long long)getDEREncodedSize:(id)arg1 err:(id *)arg2;	// IMP=0x00000001001ae95c
- (struct __CFArray *)copySortedPeerArray:(struct __CFError **)arg1 action:(CDUnknownBlockType)arg2;	// IMP=0x00000001001ae8d0
- (_Bool)addEscrowToPeerInfo:(struct __OpaqueSOSFullPeerInfo *)arg1 err:(struct __CFError **)arg2;	// IMP=0x00000001001ae890
- (_Bool)addiCloudIdentity:(struct __OpaqueSOSCircle *)arg1 key:(struct __SecKey *)arg2 err:(struct __CFError **)arg3;	// IMP=0x00000001001ae604
- (struct __CFSet *)copyPreApprovedHSA2Info;	// IMP=0x00000001001ae5b8
- (_Bool)upgradeiCloudIdentity:(struct __OpaqueSOSCircle *)arg1 privKey:(struct __SecKey *)arg2;	// IMP=0x00000001001ae538
- (void)removeInvalidApplications:(struct __OpaqueSOSCircle *)arg1 userPublic:(struct __SecKey *)arg2;	// IMP=0x00000001001ae47c
- (_Bool)updatePeerInfo:(id)arg1 description:(struct __CFString *)arg2 err:(struct __CFError **)arg3 update:(CDUnknownBlockType)arg4;	// IMP=0x00000001001ae35c
- (_Bool)peerSignatureUpdate:(struct __SecKey *)arg1 err:(struct __CFError **)arg2;	// IMP=0x00000001001ae2f8
- (struct __CFArray *)copyPeersToListenTo:(struct __SecKey *)arg1 err:(struct __CFError **)arg2;	// IMP=0x00000001001ae268
- (struct __CFSet *)copyPeerSetMatching:(CDUnknownBlockType)arg1;	// IMP=0x00000001001ae19c
- (_Bool)isAccountIdentity:(struct __OpaqueSOSPeerInfo *)arg1 err:(struct __CFError **)arg2;	// IMP=0x00000001001ae14c
- (struct __OpaqueSOSPeerInfo *)copyPeerWithID:(struct __CFString *)arg1 err:(struct __CFError **)arg2;	// IMP=0x00000001001ae0e8
- (struct __SecKey *)copyPublicKeyForPeer:(struct __CFString *)arg1 err:(struct __CFError **)arg2;	// IMP=0x00000001001ae050
- (struct __CFSet *)copyPeerSetForView:(struct __CFString *)arg1;	// IMP=0x00000001001adfac
- (void)addSyncablePeerBlock:(id)arg1 dsName:(struct __CFString *)arg2 change:(CDUnknownBlockType)arg3;	// IMP=0x00000001001ade08
- (_Bool)updateViewSetsWithAnalytics:(id)arg1 enabled:(struct __CFSet *)arg2 disabled:(struct __CFSet *)arg3 parentEvent:(id)arg4;	// IMP=0x00000001001ad754
- (int)viewStatus:(id)arg1 name:(struct __CFString *)arg2 err:(struct __CFError **)arg3;	// IMP=0x00000001001ad540
- (_Bool)activeValidInCircle:(id)arg1 err:(struct __CFError **)arg2;	// IMP=0x00000001001ad4ac
- (int)updateView:(id)arg1 name:(struct __CFString *)arg2 code:(int)arg3 err:(struct __CFError **)arg4;	// IMP=0x00000001001ad138
- (_Bool)updateGestalt:(id)arg1 newGestalt:(struct __CFDictionary *)arg2;	// IMP=0x00000001001acf9c
- (id)initWithRetirees:(id)arg1 fpi:(struct __OpaqueSOSFullPeerInfo *)arg2 circle:(struct __OpaqueSOSCircle *)arg3 departureCode:(int)arg4 peerExpansion:(id)arg5;	// IMP=0x00000001001ace24
- (id)init;	// IMP=0x00000001001acd18
- (_Bool)cleanupAfterPeer:(id)arg1 circleTransport:(id)arg2 seconds:(unsigned long long)arg3 circle:(struct __OpaqueSOSCircle *)arg4 cleanupPeer:(struct __OpaqueSOSPeerInfo *)arg5 err:(struct __CFError **)arg6;	// IMP=0x00000001001a12e4
- (_Bool)cleanupRetirementTickets:(id)arg1 circle:(struct __OpaqueSOSCircle *)arg2 time:(unsigned long long)arg3 err:(struct __CFError **)arg4;	// IMP=0x00000001001a112c
- (_Bool)resetRing:(id)arg1 ringName:(struct __CFString *)arg2 err:(struct __CFError **)arg3;	// IMP=0x00000001001ac34c
- (struct __CFDictionary *)getRings:(struct __CFError **)arg1;	// IMP=0x00000001001ac2b4
- (struct __OpaqueSOSRing *)copyRing:(struct __CFString *)arg1 err:(struct __CFError **)arg2;	// IMP=0x00000001001ac218
- (_Bool)handleUpdateRing:(id)arg1 prospectiveRing:(struct __OpaqueSOSRing *)arg2 transport:(id)arg3 userPublicKey:(struct __SecKey *)arg4 writeUpdate:(_Bool)arg5 err:(struct __CFError **)arg6;	// IMP=0x00000001001aadd0
- (_Bool)setRing:(struct __OpaqueSOSRing *)arg1 ringName:(struct __CFString *)arg2 err:(struct __CFError **)arg3;	// IMP=0x00000001001aad38
- (_Bool)checkForRings:(struct __CFError **)arg1;	// IMP=0x00000001001aac18
- (void)setRings:(struct __CFDictionary *)arg1;	// IMP=0x00000001001aabc8
- (_Bool)resetAccountToEmptyWithAnalytics:(id)arg1 transport:(id)arg2 parentEvent:(id)arg3 err:(struct __CFError **)arg4;	// IMP=0x00000001001aa790
- (_Bool)resetAccountToEmpty:(id)arg1 transport:(id)arg2 err:(struct __CFError **)arg3;	// IMP=0x00000001001aa728
- (_Bool)resetAllRings:(id)arg1 err:(struct __CFError **)arg2;	// IMP=0x00000001001aa5a8
- (_Bool)forEachRing:(CDUnknownBlockType)arg1;	// IMP=0x00000001001aa33c
- (_Bool)updateV2Dictionary:(id)arg1 v2:(struct __CFDictionary *)arg2;	// IMP=0x00000001001aa208
- (void)pendEnableViewSet:(struct __CFSet *)arg1;	// IMP=0x00000001001aa134
- (void)valueSubtractFrom:(struct __CFString *)arg1 valuesToSubtract:(struct __CFSet *)arg2;	// IMP=0x00000001001aa044
- (void)valueUnionWith:(struct __CFString *)arg1 valuesToUnion:(struct __CFSet *)arg2;	// IMP=0x00000001001a9f50
- (_Bool)valueSetContainsValue:(struct __CFString *)arg1 value:(void *)arg2;	// IMP=0x00000001001a9ee4
- (_Bool)setValueInExpansion:(struct __CFString *)arg1 value:(void *)arg2 err:(struct __CFError **)arg3;	// IMP=0x00000001001a9e3c
- (_Bool)clearValueFromExpansion:(struct __CFString *)arg1 err:(struct __CFError **)arg2;	// IMP=0x00000001001a9dc4
- (_Bool)ensureExpansion:(struct __CFError **)arg1;	// IMP=0x00000001001a9d04
- (void *)getValueFromExpansion:(struct __CFString *)arg1 err:(struct __CFError **)arg2;	// IMP=0x00000001001a9c78
- (_Bool)joinCircle:(id)arg1 userKey:(struct __SecKey *)arg2 useCloudPeer:(_Bool)arg3 err:(struct __CFError **)arg4;	// IMP=0x00000001001c3114
- (_Bool)resetCircleToOffering:(id)arg1 userKey:(struct __SecKey *)arg2 err:(struct __CFError **)arg3;	// IMP=0x00000001001c2f0c
- (_Bool)resetToOffering:(id)arg1 key:(struct __SecKey *)arg2 err:(struct __CFError **)arg3;	// IMP=0x00000001001c2e0c
- (_Bool)leaveCircle:(id)arg1 err:(struct __CFError **)arg2;	// IMP=0x00000001001c2cb4
- (_Bool)leaveCircleWithAccount:(id)arg1 withAnalytics:(id)arg2 err:(struct __CFError **)arg3;	// IMP=0x00000001001c2b40
- (void)forEachCirclePeerExceptMe:(CDUnknownBlockType)arg1;	// IMP=0x00000001001c2a3c
- (void)generationSignatureUpdateWith:(id)arg1 key:(struct __SecKey *)arg2;	// IMP=0x00000001001c287c
- (_Bool)fixICloudIdentities:(id)arg1 circle:(struct __OpaqueSOSCircle *)arg2;	// IMP=0x00000001001c24e0
- (_Bool)modifyCircle:(id)arg1 err:(struct __CFError **)arg2 action:(CDUnknownBlockType)arg3;	// IMP=0x00000001001c23d4
- (_Bool)updateCircle:(id)arg1 newCircle:(struct __OpaqueSOSCircle *)arg2 err:(struct __CFError **)arg3;	// IMP=0x00000001001c23b4
- (_Bool)updateCircleFromRemote:(id)arg1 newCircle:(struct __OpaqueSOSCircle *)arg2 err:(struct __CFError **)arg3;	// IMP=0x00000001001c2394
- (_Bool)handleUpdateCircle:(struct __OpaqueSOSCircle *)arg1 transport:(id)arg2 update:(_Bool)arg3 err:(struct __CFError **)arg4;	// IMP=0x00000001001c0840
- (id)iCloudCleanerHandle:(id)arg1;	// IMP=0x00000001001c07a0
- (id)iCloudCheckEventHandle:(id)arg1;	// IMP=0x00000001001c0700
- (_Bool)checkForSponsorshipTrust:(struct __OpaqueSOSCircle *)arg1;	// IMP=0x00000001001c062c
- (_Bool)ghostBustingOK:(struct __OpaqueSOSCircle *)arg1 updatingTo:(struct __OpaqueSOSCircle *)arg2;	// IMP=0x00000001001c0534
- (_Bool)hasLeft;	// IMP=0x00000001001c04f4
- (struct __OpaqueSOSCircle *)ensureCircle:(id)arg1 name:(struct __CFString *)arg2 err:(struct __CFError **)arg3;	// IMP=0x00000001001c03e0
- (struct __OpaqueSOSCircle *)getCircle:(struct __CFError **)arg1;	// IMP=0x00000001001c036c
- (int)getCircleStatusOnly:(struct __CFError **)arg1;	// IMP=0x00000001001c031c
- (int)thisDeviceStatusInCircle:(struct __OpaqueSOSCircle *)arg1 peer:(struct __OpaqueSOSPeerInfo *)arg2;	// IMP=0x00000001001c0298
- (_Bool)hasCircle:(struct __CFError **)arg1;	// IMP=0x00000001001c022c
- (_Bool)isInCircleOnly:(struct __CFError **)arg1;	// IMP=0x00000001001c01dc
- (void)purgeIdentity;	// IMP=0x00000001001e185c
- (_Bool)isMyPeerActive:(struct __CFError **)arg1;	// IMP=0x00000001001e17e4
- (_Bool)ensureFullPeerAvailable:(struct __CFDictionary *)arg1 deviceID:(struct __CFString *)arg2 backupKey:(struct __CFData *)arg3 err:(struct __CFError **)arg4;	// IMP=0x00000001001e1320
- (void)ensureOctagonPeerKeys:(id)arg1;	// IMP=0x00000001001e08e4
- (_Bool)haveConfirmedOctagonKeys;	// IMP=0x00000001001e0710
- (struct __SecKey *)randomPermanentFullECKey:(int)arg1 name:(id)arg2 error:(struct __CFError **)arg3;	// IMP=0x00000001001e06ec
- (struct __OpaqueSOSFullPeerInfo *)CopyAccountIdentityPeerInfo;	// IMP=0x00000001001e06d0
- (_Bool)hasFullPeerInfo:(struct __CFError **)arg1;	// IMP=0x00000001001e0664
- (_Bool)fullPeerInfoVerify:(struct __SecKey *)arg1 err:(struct __CFError **)arg2;	// IMP=0x00000001001e05e4
- (struct __OpaqueSOSFullPeerInfo *)getMyFullPeerInfo;	// IMP=0x00000001001e05a0
- (_Bool)updateFullPeerInfo:(id)arg1 minimum:(struct __CFSet *)arg2 excluded:(struct __CFSet *)arg3;	// IMP=0x00000001001e0494
- (_Bool)isLockedError:(id)arg1;	// IMP=0x00000001001e03ec

@end

