//
//     Generated by classdumpios 1.0.1 (64 bit) (iOS port by DreamDevLost)(Debug version compiled Sep 26 2020 13:48:20).
//
//  Copyright (C) 1997-2019 Steve Nygard.
//

#import "CKKSCKRecordHolder.h"

@class CKKSAESSIVKey, CKKSKeychainBackedKey, CKKSWrappedAESSIVKey, NSString;
@protocol SecCKKSKeyClass, SecCKKSProcessedState;

__attribute__((visibility("hidden")))
@interface CKKSKey : CKKSCKRecordHolder
{
    _Bool _currentkey;	// 8 = 0x8
    CKKSKeychainBackedKey *_keycore;	// 16 = 0x10
    NSString<SecCKKSProcessedState> *_state;	// 24 = 0x18
}

+ (id)loadFromProtobuf:(id)arg1 error:(id *)arg2;	// IMP=0x00000001000cb724
+ (id)countsByClass:(id)arg1 error:(id *)arg2;	// IMP=0x00000001000cb4b0
+ (id)fromDatabaseRow:(id)arg1;	// IMP=0x00000001000cb118
+ (id)sqlColumns;	// IMP=0x00000001000cb050
+ (id)sqlTable;	// IMP=0x00000001000cb044
+ (id)localKeys:(id)arg1 error:(id *)arg2;	// IMP=0x00000001000caf3c
+ (id)remoteKeys:(id)arg1 error:(id *)arg2;	// IMP=0x00000001000cae34
+ (id)allKeys:(id)arg1 error:(id *)arg2;	// IMP=0x00000001000cad48
+ (id)currentKeysForClass:(id)arg1 state:(id)arg2 zoneID:(id)arg3 error:(id *)arg4;	// IMP=0x00000001000cabdc
+ (id)currentKeyForClass:(id)arg1 zoneID:(id)arg2 error:(id *)arg3;	// IMP=0x00000001000caaf0
+ (id)selfWrappedKeys:(id)arg1 error:(id *)arg2;	// IMP=0x00000001000ca988
+ (id)tryFromDatabaseAnyState:(id)arg1 zoneID:(id)arg2 error:(id *)arg3;	// IMP=0x00000001000ca868
+ (id)tryFromDatabase:(id)arg1 zoneID:(id)arg2 error:(id *)arg3;	// IMP=0x00000001000ca734
+ (id)fromDatabaseAnyState:(id)arg1 zoneID:(id)arg2 error:(id *)arg3;	// IMP=0x00000001000ca614
+ (id)fromDatabase:(id)arg1 zoneID:(id)arg2 error:(id *)arg3;	// IMP=0x00000001000ca4e0
+ (id)isItemKeyForKeychainView:(struct SecDbItem *)arg1;	// IMP=0x00000001000ca208
+ (id)keyFromKeychain:(id)arg1 parentKeyUUID:(id)arg2 keyclass:(id)arg3 state:(id)arg4 zoneID:(id)arg5 encodedCKRecord:(id)arg6 currentkey:(long long)arg7 error:(id *)arg8;	// IMP=0x00000001000ca0c8
+ (id)randomKeyWrappedBySelf:(id)arg1 error:(id *)arg2;	// IMP=0x00000001000c9fc4
+ (id)randomKeyWrappedByParent:(id)arg1 keyclass:(id)arg2 error:(id *)arg3;	// IMP=0x00000001000c9e70
+ (id)randomKeyWrappedByParent:(id)arg1 error:(id *)arg2;	// IMP=0x00000001000c9de4
+ (id)loadKeyWithUUID:(id)arg1 zoneID:(id)arg2 error:(id *)arg3;	// IMP=0x00000001000c9d3c
- (void).cxx_destruct;	// IMP=0x00000001000c9cfc
@property _Bool currentkey; // @synthesize currentkey=_currentkey;
@property(copy) NSString<SecCKKSProcessedState> *state; // @synthesize state=_state;
@property(retain) CKKSKeychainBackedKey *keycore; // @synthesize keycore=_keycore;
- (id)serializeAsProtobuf:(id *)arg1;	// IMP=0x00000001000c9ac0
- (id)copyWithZone:(struct _NSZone *)arg1;	// IMP=0x00000001000c9a14
- (id)sqlValues;	// IMP=0x00000001000c9608
- (id)whereClauseToFindSelf;	// IMP=0x00000001000c94c0
- (id)description;	// IMP=0x00000001000c936c
- (_Bool)matchesCKRecord:(id)arg1;	// IMP=0x00000001000c8f14
- (id)updateCKRecord:(id)arg1 zoneID:(id)arg2;	// IMP=0x00000001000c8be4
- (void)setFromCKRecord:(id)arg1;	// IMP=0x00000001000c87d0
- (id)CKRecordName;	// IMP=0x00000001000c877c
- (_Bool)saveToDatabaseAsOnlyCurrentKeyForClassAndState:(id *)arg1;	// IMP=0x00000001000c8554
- (_Bool)deleteKeyMaterialFromKeychain:(id *)arg1;	// IMP=0x00000001000c8500
- (_Bool)loadKeyMaterialFromKeychain:(id *)arg1;	// IMP=0x00000001000c84ac
- (_Bool)saveKeyMaterialToKeychain:(_Bool)arg1 error:(id *)arg2;	// IMP=0x00000001000c8448
- (_Bool)saveKeyMaterialToKeychain:(id *)arg1;	// IMP=0x00000001000c83f0
- (id)decryptData:(id)arg1 authenticatedData:(id)arg2 error:(id *)arg3;	// IMP=0x00000001000c8344
- (id)encryptData:(id)arg1 authenticatedData:(id)arg2 error:(id *)arg3;	// IMP=0x00000001000c8298
- (id)unwrapAESKey:(id)arg1 error:(id *)arg2;	// IMP=0x00000001000c8210
- (id)wrapAESKey:(id)arg1 error:(id *)arg2;	// IMP=0x00000001000c8188
- (_Bool)trySelfWrappedKeyCandidate:(id)arg1 error:(id *)arg2;	// IMP=0x00000001000c8108
- (id)unwrapViaKeyHierarchy:(id *)arg1;	// IMP=0x00000001000c7dd0
- (id)ensureKeyLoaded:(id *)arg1;	// IMP=0x00000001000c7bdc
- (id)topKeyInAnyState:(id *)arg1;	// IMP=0x00000001000c78e0
- (_Bool)wrapUnder:(id)arg1 error:(id *)arg2;	// IMP=0x00000001000c783c
- (_Bool)wrapsSelf;	// IMP=0x00000001000c77f0
@property(readonly) CKKSAESSIVKey *aessivkey;
@property(copy) CKKSWrappedAESSIVKey *wrappedkey;
@property(copy) NSString<SecCKKSKeyClass> *keyclass;
@property(retain) NSString *parentKeyUUID;
@property(retain) NSString *uuid;
- (_Bool)isEqual:(id)arg1;	// IMP=0x00000001000c73c0
- (void)dealloc;	// IMP=0x00000001000c738c
- (id)initWithKeyCore:(id)arg1;	// IMP=0x00000001000c72b8
- (id)initWithWrappedAESKey:(id)arg1 uuid:(id)arg2 parentKeyUUID:(id)arg3 keyclass:(id)arg4 state:(id)arg5 zoneID:(id)arg6 encodedCKRecord:(id)arg7 currentkey:(long long)arg8;	// IMP=0x00000001000c713c
- (id)initWrappedBy:(id)arg1 AESKey:(id)arg2 uuid:(id)arg3 keyclass:(id)arg4 state:(id)arg5 zoneID:(id)arg6 encodedCKRecord:(id)arg7 currentkey:(long long)arg8;	// IMP=0x00000001000c6f70
- (id)initSelfWrappedWithAESKey:(id)arg1 uuid:(id)arg2 keyclass:(id)arg3 state:(id)arg4 zoneID:(id)arg5 encodedCKRecord:(id)arg6 currentkey:(long long)arg7;	// IMP=0x00000001000c6df4
- (id)init;	// IMP=0x00000001000c6dc0

@end

