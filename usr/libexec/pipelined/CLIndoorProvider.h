//
//     Generated by classdumpios 1.0.1 (64 bit) (iOS port by DreamDevLost)(Debug version compiled Sep 26 2020 13:48:20).
//
//  Copyright (C) 1997-2019 Steve Nygard.
//

#import <objc/NSObject.h>

#import "CLIndoorProtocolPrivate-Protocol.h"

@class CLAvailableVenuesStateMachine, CLGpsPosition, CLIndoorForegroundFetchRequest, CLIndoorLocation, CLIndoorTilePrefetcher, CLIndoorUniverse, NSString, NSURL, NSXPCConnection;

@interface CLIndoorProvider : NSObject <CLIndoorProtocolPrivate>
{
    struct optional<DeferredState> _deferredState;	// 8 = 0x8
    struct unique_ptr<FloorEnvironmentLoader, std::__1::default_delete<FloorEnvironmentLoader>> _floorEnvironmentLoader;	// 64 = 0x40
    struct unique_ptr<LocalizerApi, std::__1::default_delete<LocalizerApi>> _serviceLocalizer;	// 72 = 0x48
    struct optional<DataRun> _simulation;	// 80 = 0x50
    struct shared_ptr<PlatformInfo> _platformInfo;	// 136 = 0x88
    struct shared_ptr<_EventBusCollection> _eventBuses;	// 152 = 0x98
    struct shared_ptr<SensorCollection> _localizationSensorCollection;	// 168 = 0xa8
    struct shared_ptr<DynamicScanPriorityObserver> _scanPriorityObserver;	// 184 = 0xb8
    struct optional<DispatchLocalizerObserver> _localizerObserver;	// 200 = 0xc8
    struct optional<DispatchPossibleLocationTrackerObserver> _possibleLocationObserver;	// 224 = 0xe0
    struct shared_ptr<sensors::CombinedLogger> _sensorLogger;	// 248 = 0xf8
    optional_4453896d _paramOverrides;	// 264 = 0x108
    struct optional<Params> _params;	// 552 = 0x228
    CLGpsPosition *_lastOutdoorPositionAvailable;	// 576 = 0x240
    CLGpsPosition *_lastGpsPositionAvailable;	// 584 = 0x248
    duration_673274cf _lastGpsReceivedTime;	// 592 = 0x250
    CLAvailableVenuesStateMachine *_avlVenuesStateMachine;	// 600 = 0x258
    _Bool _localizationActive;	// 608 = 0x260
    _Bool _localizationStarted;	// 609 = 0x261
    _Bool _demoRunStarted;	// 610 = 0x262
    _Bool _isRegionalEnabled;	// 611 = 0x263
    int _prefetchFloorLimitIndoor;	// 612 = 0x264
    int _prefetchFloorLimitRegional;	// 616 = 0x268
    int _prefetchByteSizeLimitIndoor;	// 620 = 0x26c
    int _prefetchByteSizeLimitRegional;	// 624 = 0x270
    float _numOfDaysBeforeIndoorTileRedownload;	// 628 = 0x274
    float _numOfDaysBeforeRegionalTileRedownload;	// 632 = 0x278
    NSXPCConnection *_xpcConnection;	// 640 = 0x280
    CLIndoorTilePrefetcher *_prefetcher;	// 648 = 0x288
    NSURL *_workdir;	// 656 = 0x290
    CLIndoorLocation *_latestFix;	// 664 = 0x298
    CLIndoorUniverse *_indoorUniverse;	// 672 = 0x2a0
    CLIndoorForegroundFetchRequest *_currentForegroundFetchRequest;	// 680 = 0x2a8
    shared_ptr_00a9cfce _fsDb;	// 688 = 0x2b0
    optional_222981b3 _selectedLocation;	// 704 = 0x2c0
}

+ (id)getAvailabilityTilePathFromWorkdir:(id)arg1;	// IMP=0x000000010037673c
+ (id)makeReason:(id)arg1 withCode:(long long)arg2 withInfo:(id)arg3;	// IMP=0x0000000100376414
+ (id)makeReason:(id)arg1 withCode:(long long)arg2 withFailure:(id)arg3;	// IMP=0x00000001003762d0
- (id).cxx_construct;	// IMP=0x0000000100381864
- (void).cxx_destruct;	// IMP=0x0000000100381534
@property(nonatomic) optional_222981b3 selectedLocation; // @synthesize selectedLocation=_selectedLocation;
@property(retain, nonatomic) CLIndoorForegroundFetchRequest *currentForegroundFetchRequest; // @synthesize currentForegroundFetchRequest=_currentForegroundFetchRequest;
@property(retain, nonatomic) CLIndoorUniverse *indoorUniverse; // @synthesize indoorUniverse=_indoorUniverse;
@property(nonatomic) _Bool isRegionalEnabled; // @synthesize isRegionalEnabled=_isRegionalEnabled;
@property(retain, nonatomic) CLIndoorLocation *latestFix; // @synthesize latestFix=_latestFix;
@property(nonatomic) _Bool demoRunStarted; // @synthesize demoRunStarted=_demoRunStarted;
@property(nonatomic) _Bool localizationStarted; // @synthesize localizationStarted=_localizationStarted;
@property(nonatomic) _Bool localizationActive; // @synthesize localizationActive=_localizationActive;
@property(nonatomic) float numOfDaysBeforeRegionalTileRedownload; // @synthesize numOfDaysBeforeRegionalTileRedownload=_numOfDaysBeforeRegionalTileRedownload;
@property(nonatomic) float numOfDaysBeforeIndoorTileRedownload; // @synthesize numOfDaysBeforeIndoorTileRedownload=_numOfDaysBeforeIndoorTileRedownload;
@property(nonatomic) int prefetchByteSizeLimitRegional; // @synthesize prefetchByteSizeLimitRegional=_prefetchByteSizeLimitRegional;
@property(nonatomic) int prefetchByteSizeLimitIndoor; // @synthesize prefetchByteSizeLimitIndoor=_prefetchByteSizeLimitIndoor;
@property(nonatomic) int prefetchFloorLimitRegional; // @synthesize prefetchFloorLimitRegional=_prefetchFloorLimitRegional;
@property(nonatomic) int prefetchFloorLimitIndoor; // @synthesize prefetchFloorLimitIndoor=_prefetchFloorLimitIndoor;
@property(copy, nonatomic) NSURL *workdir; // @synthesize workdir=_workdir;
@property(nonatomic) __weak CLIndoorTilePrefetcher *prefetcher; // @synthesize prefetcher=_prefetcher;
@property(nonatomic) shared_ptr_00a9cfce fsDb; // @synthesize fsDb=_fsDb;
@property(nonatomic) __weak NSXPCConnection *xpcConnection; // @synthesize xpcConnection=_xpcConnection;
- (void)gpsSignalQualityAvailable:(id)arg1;	// IMP=0x0000000100381280
- (void)gpsEstimateAvailable:(id)arg1;	// IMP=0x0000000100380d40
- (void)outdoorLocationAvailable:(id)arg1;	// IMP=0x0000000100380570
- (void)updateUniverseIfAllowedAndNecessary:(CDStruct_4d1fbe9a)arg1;	// IMP=0x000000010037ff18
- (void)initializeIndoorUniverse:(id)arg1 atLocation:(id)arg2;	// IMP=0x000000010037f930
- (void)stopLocalizer;	// IMP=0x000000010037f604
- (void)onQueueStopUpdatingLocation:(int)arg1;	// IMP=0x000000010037f430
- (void)stopUpdatingLocation;	// IMP=0x000000010037f420
- (void)onQueueInterruptDownloads:(int)arg1;	// IMP=0x000000010037f3e4
- (void)startLocalizer;	// IMP=0x000000010037d888
- (void)startUpdatingLocationAtLocation:(id)arg1;	// IMP=0x000000010037cb54
- (void)startUpdatingLocationDeferred:(id)arg1;	// IMP=0x000000010037c6fc
- (void)onQueueLocalizeOnSelection:(const struct SelectedLocations *)arg1 withParameterOverrides:(optional_4453896d)arg2;	// IMP=0x000000010037bd7c
- (id)initializeServiceApi;	// IMP=0x000000010037b89c
- (void)setLocationGroups:(id)arg1;	// IMP=0x000000010037b120
- (void)playbackDatarun:(id)arg1;	// IMP=0x000000010037a4cc
- (_Bool)onQueueProcessCompletedFetch:(id)arg1;	// IMP=0x0000000100379af8
- (void)requestForegroundTileDownload;	// IMP=0x00000001003797e4
- (void)foregroundRequestCompleted:(id)arg1 withError:(id)arg2;	// IMP=0x00000001003791fc
- (void)foregroundRequestCompleted:(id)arg1;	// IMP=0x0000000100378de8
- (void)foregroundTileDownloadComplete;	// IMP=0x0000000100378348
- (void)onQueueSelectedLocationDownloadCompleted:(const struct SelectedLocations *)arg1 forAction:(unsigned char)arg2;	// IMP=0x0000000100378154
- (void)changeLocationGroups:(id)arg1;	// IMP=0x0000000100378068
- (void)requestLocationTilesForGroup:(id)arg1 usingAvailabilityTile:(const struct AvailabilityData *)arg2 forAction:(unsigned char)arg3;	// IMP=0x0000000100377ad8
- (id)locationRequests:(id)arg1 usingAvailabilityTile:(const struct AvailabilityData *)arg2 forAction:(unsigned char)arg3;	// IMP=0x0000000100376adc
- (id)getAvailabilityTileParserAndSetParams:(id)arg1;	// IMP=0x00000001003767c4
- (void)notify:(id)arg1 failedWithReason:(id)arg2;	// IMP=0x0000000100376224
- (void)notifyProxyOfDownloadError:(id)arg1;	// IMP=0x0000000100375f38
- (void)notifyProxyOfDownloadError;	// IMP=0x0000000100375ebc
- (void)setApiKey:(id)arg1 onServer:(id)arg2;	// IMP=0x0000000100375e20
- (void)setApiKey:(id)arg1;	// IMP=0x0000000100375d84
- (void)onConnectionQueueShutdown;	// IMP=0x0000000100375b24
- (void)onQueueInvalidate:(int)arg1;	// IMP=0x0000000100375460
- (void)dealloc;	// IMP=0x0000000100375274
- (void)onQueueNotifyLocationContext:(_Bool)arg1 withLocationContext:(int)arg2;	// IMP=0x0000000100375180
- (void)onQueueNotify:(const struct PoseEstimate *)arg1;	// IMP=0x0000000100374ae0
- (struct DeferredState *)mutableDeferredState;	// IMP=0x0000000100374764
- (id)initWithConnection:(id)arg1;	// IMP=0x0000000100373bdc
- (id)init;	// IMP=0x0000000100373b8c

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

