//
//     Generated by classdumpios 1.0.1 (64 bit) (iOS port by DreamDevLost)(Debug version compiled Sep 26 2020 13:48:20).
//
//  Copyright (C) 1997-2019 Steve Nygard.
//

#import <objc/NSObject.h>

#import "AVVoiceControllerRecordDelegate-Protocol.h"
#import "CSAudioDecoderDelegate-Protocol.h"
#import "CSAudioFileReaderDelegate-Protocol.h"

@class AVVoiceController, CSAudioFileReader, CSRemoteRecordClient, NSDictionary, NSHashTable, NSMutableDictionary, NSString;
@protocol OS_dispatch_queue;

@interface CSAudioRecorder : NSObject <AVVoiceControllerRecordDelegate, CSAudioDecoderDelegate, CSAudioFileReaderDelegate>
{
    AVVoiceController *_voiceController;	// 8 = 0x8
    struct OpaqueAudioConverter *_deinterleaver;	// 16 = 0x10
    struct AudioBufferList _interleavedABL;	// 24 = 0x18
    struct AudioBufferList *_pNonInterleavedABL;	// 48 = 0x30
    CSRemoteRecordClient *_remoteRecordClient;	// 56 = 0x38
    NSDictionary *_latestContext;	// 64 = 0x40
    _Bool _shouldUseRemoteRecord;	// 72 = 0x48
    NSMutableDictionary *_opusDecoders;	// 80 = 0x50
    CSAudioFileReader *_audioFileReader;	// 88 = 0x58
    unsigned long long _audioFilePathIndex;	// 96 = 0x60
    _Bool _waitingForDidStart;	// 104 = 0x68
    _Bool _holdingPrewarmException;	// 105 = 0x69
    NSObject<OS_dispatch_queue> *_queue;	// 112 = 0x70
    NSHashTable *_observers;	// 120 = 0x78
}

+ (void)createSharedAudioSession;	// IMP=0x00000001000479f0
+ (unsigned long long)_convertDeactivateOption:(unsigned long long)arg1;	// IMP=0x00000001000479e4
- (void).cxx_destruct;	// IMP=0x000000010004bef0
@property _Bool holdingPrewarmException; // @synthesize holdingPrewarmException=_holdingPrewarmException;
@property(retain, nonatomic) NSHashTable *observers; // @synthesize observers=_observers;
@property(retain, nonatomic) NSObject<OS_dispatch_queue> *queue; // @synthesize queue=_queue;
- (id)_getRecordSettingsWithRequest:(id)arg1;	// IMP=0x000000010004bb64
- (void)audioFileReaderDidStopRecording:(id)arg1 forReason:(long long)arg2;	// IMP=0x000000010004bb50
- (void)audioFileReaderDidStartRecording:(id)arg1 successfully:(_Bool)arg2 error:(id)arg3;	// IMP=0x000000010004bab0
- (void)audioFileReaderBufferAvailable:(id)arg1 buffer:(id)arg2 atTime:(unsigned long long)arg3;	// IMP=0x000000010004ba94
- (_Bool)_needResetAudioInjectionIndex:(id)arg1;	// IMP=0x000000010004b9c4
- (void)_createDeInterleaverIfNeeded;	// IMP=0x000000010004b844
- (id)_deinterleaveBufferIfNeeded:(id)arg1;	// IMP=0x000000010004b5ec
- (void)voiceControllerMediaServicesWereReset:(id)arg1;	// IMP=0x000000010004b548
- (void)voiceControllerMediaServicesWereLost:(id)arg1;	// IMP=0x000000010004b2c0
- (void)voiceControllerDidSetAudioSessionActive:(id)arg1 isActivated:(_Bool)arg2;	// IMP=0x000000010004b044
- (void)voiceControllerWillSetAudioSessionActive:(id)arg1 willActivate:(_Bool)arg2;	// IMP=0x000000010004adc8
- (void)voiceControllerEndRecordInterruption:(id)arg1;	// IMP=0x000000010004abac
- (void)voiceControllerBeginRecordInterruption:(id)arg1 withContext:(id)arg2;	// IMP=0x000000010004a93c
- (void)voiceControllerBeginRecordInterruption:(id)arg1;	// IMP=0x000000010004a720
- (void)voiceControllerEncoderErrorDidOccur:(id)arg1 error:(id)arg2;	// IMP=0x000000010004a488
- (void)voiceControllerDidFinishAlertPlayback:(id)arg1 ofType:(int)arg2 error:(id)arg3;	// IMP=0x000000010004a200
- (void)voiceControllerRecordHardwareConfigurationDidChange:(id)arg1 toConfiguration:(int)arg2;	// IMP=0x0000000100049fc4
- (void)voiceControllerStreamInvalidated:(id)arg1 forStream:(unsigned long long)arg2;	// IMP=0x0000000100049d90
- (void)voiceControllerDidStopRecording:(id)arg1 forStream:(unsigned long long)arg2 forReason:(long long)arg3;	// IMP=0x0000000100049c34
- (void)voiceControllerAudioCallback:(id)arg1 forStream:(unsigned long long)arg2 buffer:(id)arg3;	// IMP=0x0000000100049ad0
- (void)voiceControllerDidStartRecording:(id)arg1 forStream:(unsigned long long)arg2 successfully:(_Bool)arg3 error:(id)arg4;	// IMP=0x00000001000498fc
- (void)_audioRecorderDidStopRecordingForReason:(long long)arg1 streamHandleID:(unsigned long long)arg2;	// IMP=0x00000001000497a0
- (void)_audioRecorderDidStartRecordingSuccessfully:(_Bool)arg1 streamHandleID:(unsigned long long)arg2 error:(id)arg3;	// IMP=0x0000000100049640
- (id)metrics;	// IMP=0x0000000100049630
- (float)averagePowerForChannel:(unsigned long long)arg1;	// IMP=0x0000000100049628
- (float)peakPowerForChannel:(unsigned long long)arg1;	// IMP=0x0000000100049620
- (void)updateMeters;	// IMP=0x000000010004961c
- (void)setMeteringEnabled:(_Bool)arg1;	// IMP=0x0000000100049618
- (unsigned long long)alertStartTime;	// IMP=0x0000000100049608
- (_Bool)playAlertSoundForType:(long long)arg1;	// IMP=0x0000000100049530
- (_Bool)playRecordStartingAlertAndResetEndpointerFromStream:(unsigned long long)arg1;	// IMP=0x000000010004946c
- (_Bool)setAlertSoundFromURL:(id)arg1 forType:(long long)arg2;	// IMP=0x000000010004945c
- (void)audioDecoderDidDecodePackets:(id)arg1 audioStreamHandleId:(unsigned long long)arg2 buffer:(id)arg3 remoteVAD:(id)arg4 timestamp:(unsigned long long)arg5 receivedNumChannels:(unsigned int)arg6;	// IMP=0x0000000100049220
- (id)_compensateChannelDataIfNeeded:(id)arg1 receivedNumChannels:(unsigned int)arg2;	// IMP=0x0000000100049024
- (void)_processAudioBuffer:(id)arg1 audioStreamHandleId:(unsigned long long)arg2;	// IMP=0x00000001000485f8
- (void)_processAudioChain:(id)arg1 audioStreamHandleId:(unsigned long long)arg2 remoteVAD:(id)arg3 atTime:(unsigned long long)arg4;	// IMP=0x00000001000483ec
- (_Bool)_shouldUseRemoteBuiltInMic:(id)arg1;	// IMP=0x0000000100048384
- (_Bool)_shouldUseRemoteRecordForContext:(id)arg1;	// IMP=0x000000010004837c
- (id)voiceTriggerInfo;	// IMP=0x000000010004822c
- (id)playbackRoute;	// IMP=0x000000010004821c
- (void)configureAlertBehavior:(id)arg1 audioStreamHandleId:(unsigned long long)arg2;	// IMP=0x0000000100047d98
- (void)enableMiniDucking:(_Bool)arg1;	// IMP=0x0000000100047bb4
@property(nonatomic) _Bool duckOthersOption;
- (_Bool)deactivateAudioSession:(unsigned long long)arg1 error:(id *)arg2;	// IMP=0x0000000100047800
- (_Bool)activateAudioSessionWithReason:(unsigned long long)arg1 streamHandleId:(unsigned long long)arg2 error:(id *)arg3;	// IMP=0x0000000100047534
- (void)releasePrewarmMSNException;	// IMP=0x00000001000474a4
- (void)holdPrewarmMSNException;	// IMP=0x0000000100047414
- (void)_logRecordingStopErrorIfNeeded:(long long)arg1;	// IMP=0x00000001000473b0
- (void)_logResourceNotAvailableErrorIfNeeded:(id)arg1;	// IMP=0x00000001000472b8
- (_Bool)_shouldLogResourceNotAvailableError;	// IMP=0x0000000100047140
- (_Bool)prewarmAudioSessionWithStreamHandleId:(unsigned long long)arg1 error:(id *)arg2;	// IMP=0x0000000100046fc0
- (_Bool)isNarrowBandWithStreamHandleId:(unsigned long long)arg1;	// IMP=0x0000000100046e6c
- (id)recordSettingsWithStreamHandleId:(unsigned long long)arg1;	// IMP=0x0000000100046e5c
- (float)recordingSampleRateWithStreamHandleId:(unsigned long long)arg1;	// IMP=0x0000000100046c94
- (id)recordDeviceInfoWithStreamHandleId:(unsigned long long)arg1;	// IMP=0x0000000100046c24
- (id)recordRouteWithStreamHandleId:(unsigned long long)arg1;	// IMP=0x0000000100046b94
- (_Bool)isRecordingWithStreamHandleId:(unsigned long long)arg1;	// IMP=0x0000000100046b20
- (_Bool)isSessionCurrentlyActivated;	// IMP=0x00000001000469b0
- (_Bool)stopAudioStreamWithStreamHandleId:(unsigned long long)arg1 error:(id *)arg2;	// IMP=0x0000000100046780
- (_Bool)startAudioStreamWithOption:(id)arg1 streamHandleId:(unsigned long long)arg2 error:(id *)arg3;	// IMP=0x0000000100046424
- (_Bool)_startAudioStreamForAudioInjection;	// IMP=0x0000000100045f8c
- (_Bool)_shouldInjectAudio;	// IMP=0x0000000100045f38
- (_Bool)prepareAudioStreamRecord:(id)arg1 streamHandleId:(unsigned long long)arg2 error:(id *)arg3;	// IMP=0x0000000100045be0
- (_Bool)setCurrentContext:(id)arg1 streamHandleId:(unsigned long long)arg2 error:(id *)arg3;	// IMP=0x000000010004590c
- (unsigned long long)setContext:(id)arg1 error:(id *)arg2;	// IMP=0x000000010004568c
- (id)_voiceControllerWithError:(id *)arg1;	// IMP=0x00000001000454b4
- (void)_destroyVoiceController;	// IMP=0x00000001000453d4
- (void)dealloc;	// IMP=0x00000001000452bc
- (void)willDestroy;	// IMP=0x0000000100045020
- (void)unregisterObserver:(id)arg1;	// IMP=0x0000000100044f88
- (void)registerObserver:(id)arg1;	// IMP=0x0000000100044ef0
- (id)initWithQueue:(id)arg1 error:(id *)arg2;	// IMP=0x0000000100044c40

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

