//
//     Generated by classdumpios 1.0.1 (64 bit) (iOS port by DreamDevLost)(Debug version compiled Sep 26 2020 13:48:20).
//
//  Copyright (C) 1997-2019 Steve Nygard.
//

#import <objc/NSObject.h>

#import "CSAudioAlertProviding-Protocol.h"
#import "CSAudioMeterProviding-Protocol.h"
#import "CSAudioMetricProviding-Protocol.h"
#import "CSAudioSessionInfoProviding-Protocol.h"
#import "CSAudioSessionProviding-Protocol.h"
#import "CSAudioStreamProviding-Protocol.h"
#import "CSAudioTimeConversionProviding-Protocol.h"
#import "CSBargeInModeProviding-Protocol.h"
#import "CSFallbackAudioSessionReleaseProviding-Protocol.h"
#import "CSSmartSiriVolumeProviding-Protocol.h"
#import "CSTriggerInfoProviding-Protocol.h"

@class CSAudioStream, NSHashTable, NSMutableSet, NSString;
@protocol CSAudioAlertProvidingDelegate, CSAudioSessionProvidingDelegate, CSAudioStreamProvidingDelegate, CSXPCClientDelegate, OS_xpc_object;

@interface CSXPCClient : NSObject <CSAudioSessionProviding, CSFallbackAudioSessionReleaseProviding, CSAudioStreamProviding, CSAudioAlertProviding, CSAudioSessionInfoProviding, CSAudioMeterProviding, CSAudioMetricProviding, CSSmartSiriVolumeProviding, CSAudioTimeConversionProviding, CSTriggerInfoProviding, CSBargeInModeProviding>
{
    id <CSAudioSessionProvidingDelegate> _audioSessionProvidingDelegate;	// 8 = 0x8
    id <CSAudioStreamProvidingDelegate> _audioStreamProvidingDelegate;	// 16 = 0x10
    id <CSAudioAlertProvidingDelegate> _audioAlertProvidingDelegate;	// 24 = 0x18
    id <CSXPCClientDelegate> _delegate;	// 32 = 0x20
    NSString *_UUID;	// 40 = 0x28
    NSObject<OS_xpc_object> *_xpcConnection;	// 48 = 0x30
    CSAudioStream *_audioStream;	// 56 = 0x38
    NSMutableSet *_activationAssertions;	// 64 = 0x40
    NSHashTable *_audioSessionInfoObservers;	// 72 = 0x48
    unsigned long long _xpcClientType;	// 80 = 0x50
}

- (void).cxx_destruct;	// IMP=0x000000010002411c
@property(nonatomic) unsigned long long xpcClientType; // @synthesize xpcClientType=_xpcClientType;
@property(retain, nonatomic) NSHashTable *audioSessionInfoObservers; // @synthesize audioSessionInfoObservers=_audioSessionInfoObservers;
@property(retain, nonatomic) NSMutableSet *activationAssertions; // @synthesize activationAssertions=_activationAssertions;
@property(retain, nonatomic) CSAudioStream *audioStream; // @synthesize audioStream=_audioStream;
@property(retain, nonatomic) NSObject<OS_xpc_object> *xpcConnection; // @synthesize xpcConnection=_xpcConnection;
@property(readonly, nonatomic) NSString *UUID; // @synthesize UUID=_UUID;
@property(nonatomic) __weak id <CSXPCClientDelegate> delegate; // @synthesize delegate=_delegate;
@property(nonatomic) __weak id <CSAudioAlertProvidingDelegate> audioAlertProvidingDelegate; // @synthesize audioAlertProvidingDelegate=_audioAlertProvidingDelegate;
@property(nonatomic) __weak id <CSAudioStreamProvidingDelegate> audioStreamProvidingDelegate; // @synthesize audioStreamProvidingDelegate=_audioStreamProvidingDelegate;
@property(nonatomic) __weak id <CSAudioSessionProvidingDelegate> audioSessionProvidingDelegate; // @synthesize audioSessionProvidingDelegate=_audioSessionProvidingDelegate;
- (void)_handleStreamProvidingDelegateHardwareConfigChange:(id)arg1;	// IMP=0x0000000100023f64
- (void)_handleStreamProvidingDelegateChunkForTVAvailable:(id)arg1;	// IMP=0x0000000100023e74
- (void)_handleStreamProvidingDelegateChunkAvailable:(id)arg1;	// IMP=0x0000000100023d84
- (void)_handleStreamProvidingDelegateDidStopUnexpectly:(id)arg1;	// IMP=0x0000000100023cc4
- (void)_handleStreamProvidingDelegateMessageBody:(id)arg1;	// IMP=0x0000000100023bf4
- (void)_handleSessionInfoProvidingDelegateMediaServicesWereResetNotification:(id)arg1;	// IMP=0x0000000100023a64
- (void)_handleSessionInfoProvidingDelegateMediaServicesWereLostNotification:(id)arg1;	// IMP=0x00000001000238d4
- (void)_handleSessionInfoProvidingDelegateRouteChangeNotification:(id)arg1;	// IMP=0x0000000100023688
- (void)_handleSessionInfoProvidingDelegateInterruptionNotification:(id)arg1;	// IMP=0x000000010002343c
- (void)_handleSessionInfoProvidingDelegateMessageBody:(id)arg1;	// IMP=0x00000001000232d4
- (void)_handleSessionProvidingDelegateDidChangeContext:(id)arg1;	// IMP=0x0000000100023214
- (void)_handleSessionProvidingDelegateStreamHandleIdInvalidation:(id)arg1;	// IMP=0x0000000100023154
- (void)_handleSessionProvidingDelegateDidSetAudioSession:(id)arg1;	// IMP=0x0000000100023094
- (void)_handleSessionProvidingDelegateWillSetAudioSession:(id)arg1;	// IMP=0x0000000100022fd4
- (void)_handleSessionProvidingDelegateEndInterruption:(id)arg1;	// IMP=0x0000000100022f30
- (void)_handleSessionProvidingDelegateBeginInterruptionWithContext:(id)arg1;	// IMP=0x0000000100022d50
- (void)_handleSessionProvidingDelegateBeginInterruption:(id)arg1;	// IMP=0x0000000100022cac
- (void)_handleSessionProvidingDelegateMessageBody:(id)arg1;	// IMP=0x0000000100022b20
- (void)_handleAlertProvidingDelegateDidFinishAlertPlayback:(id)arg1;	// IMP=0x00000001000229ac
- (void)_handleAlertProvidingDelegateMessageBody:(id)arg1;	// IMP=0x0000000100022880
- (void)_handleListenerDisconnectedError:(id)arg1;	// IMP=0x0000000100022778
- (void)_handleListenerError:(id)arg1;	// IMP=0x0000000100022610
- (void)_handleListenerMessage:(id)arg1;	// IMP=0x00000001000224ec
- (void)_handleListenerEvent:(id)arg1;	// IMP=0x0000000100022420
- (_Bool)_sendMessageAndReplySync:(id)arg1 connection:(id)arg2 error:(id *)arg3;	// IMP=0x00000001000222dc
- (id)_decodeError:(id)arg1;	// IMP=0x0000000100022208
- (void)_sendMessage:(id)arg1 connection:(id)arg2 completion:(CDUnknownBlockType)arg3;	// IMP=0x000000010002200c
- (void)enableBargeInMode:(_Bool)arg1 completion:(CDUnknownBlockType)arg2;	// IMP=0x0000000100021dd8
- (_Bool)fallbackDeactivateAudioSession:(unsigned long long)arg1 error:(id *)arg2;	// IMP=0x0000000100021c88
- (unsigned long long)sampleCountFromHostTime:(unsigned long long)arg1;	// IMP=0x0000000100021ad4
- (unsigned long long)hostTimeFromSampleCount:(unsigned long long)arg1;	// IMP=0x0000000100021920
- (void)updateTimerState:(long long)arg1;	// IMP=0x00000001000217e4
- (void)updateAlarmState:(long long)arg1;	// IMP=0x00000001000216a8
- (void)updateAlarmVolume:(float)arg1;	// IMP=0x0000000100021564
- (void)updateMusicVolume:(float)arg1;	// IMP=0x0000000100021420
- (float)getEstimatedTTSVolume;	// IMP=0x0000000100021290
- (unsigned int)audioSessionID;	// IMP=0x000000010002110c
- (void)unregisterObserver:(id)arg1;	// IMP=0x00000001000210f4
- (void)registerObserver:(id)arg1;	// IMP=0x00000001000210dc
- (_Bool)isRecording;	// IMP=0x0000000100021098
- (void)cancelAudioStreamHold:(id)arg1;	// IMP=0x0000000100021058
- (id)holdAudioStreamWithDescription:(id)arg1 timeout:(double)arg2;	// IMP=0x0000000100021014
- (void)saveRecordingBufferToEndFrom:(unsigned long long)arg1 toURL:(id)arg2;	// IMP=0x0000000100020fd4
- (void)saveRecordingBufferFrom:(unsigned long long)arg1 to:(unsigned long long)arg2 toURL:(id)arg3;	// IMP=0x0000000100020f94
- (id)audioChunkToEndFrom:(unsigned long long)arg1;	// IMP=0x0000000100020f50
- (id)audioChunkFrom:(unsigned long long)arg1 to:(unsigned long long)arg2;	// IMP=0x0000000100020f0c
- (id)playbackRoute;	// IMP=0x0000000100020d88
- (_Bool)isNarrowBand;	// IMP=0x0000000100020c4c
- (id)recordSettings;	// IMP=0x0000000100020a94
- (id)recordDeviceInfo;	// IMP=0x00000001000208f8
- (id)recordRoute;	// IMP=0x0000000100020774
- (void)enableVoiceTrigger:(_Bool)arg1 withAssertion:(id)arg2;	// IMP=0x00000001000200e8
- (void)triggerInfoForContext:(id)arg1 completion:(CDUnknownBlockType)arg2;	// IMP=0x000000010001fb8c
- (void)stopAudioStream:(id)arg1 option:(id)arg2 completion:(CDUnknownBlockType)arg3;	// IMP=0x000000010001f96c
- (void)startAudioStream:(id)arg1 option:(id)arg2 completion:(CDUnknownBlockType)arg3;	// IMP=0x000000010001f710
- (void)prepareAudioStream:(id)arg1 request:(id)arg2 completion:(CDUnknownBlockType)arg3;	// IMP=0x000000010001f3f8
- (_Bool)prepareAudioStreamSync:(id)arg1 request:(id)arg2 error:(id *)arg3;	// IMP=0x000000010001f0dc
- (void)audioStreamWithRequest:(id)arg1 streamName:(id)arg2 completion:(CDUnknownBlockType)arg3;	// IMP=0x000000010001ebb4
- (id)audioStreamWithRequest:(id)arg1 streamName:(id)arg2 error:(id *)arg3;	// IMP=0x000000010001e844
- (_Bool)setCurrentContext:(id)arg1 error:(id *)arg2;	// IMP=0x000000010001e600
- (id)audioMetric;	// IMP=0x000000010001e330
- (float)averagePowerForChannel:(unsigned long long)arg1;	// IMP=0x000000010001e11c
- (float)peakPowerForChannel:(unsigned long long)arg1;	// IMP=0x000000010001df08
- (void)updateMeters;	// IMP=0x000000010001ddec
- (void)setMeteringEnabled:(_Bool)arg1;	// IMP=0x000000010001dca8
- (void)configureAlertBehavior:(id)arg1;	// IMP=0x000000010001db44
- (unsigned long long)alertStartTime;	// IMP=0x000000010001d960
- (_Bool)playRecordStartingAlertAndResetEndpointer;	// IMP=0x000000010001d844
- (_Bool)playAlertSoundForType:(long long)arg1;	// IMP=0x000000010001d6f8
- (_Bool)setAlertSoundFromURL:(id)arg1 forType:(long long)arg2;	// IMP=0x000000010001d528
- (void)setAudioAlertDelegate:(id)arg1;	// IMP=0x000000010001d51c
- (void)setAudioSessionDelegate:(id)arg1;	// IMP=0x000000010001d510
- (void)enableMiniDucking:(_Bool)arg1;	// IMP=0x000000010001d3d4
- (void)setDuckOthersOption:(_Bool)arg1;	// IMP=0x000000010001d298
- (_Bool)duckOthersOption;	// IMP=0x000000010001d17c
- (_Bool)deactivateAudioSession:(unsigned long long)arg1 error:(id *)arg2;	// IMP=0x000000010001d02c
- (_Bool)activateAudioSessionWithReason:(unsigned long long)arg1 error:(id *)arg2;	// IMP=0x000000010001cedc
- (_Bool)prewarmAudioSessionWithError:(id *)arg1;	// IMP=0x000000010001cdb4
- (void)pingpong:(CDUnknownBlockType)arg1;	// IMP=0x000000010001cc8c
- (_Bool)prepareAudioProviderWithContext:(id)arg1 clientType:(unsigned long long)arg2 error:(id *)arg3;	// IMP=0x000000010001ca8c
- (void)sendXPCClientType;	// IMP=0x000000010001c910
- (void)dealloc;	// IMP=0x000000010001c8c4
- (void)disconnect;	// IMP=0x000000010001c888
- (void)connect;	// IMP=0x000000010001c768
- (id)initWithType:(unsigned long long)arg1;	// IMP=0x000000010001c64c

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

