//
//     Generated by classdumpios 1.0.1 (64 bit) (iOS port by DreamDevLost)(Debug version compiled Sep 26 2020 13:48:20).
//
//  Copyright (C) 1997-2019 Steve Nygard.
//

#import <objc/NSObject.h>

@class CSBiometricMatchMonitor, CSGestureMonitor, NSDictionary, NSURL;
@protocol CSAudioFileWriter, OS_dispatch_queue;

@interface CSSpIdImplicitTraining : NSObject
{
    unsigned long long _triggerEndMachTime;	// 8 = 0x8
    unsigned long long _triggerStartMachTime;	// 16 = 0x10
    unsigned long long _extraSamplesAtBegining;	// 24 = 0x18
    unsigned long long _numSamplesAdded;	// 32 = 0x20
    unsigned long long _discardedPaylodSamples;	// 40 = 0x28
    _Bool _implicitRecordingInProgress;	// 48 = 0x30
    NSURL *_lastCachedUtterance;	// 56 = 0x38
    id <CSAudioFileWriter> _uttLogger;	// 64 = 0x40
    NSObject<OS_dispatch_queue> *_queue;	// 72 = 0x48
    NSDictionary *_recordingContext;	// 80 = 0x50
    NSDictionary *_voiceTriggerEventInfo;	// 88 = 0x58
    CSBiometricMatchMonitor *_biometricMonitor;	// 96 = 0x60
    CSGestureMonitor *_gestureMonitor;	// 104 = 0x68
}

+ (id)sharedInstance;	// IMP=0x0000000100079f04
- (void).cxx_destruct;	// IMP=0x000000010007ec54
@property(retain, nonatomic) CSGestureMonitor *gestureMonitor; // @synthesize gestureMonitor=_gestureMonitor;
@property(retain, nonatomic) CSBiometricMatchMonitor *biometricMonitor; // @synthesize biometricMonitor=_biometricMonitor;
@property(retain, nonatomic) NSDictionary *voiceTriggerEventInfo; // @synthesize voiceTriggerEventInfo=_voiceTriggerEventInfo;
@property(retain, nonatomic) NSDictionary *recordingContext; // @synthesize recordingContext=_recordingContext;
@property(retain, nonatomic) NSObject<OS_dispatch_queue> *queue; // @synthesize queue=_queue;
@property(retain, nonatomic) id <CSAudioFileWriter> uttLogger; // @synthesize uttLogger=_uttLogger;
@property(retain, nonatomic) NSURL *lastCachedUtterance; // @synthesize lastCachedUtterance=_lastCachedUtterance;
- (void)_segmentTDfromAudioFile:(id)arg1 withVTEventInfo:(id)arg2 withOtherCtxt:(id)arg3 withCompletion:(CDUnknownBlockType)arg4;	// IMP=0x000000010007d8f0
- (void)_storeSingleUserImplicitTrainingUtterance:(id)arg1 audioDeviceType:(id)arg2 audioRecordType:(id)arg3 withVoiceTriggerCtxt:(id)arg4 withOtherCtxt:(id)arg5 withCompletion:(CDUnknownBlockType)arg6;	// IMP=0x000000010007c720
- (void)processSingleUserImplicitTrainingUtterance:(id)arg1 audioDeviceType:(id)arg2 audioRecordType:(id)arg3 withVoiceTriggerCtxt:(id)arg4 withOtherCtxt:(id)arg5 withCompletion:(CDUnknownBlockType)arg6;	// IMP=0x000000010007c3a0
- (void)storeMultiUserImplicitTrainingUtterance:(id)arg1 forProfileId:(id)arg2 withAudioDeviceType:(id)arg3 withAudioRecordType:(id)arg4 withVoiceTriggerCtxt:(id)arg5 withOtherCtxt:(id)arg6 withCompletion:(CDUnknownBlockType)arg7;	// IMP=0x000000010007bb64
- (_Bool)_isUtteranceHandheld;	// IMP=0x000000010007b96c
- (unsigned long long)_getBiometricMatchResultForTriggerTimeStamp:(unsigned long long)arg1;	// IMP=0x000000010007b738
- (void)recordingStoppedForReason:(long long)arg1;	// IMP=0x000000010007b304
- (void)processImplicitTrainingUtteranceWithVoiceTriggerEventInfo:(id)arg1;	// IMP=0x000000010007aca8
- (void)processAudioChunk:(id)arg1;	// IMP=0x000000010007aa08
- (void)processImplicitTrainingUtterance:(id)arg1 forVoiceProfileId:(id)arg2 withRecordDeviceInfo:(id)arg3 withRecordCtxt:(id)arg4 withVoiceTriggerCtxt:(id)arg5 withOtherCtxt:(id)arg6 withCompletion:(CDUnknownBlockType)arg7;	// IMP=0x000000010007a0e8
- (id)init;	// IMP=0x0000000100079f70

@end

