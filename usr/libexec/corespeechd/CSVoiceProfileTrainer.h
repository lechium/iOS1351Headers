//
//     Generated by classdumpios 1.0.1 (64 bit) (iOS port by DreamDevLost)(Debug version compiled Sep 26 2020 13:48:20).
//
//  Copyright (C) 1997-2019 Steve Nygard.
//

#import <objc/NSObject.h>

#import "CSSpIdSpeakerVectorGeneratorDelegate-Protocol.h"

@class CSAsset, CSDispatchGroup, CSSpIdSATAnalyzer, CSSpIdSpeakerVectorGenerator, CSUserVoiceProfile, NSData, NSError, NSString;
@protocol OS_dispatch_queue;

@interface CSVoiceProfileTrainer : NSObject <CSSpIdSpeakerVectorGeneratorDelegate>
{
    float _tdsrScore;	// 8 = 0x8
    float _satScore;	// 12 = 0xc
    float _bestTriggerScore;	// 16 = 0x10
    _Bool _tdsrTimedout;	// 20 = 0x14
    float _voiceTriggerThreshold;	// 24 = 0x18
    float _satThreshold;	// 28 = 0x1c
    float _satTDSRThreshold;	// 32 = 0x20
    float _satVTImplicitThreshold;	// 36 = 0x24
    unsigned long long _baseProfileConfidenceScoreThreshold;	// 40 = 0x28
    unsigned long long _implicitConfidenceScoreThreshold;	// 48 = 0x30
    unsigned long long _implicitDeltaConfidenceScoreThreshold;	// 56 = 0x38
    unsigned long long _maxNumberOfBaseProfileUtterances;	// 64 = 0x40
    CSSpIdSpeakerVectorGenerator *_speakerVectorGenerator;	// 72 = 0x48
    unsigned long long _currUttLengthInMs;	// 80 = 0x50
    CSSpIdSATAnalyzer *_satAnalyzer;	// 88 = 0x58
    CSSpIdSATAnalyzer *_tdsrAnalyzer;	// 96 = 0x60
    CSDispatchGroup *_spIdDispatchGroup;	// 104 = 0x68
    unsigned long long _spIdType;	// 112 = 0x70
    NSData *_speakerVector;	// 120 = 0x78
    unsigned long long _speakerVectorSize;	// 128 = 0x80
    CSUserVoiceProfile *_profile;	// 136 = 0x88
    NSString *_locale;	// 144 = 0x90
    CSAsset *_asset;	// 152 = 0x98
    unsigned long long _satRunMode;	// 160 = 0xa0
    NSObject<OS_dispatch_queue> *_queue;	// 168 = 0xa8
    NSError *_tdsrError;	// 176 = 0xb0
}

- (void).cxx_destruct;	// IMP=0x00000001000cd034
@property(retain, nonatomic) NSError *tdsrError; // @synthesize tdsrError=_tdsrError;
@property(retain, nonatomic) NSObject<OS_dispatch_queue> *queue; // @synthesize queue=_queue;
@property(nonatomic) unsigned long long satRunMode; // @synthesize satRunMode=_satRunMode;
@property(retain, nonatomic) CSAsset *asset; // @synthesize asset=_asset;
@property(retain, nonatomic) NSString *locale; // @synthesize locale=_locale;
@property(retain, nonatomic) CSUserVoiceProfile *profile; // @synthesize profile=_profile;
@property(nonatomic) unsigned long long speakerVectorSize; // @synthesize speakerVectorSize=_speakerVectorSize;
@property(retain, nonatomic) NSData *speakerVector; // @synthesize speakerVector=_speakerVector;
@property(nonatomic) unsigned long long spIdType; // @synthesize spIdType=_spIdType;
@property(retain, nonatomic) CSDispatchGroup *spIdDispatchGroup; // @synthesize spIdDispatchGroup=_spIdDispatchGroup;
@property(retain, nonatomic) CSSpIdSATAnalyzer *tdsrAnalyzer; // @synthesize tdsrAnalyzer=_tdsrAnalyzer;
@property(retain, nonatomic) CSSpIdSATAnalyzer *satAnalyzer; // @synthesize satAnalyzer=_satAnalyzer;
@property(nonatomic) unsigned long long currUttLengthInMs; // @synthesize currUttLengthInMs=_currUttLengthInMs;
@property(retain, nonatomic) CSSpIdSpeakerVectorGenerator *speakerVectorGenerator; // @synthesize speakerVectorGenerator=_speakerVectorGenerator;
@property(readonly, nonatomic) float satVTImplicitThreshold; // @synthesize satVTImplicitThreshold=_satVTImplicitThreshold;
@property(readonly, nonatomic) unsigned long long maxNumberOfBaseProfileUtterances; // @synthesize maxNumberOfBaseProfileUtterances=_maxNumberOfBaseProfileUtterances;
@property(readonly, nonatomic) unsigned long long implicitDeltaConfidenceScoreThreshold; // @synthesize implicitDeltaConfidenceScoreThreshold=_implicitDeltaConfidenceScoreThreshold;
@property(readonly, nonatomic) unsigned long long implicitConfidenceScoreThreshold; // @synthesize implicitConfidenceScoreThreshold=_implicitConfidenceScoreThreshold;
@property(readonly, nonatomic) unsigned long long baseProfileConfidenceScoreThreshold; // @synthesize baseProfileConfidenceScoreThreshold=_baseProfileConfidenceScoreThreshold;
- (void)speakerVectorGenerator:(id)arg1 finishedWithFinalSpeakerVector:(id)arg2 speakerVectorSize:(unsigned long long)arg3 processedAudioDurationMs:(unsigned long long)arg4;	// IMP=0x00000001000ccc30
- (void)_processAudioFile:(id)arg1 ofSpIdType:(unsigned long long)arg2 withCompletionBlock:(CDUnknownBlockType)arg3;	// IMP=0x00000001000cc698
- (void)_processScoresWithCompletion:(CDUnknownBlockType)arg1;	// IMP=0x00000001000cc270
- (id)_processAudioFile:(id)arg1 ofSpIdType:(unsigned long long)arg2;	// IMP=0x00000001000cb2c4
- (id)_createSatAnalyzerForProfile:(id)arg1 locale:(id)arg2 spidType:(unsigned long long)arg3 modelType:(unsigned long long)arg4 asset:(id)arg5 runMode:(unsigned long long)arg6;	// IMP=0x00000001000cade4
- (void)processUtterance:(id)arg1 ofSpIdType:(unsigned long long)arg2 withUpdatePolicyBlock:(CDUnknownBlockType)arg3 withCompletionBlock:(CDUnknownBlockType)arg4;	// IMP=0x00000001000ca5f0
- (void)addUtterances:(id)arg1 withCompletion:(CDUnknownBlockType)arg2;	// IMP=0x00000001000c9f50
- (_Bool)checkIfUpdateNecessaryForAudioFileCount:(unsigned long long)arg1;	// IMP=0x00000001000c9bd0
- (_Bool)checkIfProfileNeedsUploadForBaseProfileVectorCount:(unsigned long long)arg1;	// IMP=0x00000001000c9b88
- (_Bool)checkIfImplicitSATPossibleWithBaseProfileVectorCount:(unsigned long long)arg1;	// IMP=0x00000001000c9a00
- (_Bool)checkIfImplicitTrainingRequired;	// IMP=0x00000001000c98e4
- (_Bool)checkIfRetrainingIsRequired;	// IMP=0x00000001000c9280
- (id)initWithVoiceProfile:(id)arg1 spIdType:(unsigned long long)arg2 satRunMode:(unsigned long long)arg3 languageCode:(id)arg4 asset:(id)arg5;	// IMP=0x00000001000c8d00

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

