//
//     Generated by classdumpios 1.0.1 (64 bit) (iOS port by DreamDevLost)(Debug version compiled Sep 26 2020 13:48:20).
//
//  Copyright (C) 1997-2019 Steve Nygard.
//

#import <objc/NSObject.h>

#import "CSAudioRouteChangeMonitorDelegate-Protocol.h"
#import "CSAudioServerCrashMonitorDelegate-Protocol.h"
#import "CSAudioStreamProvidingDelegate-Protocol.h"
#import "CSFirstUnlockMonitorDelegate-Protocol.h"
#import "CSGestureMonitorDelegate-Protocol.h"
#import "CSKeywordAnalyzerNDAPIScoreDelegate-Protocol.h"
#import "CSPhraseSpotterEnabledMonitorDelegate-Protocol.h"
#import "CSSiriClientBehaviorMonitorDelegate-Protocol.h"
#import "CSSiriEnabledMonitorDelegate-Protocol.h"
#import "CSVoiceTriggerXPCServiceDelegate-Protocol.h"

@class CSAsset, CSAudioProvider, CSAudioStream, CSKeywordAnalyzerNDAPI, CSOSTransaction, CSPolicy, NSDictionary, NSMutableArray, NSString;
@protocol CSVoiceTriggerDelegate, OS_dispatch_queue;

@interface CSBuiltInVoiceTriggerWatch : NSObject <CSKeywordAnalyzerNDAPIScoreDelegate, CSAudioStreamProvidingDelegate, CSSiriClientBehaviorMonitorDelegate, CSAudioServerCrashMonitorDelegate, CSPhraseSpotterEnabledMonitorDelegate, CSAudioRouteChangeMonitorDelegate, CSSiriEnabledMonitorDelegate, CSFirstUnlockMonitorDelegate, CSGestureMonitorDelegate, CSVoiceTriggerXPCServiceDelegate>
{
    _Bool _listeningEnabled;	// 8 = 0x8
    _Bool _voiceTriggerEnabled;	// 9 = 0x9
    _Bool _isSecondChanceHot;	// 10 = 0xa
    _Bool _isSiriClientListening;	// 11 = 0xb
    _Bool _hasTriggerPending;	// 12 = 0xc
    _Bool _hasPendingNearMiss;	// 13 = 0xd
    _Bool _isListenPollingStarting;	// 14 = 0xe
    _Bool _earlyDetected;	// 15 = 0xf
    _Bool _isStartSampleCountMarked;	// 16 = 0x10
    _Bool _isPhraseSpotterBypassed;	// 17 = 0x11
    _Bool _isExternalPhraseSpotterRunning;	// 18 = 0x12
    float _keywordThreshold;	// 20 = 0x14
    float _keywordLoggingThreshold;	// 24 = 0x18
    float _lastScore;	// 28 = 0x1c
    float _keywordThresholdSecondChance;	// 32 = 0x20
    float _effectiveKeywordThreshold;	// 36 = 0x24
    id <CSVoiceTriggerDelegate> _delegate;	// 40 = 0x28
    CSPolicy *_listeningStartPolicy;	// 48 = 0x30
    CSAudioStream *_audioStream;	// 56 = 0x38
    NSObject<OS_dispatch_queue> *_queue;	// 64 = 0x40
    CSAsset *_currentAsset;	// 72 = 0x48
    NSMutableArray *_keywordAnalyzersNDAPI;	// 80 = 0x50
    unsigned long long _secondChanceHotTillMachTime;	// 88 = 0x58
    CSAudioProvider *_audioProvider;	// 96 = 0x60
    CSKeywordAnalyzerNDAPI *_keywordAnalyzerNDAPI;	// 104 = 0x68
    unsigned long long _numProcessedSamples;	// 112 = 0x70
    unsigned long long _nearMissDelayTimeout;	// 120 = 0x78
    unsigned long long _nearMissCandidateDetectedSamples;	// 128 = 0x80
    NSDictionary *_lastAnalyzerResult;	// 136 = 0x88
    unsigned long long _earlyDetectFiredMachTime;	// 144 = 0x90
    unsigned long long _analyzerStartSampleCount;	// 152 = 0x98
    NSString *_audioProviderUUID;	// 160 = 0xa0
    CSOSTransaction *_osTransaction;	// 168 = 0xa8
    double _lastAggTime;	// 176 = 0xb0
    double _cumulativeUptime;	// 184 = 0xb8
    double _cumulativeDowntime;	// 192 = 0xc0
    unsigned long long _wakeGestureHostTime;	// 200 = 0xc8
}

- (void).cxx_destruct;	// IMP=0x00000001000d242c
@property(nonatomic) unsigned long long wakeGestureHostTime; // @synthesize wakeGestureHostTime=_wakeGestureHostTime;
@property(nonatomic) double cumulativeDowntime; // @synthesize cumulativeDowntime=_cumulativeDowntime;
@property(nonatomic) double cumulativeUptime; // @synthesize cumulativeUptime=_cumulativeUptime;
@property(nonatomic) double lastAggTime; // @synthesize lastAggTime=_lastAggTime;
@property(retain, nonatomic) CSOSTransaction *osTransaction; // @synthesize osTransaction=_osTransaction;
@property(nonatomic) _Bool isExternalPhraseSpotterRunning; // @synthesize isExternalPhraseSpotterRunning=_isExternalPhraseSpotterRunning;
@property(nonatomic) _Bool isPhraseSpotterBypassed; // @synthesize isPhraseSpotterBypassed=_isPhraseSpotterBypassed;
@property(retain, nonatomic) NSString *audioProviderUUID; // @synthesize audioProviderUUID=_audioProviderUUID;
@property(nonatomic) unsigned long long analyzerStartSampleCount; // @synthesize analyzerStartSampleCount=_analyzerStartSampleCount;
@property(nonatomic) _Bool isStartSampleCountMarked; // @synthesize isStartSampleCountMarked=_isStartSampleCountMarked;
@property(nonatomic) _Bool earlyDetected; // @synthesize earlyDetected=_earlyDetected;
@property(nonatomic) unsigned long long earlyDetectFiredMachTime; // @synthesize earlyDetectFiredMachTime=_earlyDetectFiredMachTime;
@property(retain, nonatomic) NSDictionary *lastAnalyzerResult; // @synthesize lastAnalyzerResult=_lastAnalyzerResult;
@property(nonatomic) _Bool isListenPollingStarting; // @synthesize isListenPollingStarting=_isListenPollingStarting;
@property(nonatomic) _Bool hasPendingNearMiss; // @synthesize hasPendingNearMiss=_hasPendingNearMiss;
@property(nonatomic) unsigned long long nearMissCandidateDetectedSamples; // @synthesize nearMissCandidateDetectedSamples=_nearMissCandidateDetectedSamples;
@property(nonatomic) unsigned long long nearMissDelayTimeout; // @synthesize nearMissDelayTimeout=_nearMissDelayTimeout;
@property(nonatomic) unsigned long long numProcessedSamples; // @synthesize numProcessedSamples=_numProcessedSamples;
@property(retain, nonatomic) CSKeywordAnalyzerNDAPI *keywordAnalyzerNDAPI; // @synthesize keywordAnalyzerNDAPI=_keywordAnalyzerNDAPI;
@property(retain, nonatomic) CSAudioProvider *audioProvider; // @synthesize audioProvider=_audioProvider;
@property(nonatomic) _Bool hasTriggerPending; // @synthesize hasTriggerPending=_hasTriggerPending;
@property(nonatomic) _Bool isSiriClientListening; // @synthesize isSiriClientListening=_isSiriClientListening;
@property(nonatomic) _Bool isSecondChanceHot; // @synthesize isSecondChanceHot=_isSecondChanceHot;
@property(nonatomic) unsigned long long secondChanceHotTillMachTime; // @synthesize secondChanceHotTillMachTime=_secondChanceHotTillMachTime;
@property(nonatomic) float effectiveKeywordThreshold; // @synthesize effectiveKeywordThreshold=_effectiveKeywordThreshold;
@property(nonatomic) float keywordThresholdSecondChance; // @synthesize keywordThresholdSecondChance=_keywordThresholdSecondChance;
@property(nonatomic) float lastScore; // @synthesize lastScore=_lastScore;
@property(nonatomic) float keywordLoggingThreshold; // @synthesize keywordLoggingThreshold=_keywordLoggingThreshold;
@property(nonatomic) float keywordThreshold; // @synthesize keywordThreshold=_keywordThreshold;
@property(retain, nonatomic) NSMutableArray *keywordAnalyzersNDAPI; // @synthesize keywordAnalyzersNDAPI=_keywordAnalyzersNDAPI;
@property(retain, nonatomic) CSAsset *currentAsset; // @synthesize currentAsset=_currentAsset;
@property(retain, nonatomic) NSObject<OS_dispatch_queue> *queue; // @synthesize queue=_queue;
@property(nonatomic) _Bool voiceTriggerEnabled; // @synthesize voiceTriggerEnabled=_voiceTriggerEnabled;
@property(nonatomic) _Bool listeningEnabled; // @synthesize listeningEnabled=_listeningEnabled;
@property(retain, nonatomic) CSAudioStream *audioStream; // @synthesize audioStream=_audioStream;
@property(retain, nonatomic) CSPolicy *listeningStartPolicy; // @synthesize listeningStartPolicy=_listeningStartPolicy;
@property(nonatomic) __weak id <CSVoiceTriggerDelegate> delegate; // @synthesize delegate=_delegate;
- (void)_analyzerReset:(id)arg1 withCause:(unsigned long long)arg2;	// IMP=0x00000001000d20f8
- (void)_setStartAnalyzeTime:(unsigned long long)arg1;	// IMP=0x00000001000d2030
- (void)_resetStartAnalyzeTime;	// IMP=0x00000001000d2024
- (void)_resetUpTime;	// IMP=0x00000001000d1f7c
- (void)_logUptimeWithVTSwitchChanged:(_Bool)arg1 VTEnabled:(_Bool)arg2;	// IMP=0x00000001000d1dec
- (void)CSFirstUnlockMonitor:(id)arg1 didReceiveFirstUnlock:(_Bool)arg2;	// IMP=0x00000001000d1cd8
- (void)CSSiriEnabledMonitor:(id)arg1 didReceiveEnabled:(_Bool)arg2;	// IMP=0x00000001000d1c08
- (void)_receivedHearstConnectionEvent:(_Bool)arg1;	// IMP=0x00000001000d1b18
- (void)CSAudioRouteChangeMonitor:(id)arg1 didReceiveAudioRouteChangeEvent:(long long)arg2;	// IMP=0x00000001000d19dc
- (void)voiceTriggerXPCService:(id)arg1 setPhraseSpotterBypassing:(_Bool)arg2;	// IMP=0x00000001000d1970
- (void)CSPhraseSpotterEnabledMonitor:(id)arg1 didReceiveEnabled:(_Bool)arg2;	// IMP=0x00000001000d1824
- (void)CSAudioServerCrashMonitorDidReceiveServerRestart:(id)arg1;	// IMP=0x00000001000d16f0
- (void)CSAudioServerCrashMonitorDidReceiveServerCrash:(id)arg1;	// IMP=0x00000001000d15fc
- (void)gestureMonitorDidReceiveSleepGesture:(id)arg1;	// IMP=0x00000001000d1558
- (void)gestureMonitorDidReceiveWakeGesture:(id)arg1;	// IMP=0x00000001000d14a0
- (void)siriClientBehaviorMonitor:(id)arg1 willStopStream:(id)arg2;	// IMP=0x00000001000d1398
- (void)siriClientBehaviorMonitor:(id)arg1 willStartStreamWithContext:(id)arg2 option:(id)arg3;	// IMP=0x00000001000d1394
- (void)siriClientBehaviorMonitor:(id)arg1 didStopStream:(id)arg2;	// IMP=0x00000001000d127c
- (void)siriClientBehaviorMonitor:(id)arg1 didStartStreamWithContext:(id)arg2 successfully:(_Bool)arg3 option:(id)arg4;	// IMP=0x00000001000d116c
- (id)_buildVoiceTriggerEventInfo:(id)arg1;	// IMP=0x00000001000d0998
- (void)_analyzeForKeywordDetection:(id)arg1 result:(id)arg2 forChannel:(unsigned long long)arg3 forceMaximized:(_Bool)arg4;	// IMP=0x00000001000d0214
- (void)keywordAnalyzerNDAPI:(id)arg1 hasResultAvailable:(id)arg2 forChannel:(unsigned long long)arg3;	// IMP=0x00000001000d01b8
- (void)audioStreamProvider:(id)arg1 audioChunkForTVAvailable:(id)arg2;	// IMP=0x00000001000d01b4
- (void)audioStreamProvider:(id)arg1 audioBufferAvailable:(id)arg2;	// IMP=0x00000001000cfe40
- (void)audioStreamProvider:(id)arg1 didStopStreamUnexpectly:(long long)arg2;	// IMP=0x00000001000cfd38
- (void)_stopRaiseToSpeak;	// IMP=0x00000001000cfd34
- (void)_startRaiseToSpeak;	// IMP=0x00000001000cfd30
- (void)_startRaiseToSpeakVAD;	// IMP=0x00000001000cfd2c
- (void)_didStopAudioStream;	// IMP=0x00000001000cfd20
- (void)_stopListening;	// IMP=0x00000001000cfb40
- (void)_startListeningWithCompletion:(CDUnknownBlockType)arg1;	// IMP=0x00000001000cf920
- (void)_requestStartAudioStreamWithSource:(unsigned long long)arg1 context:(id)arg2 completion:(CDUnknownBlockType)arg3;	// IMP=0x00000001000cf4fc
- (void)_startListenWithCompletion:(CDUnknownBlockType)arg1;	// IMP=0x00000001000cf0fc
- (void)_startListenPollingWithInterval:(double)arg1 completion:(CDUnknownBlockType)arg2;	// IMP=0x00000001000ced98
- (void)_computeEffectiveThreshold;	// IMP=0x00000001000cec6c
- (void)_adjustWakeGestureHostTimeIfNeeded;	// IMP=0x00000001000cec68
- (void)_transitListeningStatus:(_Bool)arg1;	// IMP=0x00000001000cea24
- (void)_setAsset:(id)arg1;	// IMP=0x00000001000ce818
- (void)setAsset:(id)arg1;	// IMP=0x00000001000ce6cc
- (void)_resetVoiceTrigger;	// IMP=0x00000001000ce678
- (void)_reset;	// IMP=0x00000001000ce66c
- (void)reset;	// IMP=0x00000001000ce604
- (void)handleListenStartPolicyChange:(_Bool)arg1;	// IMP=0x00000001000ce590
- (void)start;	// IMP=0x00000001000cdf84
- (id)init;	// IMP=0x00000001000cdee0

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

