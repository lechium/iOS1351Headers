//
//     Generated by classdumpios 1.0.1 (64 bit) (iOS port by DreamDevLost)(Debug version compiled Sep 26 2020 13:48:20).
//
//  Copyright (C) 1997-2019 Steve Nygard.
//

#import <objc/NSObject.h>

#import "CSAlarmMonitorDelegate-Protocol.h"
#import "CSAudioServerCrashMonitorDelegate-Protocol.h"
#import "CSAudioStreamProvidingDelegate-Protocol.h"
#import "CSMediaPlayingMonitorDelegate-Protocol.h"
#import "CSSiriClientBehaviorMonitorDelegate-Protocol.h"
#import "CSSiriEnabledMonitorDelegate-Protocol.h"
#import "CSTimerMonitorDelegate-Protocol.h"
#import "CSVoiceTriggerDelegate-Protocol.h"
#import "CSVolumeMonitorDelegate-Protocol.h"

@class CSAsset, CSAudioStream, CSSmartSiriVolumeEnablePolicy, NSString, NSUserDefaults;
@protocol CSSmartSiriVolumeDelegate, OS_dispatch_queue, OS_dispatch_source;

@interface CSSmartSiriVolume : NSObject <CSMediaPlayingMonitorDelegate, CSAudioStreamProvidingDelegate, CSSiriEnabledMonitorDelegate, CSAudioServerCrashMonitorDelegate, CSSiriClientBehaviorMonitorDelegate, CSVoiceTriggerDelegate, CSAlarmMonitorDelegate, CSTimerMonitorDelegate, CSVolumeMonitorDelegate>
{
    NSObject<OS_dispatch_queue> *_queue;	// 8 = 0x8
    struct unique_ptr<SmartSiriVolume, std::__1::default_delete<SmartSiriVolume>> _smartSiriVolumeNoiseLevel;	// 16 = 0x10
    struct unique_ptr<SmartSiriVolume, std::__1::default_delete<SmartSiriVolume>> _smartSiriVolumeLKFS;	// 24 = 0x18
    struct vector<float, std::__1::allocator<float>> _floatBuffer;	// 32 = 0x20
    NSUserDefaults *_defaults;	// 56 = 0x38
    CSSmartSiriVolumeEnablePolicy *_ssvEnablePolicy;	// 64 = 0x40
    unsigned long long _startAnalyzeSampleCount;	// 72 = 0x48
    unsigned long long _samplesFed;	// 80 = 0x50
    unsigned long long _processedSampleCount;	// 88 = 0x58
    _Bool _isStartSampleCountMarked;	// 96 = 0x60
    _Bool _isListenPollingStarting;	// 97 = 0x61
    _Bool _shouldPauseSSVProcess;	// 98 = 0x62
    _Bool _shouldPauseLKFSProcess;	// 99 = 0x63
    _Bool _alarmSoundIsFiring;	// 100 = 0x64
    _Bool _timerSoundIsFiring;	// 101 = 0x65
    _Bool _mediaIsPlaying;	// 102 = 0x66
    CSAsset *_currentAsset;	// 104 = 0x68
    float _musicVolumeDB;	// 112 = 0x70
    float _alarmVolume;	// 116 = 0x74
    unsigned long long _noiseLevelChannelBitset;	// 120 = 0x78
    unsigned long long _LKFSChannelBitset;	// 128 = 0x80
    unsigned int _energyBufferSize;	// 136 = 0x88
    unsigned int _noiseLowerPercentile;	// 140 = 0x8c
    unsigned int _noiseUpperPercentile;	// 144 = 0x90
    unsigned int _LKFSLowerPercentile;	// 148 = 0x94
    unsigned int _LKFSUpperPercentile;	// 152 = 0x98
    float _noiseTimeConstant;	// 156 = 0x9c
    float _noiseMicSensitivityOffset;	// 160 = 0xa0
    float _LKFSTimeConstant;	// 164 = 0xa4
    float _LKFSMicSensitivityOffset;	// 168 = 0xa8
    float _noiseTTSMappingInputRangeLow;	// 172 = 0xac
    float _noiseTTSMappingInputRangeHigh;	// 176 = 0xb0
    float _noiseTTSMappingOutputRangeLow;	// 180 = 0xb4
    float _noiseTTSMappingOutputRangeHigh;	// 184 = 0xb8
    float _LKFSTTSMappingInputRangeLow;	// 188 = 0xbc
    float _LKFSTTSMappingInputRangeHigh;	// 192 = 0xc0
    float _LKFSTTSMappingOutputRangeLow;	// 196 = 0xc4
    float _LKFSTTSMappingOutputRangeHigh;	// 200 = 0xc8
    float _userOffsetInputRangeLow;	// 204 = 0xcc
    float _userOffsetInputRangeHigh;	// 208 = 0xd0
    float _userOffsetOutputRangeLow;	// 212 = 0xd4
    float _userOffsetOutputRangeHigh;	// 216 = 0xd8
    float _TTSVolumeLowerLimitDB;	// 220 = 0xdc
    float _TTSVolumeUpperLimitDB;	// 224 = 0xe0
    float _noiseWeight;	// 228 = 0xe4
    id <CSSmartSiriVolumeDelegate> _delegate;	// 232 = 0xe8
    CSAudioStream *_audioStream;	// 240 = 0xf0
    NSObject<OS_dispatch_source> *_listenPollingTimer;	// 248 = 0xf8
    long long _listenPollingTimerCount;	// 256 = 0x100
}

- (id).cxx_construct;	// IMP=0x00000001000621fc
- (void).cxx_destruct;	// IMP=0x000000010006216c
@property(nonatomic) long long listenPollingTimerCount; // @synthesize listenPollingTimerCount=_listenPollingTimerCount;
@property(retain, nonatomic) NSObject<OS_dispatch_source> *listenPollingTimer; // @synthesize listenPollingTimer=_listenPollingTimer;
@property(retain, nonatomic) CSAudioStream *audioStream; // @synthesize audioStream=_audioStream;
@property(nonatomic) __weak id <CSSmartSiriVolumeDelegate> delegate; // @synthesize delegate=_delegate;
- (float)_getMusicVolumeDB:(float)arg1;	// IMP=0x00000001000620cc
- (float)_convertDB2Mag:(float)arg1;	// IMP=0x00000001000620c0
- (void)_setDefaultParameters;	// IMP=0x000000010006205c
- (void)_setStartAnalyzeTime:(unsigned long long)arg1;	// IMP=0x0000000100061f94
- (void)_resetStartAnalyzeTime;	// IMP=0x0000000100061f88
- (void)siriClientBehaviorMonitor:(id)arg1 didStopStream:(id)arg2;	// IMP=0x0000000100061f84
- (void)siriClientBehaviorMonitor:(id)arg1 willStopStream:(id)arg2;	// IMP=0x0000000100061f80
- (void)siriClientBehaviorMonitor:(id)arg1 didStartStreamWithContext:(id)arg2 successfully:(_Bool)arg3 option:(id)arg4;	// IMP=0x0000000100061cb4
- (void)siriClientBehaviorMonitor:(id)arg1 willStartStreamWithContext:(id)arg2 option:(id)arg3;	// IMP=0x0000000100061cb0
- (void)CSAudioServerCrashMonitorDidReceiveServerRestart:(id)arg1;	// IMP=0x0000000100061b38
- (void)CSSiriEnabledMonitor:(id)arg1 didReceiveEnabled:(_Bool)arg2;	// IMP=0x0000000100061a10
- (void)CSVolumeMonitor:(id)arg1 didReceiveAlarmVolumeChanged:(float)arg2;	// IMP=0x00000001000618c8
- (void)CSVolumeMonitor:(id)arg1 didReceiveMusicVolumeChanged:(float)arg2;	// IMP=0x0000000100061770
- (void)CSTimerMonitor:(id)arg1 didReceiveTimerChanged:(long long)arg2;	// IMP=0x00000001000614f0
- (void)CSAlarmMonitor:(id)arg1 didReceiveAlarmChanged:(long long)arg2;	// IMP=0x0000000100061270
- (void)CSMediaPlayingMonitor:(id)arg1 didReceiveMediaPlayingChanged:(long long)arg2;	// IMP=0x00000001000610b8
- (float)_combineResultsWithOptimalFromNoise:(float)arg1 andOptimalFromLkfs:(float)arg2 withUserOffset:(float)arg3;	// IMP=0x0000000100060edc
- (float)_estimatedTTSVolume:(float)arg1 lowerLimit:(float)arg2 upperLimit:(float)arg3 TTSmappingInputRangeLow:(float)arg4 TTSmappingInputRangeHigh:(float)arg5 TTSmappingOutputRangeLow:(float)arg6 TTSmappingOutputRangeHigh:(float)arg7;	// IMP=0x0000000100060e38
- (float)_scaleInputWithInRangeOutRange:(float)arg1 minIn:(float)arg2 maxIn:(float)arg3 minOut:(float)arg4 maxOut:(float)arg5;	// IMP=0x0000000100060e18
- (float)estimatedTTSVolumeForNoiseLevelAndLKFS:(float)arg1 LKFS:(float)arg2;	// IMP=0x000000010006081c
- (void)voiceTriggerDidDetectKeyword:(id)arg1 deviceId:(id)arg2;	// IMP=0x0000000100060428
- (void)audioStreamProvider:(id)arg1 audioChunkForTVAvailable:(id)arg2;	// IMP=0x0000000100060424
- (void)audioStreamProvider:(id)arg1 didStopStreamUnexpectly:(long long)arg2;	// IMP=0x0000000100060288
- (void)audioStreamProvider:(id)arg1 audioBufferAvailable:(id)arg2;	// IMP=0x000000010005fff0
- (void)reset;	// IMP=0x000000010005ff50
- (void)_resumeSSVProcessing;	// IMP=0x000000010005fe2c
- (void)_pauseSSVProcessing;	// IMP=0x000000010005fd0c
- (float)estimateSoundLevelbySoundType:(long long)arg1;	// IMP=0x000000010005faf8
- (void)_processAudioChunk:(id)arg1 soundType:(long long)arg2;	// IMP=0x000000010005f7e0
- (void)prepareSoundLevelBufferFromSamples:(id)arg1 soundType:(long long)arg2 firedVoiceTriggerEvent:(_Bool)arg3 triggerStartTimeSampleOffset:(unsigned long long)arg4 triggerEndTimeSampleOffset:(unsigned long long)arg5;	// IMP=0x000000010005f598
- (void)_prepareSoundLevelBufferFromSamples:(unsigned int)arg1 soundType:(long long)arg2;	// IMP=0x000000010005f510
- (void)_reset;	// IMP=0x000000010005f480
- (void)_setAsset:(id)arg1;	// IMP=0x000000010005f10c
- (void)setAsset:(id)arg1;	// IMP=0x000000010005f074
- (void)fetchInitSystemVolumes;	// IMP=0x000000010005eef8
- (void)initializeTimerState;	// IMP=0x000000010005ecc4
- (void)initializeAlarmState;	// IMP=0x000000010005ea90
- (void)initializeMediaPlayingState;	// IMP=0x000000010005e81c
- (void)_stopListening;	// IMP=0x000000010005e5f4
- (void)_startListenWithCompletion:(CDUnknownBlockType)arg1;	// IMP=0x000000010005de08
- (void)_startListenPollingWithInterval:(double)arg1 completion:(CDUnknownBlockType)arg2;	// IMP=0x000000010005d904
- (void)_startListenPolling;	// IMP=0x000000010005d7f4
- (void)startSmartSiriVolume;	// IMP=0x000000010005d400
- (id)initWithSamplingRate:(float)arg1 asset:(id)arg2;	// IMP=0x000000010005d004

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

