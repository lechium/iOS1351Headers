//
//     Generated by classdumpios 1.0.1 (64 bit) (iOS port by DreamDevLost)(Debug version compiled Sep 26 2020 13:48:20).
//
//  Copyright (C) 1997-2019 Steve Nygard.
//

#import <objc/NSObject.h>

#import "NSXPCListenerDelegate-Protocol.h"
#import "SecureBackupConcurrentProtocol-Protocol.h"
#import "SecureBackupProtocol-Protocol.h"

@class NSData, NSMutableDictionary, NSString, NSURL;
@protocol OS_dispatch_queue;

@interface SecureBackupDaemon : NSObject <SecureBackupProtocol, SecureBackupConcurrentProtocol, NSXPCListenerDelegate>
{
    _Bool _needInitialBackup;	// 8 = 0x8
    _Bool _pendingNotification;	// 9 = 0x9
    int _cachedPassphraseFD;	// 12 = 0xc
    int _cachedRecordIDPassphraseFD;	// 16 = 0x10
    int _cachedRecoveryKeyFD;	// 20 = 0x14
    NSURL *_cacheDirURL;	// 24 = 0x18
    NSData *_iCDPKeybag;	// 32 = 0x20
    NSObject<OS_dispatch_queue> *_connectionQueue;	// 40 = 0x28
    NSObject<OS_dispatch_queue> *_backupQueue;	// 48 = 0x30
    NSObject<OS_dispatch_queue> *_kvsQueue;	// 56 = 0x38
    NSString *_cachedRecordID;	// 64 = 0x40
    NSString *_iCloudEnvironment;	// 72 = 0x48
    NSMutableDictionary *_ignoredNotifications;	// 80 = 0x50
    NSMutableDictionary *_handledNotifications;	// 88 = 0x58
}

- (void).cxx_destruct;	// IMP=0x0000000100039450
@property(retain, nonatomic) NSMutableDictionary *handledNotifications; // @synthesize handledNotifications=_handledNotifications;
@property(retain, nonatomic) NSMutableDictionary *ignoredNotifications; // @synthesize ignoredNotifications=_ignoredNotifications;
@property _Bool pendingNotification; // @synthesize pendingNotification=_pendingNotification;
@property(copy, nonatomic) NSString *iCloudEnvironment; // @synthesize iCloudEnvironment=_iCloudEnvironment;
@property int cachedRecoveryKeyFD; // @synthesize cachedRecoveryKeyFD=_cachedRecoveryKeyFD;
@property int cachedRecordIDPassphraseFD; // @synthesize cachedRecordIDPassphraseFD=_cachedRecordIDPassphraseFD;
@property int cachedPassphraseFD; // @synthesize cachedPassphraseFD=_cachedPassphraseFD;
@property(copy, nonatomic) NSString *cachedRecordID; // @synthesize cachedRecordID=_cachedRecordID;
@property _Bool needInitialBackup; // @synthesize needInitialBackup=_needInitialBackup;
@property(readonly, retain, nonatomic) NSObject<OS_dispatch_queue> *kvsQueue; // @synthesize kvsQueue=_kvsQueue;
@property(readonly, retain, nonatomic) NSObject<OS_dispatch_queue> *backupQueue; // @synthesize backupQueue=_backupQueue;
@property(readonly, retain, nonatomic) NSObject<OS_dispatch_queue> *connectionQueue; // @synthesize connectionQueue=_connectionQueue;
@property(readonly, nonatomic) NSData *iCDPKeybag; // @synthesize iCDPKeybag=_iCDPKeybag;
@property(retain, nonatomic) NSURL *cacheDirURL; // @synthesize cacheDirURL=_cacheDirURL;
- (void)getCertificatesWithRequest:(id)arg1 reply:(CDUnknownBlockType)arg2;	// IMP=0x0000000100039120
- (void)daemonPasscodeRequestOpinion:(CDUnknownBlockType)arg1;	// IMP=0x0000000100038db4
- (id)fetchPRK:(id *)arg1;	// IMP=0x0000000100038ca4
- (void)prepareHSA2EscrowRecordContents:(id)arg1 usesComplexPassphrase:(_Bool)arg2 reply:(CDUnknownBlockType)arg3;	// IMP=0x0000000100037ec4
- (int)getPasscodeRequestFlag:(unsigned long long *)arg1;	// IMP=0x0000000100037e6c
- (int)setPasscodeRequestFlag:(unsigned long long)arg1;	// IMP=0x0000000100037e14
- (void)clearNotifyToken;	// IMP=0x0000000100037db0
- (int)notifyToken;	// IMP=0x0000000100037c88
- (void)beginHSA2PasscodeRequest:(id)arg1 desirePasscodeImmediately:(_Bool)arg2 uuid:(id)arg3 reply:(CDUnknownBlockType)arg4;	// IMP=0x00000001000377e0
- (id)getPendingEscrowRequest:(id *)arg1;	// IMP=0x000000010003776c
- (void)stateCaptureWithReply:(CDUnknownBlockType)arg1;	// IMP=0x00000001000376f8
- (void)notificationInfoWithReply:(CDUnknownBlockType)arg1;	// IMP=0x00000001000375b4
- (void)changeSMSTargetWithRequest:(id)arg1 reply:(CDUnknownBlockType)arg2;	// IMP=0x0000000100036a98
- (void)getCountrySMSCodesWithRequest:(id)arg1 reply:(CDUnknownBlockType)arg2;	// IMP=0x000000010003646c
- (void)startSMSChallengeWithRequest:(id)arg1 reply:(CDUnknownBlockType)arg2;	// IMP=0x0000000100035dc0
- (void)uncachePassphraseWithRequestAsync:(id)arg1;	// IMP=0x0000000100035db0
- (void)uncacheRecoveryKeyWithRequest:(id)arg1 reply:(CDUnknownBlockType)arg2;	// IMP=0x0000000100035b00
- (void)cacheRecoveryKeyWithRequest:(id)arg1 reply:(CDUnknownBlockType)arg2;	// IMP=0x0000000100035860
- (void)uncachePassphraseWithRequest:(id)arg1 reply:(CDUnknownBlockType)arg2;	// IMP=0x00000001000355b0
- (void)cachePassphraseWithRequestAsync:(id)arg1;	// IMP=0x00000001000355a0
- (void)cachePassphraseWithRequest:(id)arg1 reply:(CDUnknownBlockType)arg2;	// IMP=0x0000000100035300
- (void)uncacheRecordIDPassphrase;	// IMP=0x00000001000351a8
- (id)cachedRecoveryKey;	// IMP=0x0000000100035170
@property(copy, nonatomic) NSString *cachedRecordIDPassphrase;
@property(copy, nonatomic) NSString *cachedPassphrase;
- (id)cachedPassphraseForFD:(int)arg1;	// IMP=0x0000000100034e04
- (void)setCachedRecoveryKey:(id)arg1;	// IMP=0x0000000100034dcc
- (int)storeCachedPassphrase:(id)arg1;	// IMP=0x000000010003486c
- (void)updateMetadataWithRequest:(id)arg1 reply:(CDUnknownBlockType)arg2;	// IMP=0x0000000100033d84
- (void)disableWithRequest:(id)arg1 reply:(CDUnknownBlockType)arg2;	// IMP=0x0000000100033548
- (void)setBackOffDateWithRequest:(id)arg1 reply:(CDUnknownBlockType)arg2;	// IMP=0x0000000100032dc8
- (void)backOffDateWithRequest:(id)arg1 reply:(CDUnknownBlockType)arg2;	// IMP=0x0000000100032a30
- (void)deleteAlliCDPRecordsWithRequest:(id)arg1 reply:(CDUnknownBlockType)arg2;	// IMP=0x000000010003231c
- (void)recoverRecordContentsWithRequest:(id)arg1 reply:(CDUnknownBlockType)arg2;	// IMP=0x0000000100031f48
- (void)recoverWithRequest:(id)arg1 reply:(CDUnknownBlockType)arg2;	// IMP=0x0000000100031dc0
- (void)_recoverWithRequest:(id)arg1 reply:(CDUnknownBlockType)arg2;	// IMP=0x000000010002e4e8
- (void)recoverEscrowWithRequest:(id)arg1 reply:(CDUnknownBlockType)arg2;	// IMP=0x000000010002d6c4
- (void)recoverStingrayWithRequest:(id)arg1 reply:(CDUnknownBlockType)arg2;	// IMP=0x000000010002cedc
- (id)restoreEMCSBackup:(id)arg1 withPassword:(id)arg2;	// IMP=0x000000010002c9e0
- (id)restoreEMCSBackup:(id)arg1 keybag:(id)arg2 password:(id)arg3;	// IMP=0x000000010002c7c0
- (void)recordIDAndMetadataForSilentAttempt:(id)arg1 passphraseLength:(unsigned long long)arg2 platform:(int)arg3 reply:(CDUnknownBlockType)arg4;	// IMP=0x000000010002c184
- (id)backups;	// IMP=0x000000010002be7c
- (id)_restoreKeychainWithBackupBag:(id)arg1 password:(id)arg2 keybagDigest:(id)arg3 haveBottledPeer:(_Bool)arg4;	// IMP=0x000000010002b23c
- (id)encodedStatsForViews:(id)arg1;	// IMP=0x000000010002ad38
- (id)restoreBackup:(id)arg1 withName:(id)arg2 keybagDigest:(id)arg3 keybag:(id)arg4 password:(id)arg5;	// IMP=0x000000010002a5b4
- (void)backupWithInfo:(id)arg1 reply:(CDUnknownBlockType)arg2;	// IMP=0x000000010002a560
- (void)backupWithInfo:(id)arg1 garbageCollect:(_Bool)arg2 reply:(CDUnknownBlockType)arg3;	// IMP=0x0000000100029fa8
@property(nonatomic) _Bool backupAllowed;
- (void)handleEscrowStoreResults:(id)arg1 escrowError:(id)arg2 request:(id)arg3 sosPeerID:(id)arg4 newRecordMetadata:(id)arg5 backupKeybag:(id)arg6 reply:(CDUnknownBlockType)arg7;	// IMP=0x0000000100029b1c
- (void)enableWithRequest:(id)arg1 reply:(CDUnknownBlockType)arg2;	// IMP=0x0000000100027408
- (void)setEMCSDict:(id)arg1 backupKeybag:(id)arg2 saveKeybag:(_Bool)arg3 reply:(CDUnknownBlockType)arg4;	// IMP=0x000000010002670c
- (void)stashRecoveryDataWithRequest:(id)arg1 reply:(CDUnknownBlockType)arg2;	// IMP=0x00000001000265a8
- (void)_stashRecoveryDataWithRequest:(id)arg1 reply:(CDUnknownBlockType)arg2;	// IMP=0x00000001000259f4
- (id)massageOutgoingMetadataFromRequest:(id)arg1;	// IMP=0x0000000100025780
- (void)getAccountInfoWithRequest:(id)arg1 reply:(CDUnknownBlockType)arg2;	// IMP=0x00000001000253d4
- (void)synchronizeKVSWithHandler:(CDUnknownBlockType)arg1;	// IMP=0x0000000100024e48
- (id)sortRecordsByBottleID:(id)arg1;	// IMP=0x00000001000242ac
- (id)tagStaleBottleRecords:(id)arg1 suggestedBottles:(id)arg2;	// IMP=0x0000000100023fa8
- (void)_getAccountInfoWithRequest:(id)arg1 reply:(CDUnknownBlockType)arg2;	// IMP=0x0000000100021d64
- (id)_recordIDFromLabel:(id)arg1 withPrefix:(id)arg2 suffix:(id)arg3;	// IMP=0x0000000100021c5c
- (void)getStingrayMetadataWithRequest:(id)arg1 reply:(CDUnknownBlockType)arg2;	// IMP=0x0000000100021670
- (_Bool)hasRecoveryKey;	// IMP=0x00000001000213d8
- (id)filteriCDPRecords:(id)arg1;	// IMP=0x0000000100020efc
- (id)massageIncomingMetadataFromInfo:(id)arg1;	// IMP=0x0000000100020a38
- (void)notificationOccurred:(id)arg1;	// IMP=0x00000001000205e8
- (void)handleNotification:(id)arg1;	// IMP=0x0000000100020238
- (void)recordNotification:(id)arg1 handled:(_Bool)arg2;	// IMP=0x0000000100020150
- (_Bool)listener:(id)arg1 shouldAcceptNewConnection:(id)arg2;	// IMP=0x000000010001fdd0
@property(readonly, nonatomic) _Bool forceICDP;
@property(readonly, retain, nonatomic) NSURL *cachedManifestURL;
@property(readonly, retain, nonatomic) NSURL *cachedKeychainURL;
- (struct os_state_data_s *)_stateCapture;	// IMP=0x000000010001f8a8
- (id)copyKVSState;	// IMP=0x000000010001f1a0
- (void)setupNotifyEvents;	// IMP=0x000000010001efac
- (id)init;	// IMP=0x000000010001ed4c
- (id)normalizeSMSTarget:(id)arg1 error:(id *)arg2;	// IMP=0x000000010001eaec
- (void)unregisterForNotifyEvent:(id)arg1;	// IMP=0x000000010001ea8c
- (void)registerForNotifyEvent:(id)arg1;	// IMP=0x000000010001ea00
- (void)disableiCDPBackup;	// IMP=0x000000010001e9b4
- (void)_disableBackup;	// IMP=0x000000010001e928
- (id)_consumeBackupJournal;	// IMP=0x000000010001d8cc
- (id)_consumeFullBackup;	// IMP=0x000000010001c6cc
- (void)_backupKeychainFully:(_Bool)arg1 reply:(CDUnknownBlockType)arg2;	// IMP=0x000000010001c168
- (void)_backupKeychain;	// IMP=0x000000010001c154
- (void)_backupFullKeychain;	// IMP=0x000000010001c140
- (void)_backupFullKeychainWithReply:(CDUnknownBlockType)arg1;	// IMP=0x000000010001c12c
- (void)_setAutobackupEnabled;	// IMP=0x000000010001c11c
- (void)_setAutobackupEnabledWithReply:(CDUnknownBlockType)arg1;	// IMP=0x000000010001c0ac
- (int)_checkEscrowTrust;	// IMP=0x000000010001bd98
- (void)_removeKVSKeybag;	// IMP=0x000000010001bc08
- (void)garbageCollectEMCSBackupsExcluding:(id)arg1;	// IMP=0x000000010001b9d0
- (id)_EMCSBackupDictForKeybagDigest:(id)arg1;	// IMP=0x000000010001b5a0
- (id)_EMCSBackup;	// IMP=0x000000010001b544
- (void)_setEMCSBackup:(id)arg1 keybag:(id)arg2;	// IMP=0x000000010001b1ec
- (id)_KVSKeybag;	// IMP=0x000000010001b190
- (void)_setKVSKeybag:(id)arg1;	// IMP=0x000000010001af5c
- (void)_removeMetadata;	// IMP=0x000000010001ade0
- (id)_metadata;	// IMP=0x000000010001ad80
- (void)_setMetadata:(id)arg1;	// IMP=0x000000010001abd0
- (void)_removeUsesEscrow;	// IMP=0x000000010001ab1c
- (_Bool)_usesEscrow;	// IMP=0x000000010001aac8
- (void)_setUsesEscrow:(_Bool)arg1;	// IMP=0x000000010001a95c
- (_Bool)_iCDPBackupEnabled;	// IMP=0x000000010001a908
- (_Bool)_backupEnabled;	// IMP=0x000000010001a890
- (void)_setBackupEnabled:(_Bool)arg1 iCDP:(_Bool)arg2;	// IMP=0x000000010001a6c0
- (id)_getLastBackupTimestamp;	// IMP=0x000000010001a634
- (id)_getDERBackupFromKVS;	// IMP=0x000000010001a4e4
- (void)_removeVeeTwoBackup;	// IMP=0x000000010001a34c
- (id)_getICDPBackupFromKVSForView:(id)arg1;	// IMP=0x000000010001a288
- (id)_getProtectedKeychainAndKeybagDigestFromKVS:(id *)arg1;	// IMP=0x000000010001a10c
- (void)_removeProtectedKeychain;	// IMP=0x0000000100019f58
- (id)_pushCachedKeychainToKVS;	// IMP=0x0000000100019564
- (void)storeDERBackupInKVS:(id)arg1;	// IMP=0x0000000100019320
- (id)derDataFromDict:(id)arg1;	// IMP=0x000000010001911c
- (void)_removeCachedKeychain;	// IMP=0x0000000100018fb0
- (void)_storeVeeTwoBackupInKVS:(id)arg1 forViewName:(id)arg2 withKeyStore:(id)arg3 manifestDigest:(id)arg4 keybagDigest:(id)arg5;	// IMP=0x0000000100018b20
- (void)_storeProtectedKeychainInKVS:(id)arg1 keybagDigest:(id)arg2;	// IMP=0x00000001000188a4
- (id)_getKeychainItemForKey:(id)arg1 status:(int *)arg2;	// IMP=0x00000001000186a4
- (void)_removeKeychainItemForKey:(id)arg1;	// IMP=0x0000000100018510
- (void)_saveKeychainItem:(id)arg1 forKey:(id)arg2;	// IMP=0x000000010001832c
- (id)_createBackupKeybagWithPassword:(id)arg1;	// IMP=0x0000000100018180
- (id)createiCloudRecoveryPasswordWithError:(id *)arg1;	// IMP=0x0000000100046408
- (id)createPlistFromDERData:(id)arg1;	// IMP=0x000000010004638c
- (id)createDERDataFromPlist:(id)arg1;	// IMP=0x0000000100046310
- (_Bool)backupSliceKeybagHasRecoveryKey:(id)arg1;	// IMP=0x00000001000462b8
- (id)createEncodedDirectBackupSliceKeybagFromData:(id)arg1 error:(id *)arg2;	// IMP=0x00000001000460f8
- (id)circleChangedNotification;	// IMP=0x00000001000460d8
- (id)currentViews;	// IMP=0x000000010004606c
- (id)allViews;	// IMP=0x0000000100045ff4
- (id)copyOSVersion:(id)arg1;	// IMP=0x0000000100045fc0
- (id)copySerialNumber:(id)arg1;	// IMP=0x0000000100045fac
- (id)createPeerInfoFromData:(id)arg1 error:(id *)arg2;	// IMP=0x0000000100045f5c
- (_Bool)registerRecoveryPublicKey:(id)arg1 error:(id *)arg2;	// IMP=0x0000000100045f0c
- (_Bool)registerSingleRecoverySecret:(id)arg1 iCDP:(_Bool)arg2 error:(id *)arg3;	// IMP=0x0000000100045eb8
- (id)copyEncodedData:(id)arg1 error:(id *)arg2;	// IMP=0x0000000100045e64
- (id)copyMyPeerWithNewDeviceRecoverySecret:(id)arg1 error:(id *)arg2;	// IMP=0x0000000100045e14
- (id)copyBackupKeyForNewDeviceRecoverySecret:(id)arg1 error:(id *)arg2;	// IMP=0x0000000100045dc4
- (id)copyBackupKey:(id)arg1;	// IMP=0x0000000100045dbc
- (id)copyMyPeerIDWithError:(id *)arg1;	// IMP=0x0000000100045d20
- (id)copyMyPeerID;	// IMP=0x0000000100045c60
- (id)copyPeerID:(id)arg1;	// IMP=0x0000000100045c34
- (id)copyMyPeerInfo:(id *)arg1;	// IMP=0x0000000100045be8
- (_Bool)backupWithChanges:(id)arg1 error:(id *)arg2 handler:(CDUnknownBlockType)arg3;	// IMP=0x0000000100045b18
- (_Bool)backupSetConfirmedManifest:(id)arg1 digest:(id)arg2 manifest:(id)arg3 error:(id *)arg4;	// IMP=0x000000010004596c
- (_Bool)backupWithRegisteredBackupsWithError:(id *)arg1 handler:(CDUnknownBlockType)arg2;	// IMP=0x00000001000458b8
- (void)restoreBackupName:(id)arg1 peerID:(id)arg2 keybag:(id)arg3 password:(id)arg4 backup:(id)arg5 reply:(CDUnknownBlockType)arg6;	// IMP=0x0000000100045798
- (id)kvs;	// IMP=0x000000010004570c
- (id)_gestaltValueForKey:(struct __CFString *)arg1;	// IMP=0x00000001000490b8
- (id)makeRecordCandidate:(id)arg1 error:(id *)arg2;	// IMP=0x0000000100048470
- (void)setPasscodeMetadata:(id)arg1 passphraseType:(int)arg2;	// IMP=0x00000001000481d8
- (void)doEnableEscrowMultiICSCWithRequest:(id)arg1 reply:(CDUnknownBlockType)arg2;	// IMP=0x00000001000466b8

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

