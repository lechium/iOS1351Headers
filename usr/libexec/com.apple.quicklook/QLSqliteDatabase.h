//
//     Generated by classdumpios 1.0.1 (64 bit) (iOS port by DreamDevLost)(Debug version compiled Sep 26 2020 13:48:20).
//
//  Copyright (C) 1997-2019 Steve Nygard.
//

#import <objc/NSObject.h>

@class NSMapTable, NSMutableDictionary, NSString;
@protocol OS_dispatch_queue;

@interface QLSqliteDatabase : NSObject
{
    NSString *_path;	// 8 = 0x8
    struct sqlite3 *_db;	// 16 = 0x10
    _Bool _isCorrupted;	// 24 = 0x18
    NSObject<OS_dispatch_queue> *_queue;	// 32 = 0x20
    long long transactionCount;	// 40 = 0x28
    NSMutableDictionary *_statementCache;	// 48 = 0x30
    NSMapTable *_statementsInUseTable;	// 56 = 0x38
    NSString *_tracingPrefix;	// 64 = 0x40
}

+ (void)toggleSqlLogging;	// IMP=0x0000000100037390
- (void).cxx_destruct;	// IMP=0x000000010003733c
@property(retain) NSString *tracingPrefix; // @synthesize tracingPrefix=_tracingPrefix;
@property _Bool isCorrupted; // @synthesize isCorrupted=_isCorrupted;
- (void)_dropStatementCache;	// IMP=0x000000010003718c
- (void)closeDatabase;	// IMP=0x00000001000370b0
- (void)dealloc;	// IMP=0x000000010003707c
- (_Bool)isOpened;	// IMP=0x000000010003704c
- (void)openDatabaseAtPath:(id)arg1;	// IMP=0x0000000100036f58
- (id)queue;	// IMP=0x0000000100036f50
- (void)do:(CDUnknownBlockType)arg1;	// IMP=0x0000000100036dac
- (id)init;	// IMP=0x0000000100036cd8
- (void)_databaseCorrupted;	// IMP=0x0000000100036c68
- (void)_finalizeStatement:(struct sqlite3_stmt **)arg1;	// IMP=0x0000000100036b3c
- (void)vacuum;	// IMP=0x000000010003a274
- (void)setSqliteCacheSize:(long long)arg1;	// IMP=0x000000010003a188
- (void)runStatement:(struct sqlite3_stmt *)arg1 withBoundRowIds:(unsigned long long *)arg2 count:(unsigned long long)arg3 startingAtIndex:(int)arg4 stepHandler:(CDUnknownBlockType)arg5;	// IMP=0x0000000100039fc8
- (void)runStatement:(struct sqlite3_stmt *)arg1 withBoundNumbers:(id)arg2 startingAtIndex:(int)arg3 stepHandler:(CDUnknownBlockType)arg4;	// IMP=0x0000000100039e00
- (void)runStatement:(struct sqlite3_stmt *)arg1 withBoundRowIds:(id)arg2 startingAtIndex:(int)arg3 stepHandler:(CDUnknownBlockType)arg4;	// IMP=0x0000000100039ce8
- (void)runStatement:(struct sqlite3_stmt *)arg1 withBoundObjects:(id)arg2 startingAtIndex:(int)arg3 stepHandler:(CDUnknownBlockType)arg4;	// IMP=0x0000000100039a84
- (void)runStatement:(struct sqlite3_stmt *)arg1 stepHandler:(CDUnknownBlockType)arg2;	// IMP=0x00000001000399b8
- (double)doubleFromColumn:(int)arg1 inStatement:(struct sqlite3_stmt *)arg2;	// IMP=0x0000000100039988
- (float)floatFromColumn:(int)arg1 inStatement:(struct sqlite3_stmt *)arg2;	// IMP=0x0000000100039950
- (int)intFromColumn:(int)arg1 inStatement:(struct sqlite3_stmt *)arg2;	// IMP=0x0000000100039920
- (unsigned long long)unsignedLongLongFromColumn:(int)arg1 inStatement:(struct sqlite3_stmt *)arg2;	// IMP=0x00000001000398f0
- (id)newDataFromColumn:(int)arg1 inStatement:(struct sqlite3_stmt *)arg2 copyBytes:(_Bool)arg3;	// IMP=0x000000010003983c
- (void *)newBufferFromColumn:(int)arg1 inStatement:(struct sqlite3_stmt *)arg2 length:(unsigned int *)arg3;	// IMP=0x00000001000397c4
- (id)newPathFromColumn:(int)arg1 inStatement:(struct sqlite3_stmt *)arg2 uniqueInStringTable:(id)arg3;	// IMP=0x00000001000396ac
- (id)newStringFromColumn:(int)arg1 inStatement:(struct sqlite3_stmt *)arg2 uniqueInStringTable:(id)arg3;	// IMP=0x00000001000395cc
- (struct __CFString *)newCFStringFromColumn:(int)arg1 inStatement:(struct sqlite3_stmt *)arg2 uniqueInStringTable:(id)arg3;	// IMP=0x0000000100039554
- (struct __CFURL *)newCFURLFromColumn:(int)arg1 inStatement:(struct sqlite3_stmt *)arg2;	// IMP=0x00000001000394f8
- (id)newColumnName:(int)arg1 inStatement:(struct sqlite3_stmt *)arg2 uniqueInStringTable:(id)arg3;	// IMP=0x0000000100039418
- (long long)columnCount:(struct sqlite3_stmt *)arg1;	// IMP=0x00000001000393e8
- (void)bindInt:(int)arg1 atIndex:(int)arg2 inStatement:(struct sqlite3_stmt *)arg3;	// IMP=0x000000010003931c
- (void)bindLongLong:(long long)arg1 atIndex:(int)arg2 inStatement:(struct sqlite3_stmt *)arg3;	// IMP=0x0000000100039244
- (void)bindUnsignedLongLong:(unsigned long long)arg1 atIndex:(int)arg2 inStatement:(struct sqlite3_stmt *)arg3;	// IMP=0x000000010003916c
- (void)bindPath:(id)arg1 atIndex:(int)arg2 inStatement:(struct sqlite3_stmt *)arg3;	// IMP=0x0000000100039038
- (void)bindCFURL:(struct __CFURL *)arg1 atIndex:(int)arg2 inStatement:(struct sqlite3_stmt *)arg3;	// IMP=0x0000000100038f38
- (void)bindObject:(id)arg1 atIndex:(int)arg2 inStatement:(struct sqlite3_stmt *)arg3;	// IMP=0x0000000100038c48
- (void)bindBytes:(void *)arg1 length:(unsigned int)arg2 atIndex:(int)arg3 inStatement:(struct sqlite3_stmt *)arg4;	// IMP=0x0000000100038bc0
- (void)checkpoint;	// IMP=0x0000000100038b28
- (void)finalizeStatement:(struct sqlite3_stmt **)arg1;	// IMP=0x00000001000389f8
- (void)resetStatement:(struct sqlite3_stmt *)arg1 unbindValuesThroughIndex:(int)arg2;	// IMP=0x00000001000388e0
- (_Bool)stepStatement:(struct sqlite3_stmt *)arg1 didReturnData:(_Bool *)arg2;	// IMP=0x00000001000385c8
- (_Bool)stepStatement:(struct sqlite3_stmt *)arg1;	// IMP=0x00000001000385b8
- (id)_cacheStatement:(struct sqlite3_stmt *)arg1 forKey:(id)arg2;	// IMP=0x0000000100038444
- (id)_cachedStatementForKey:(id)arg1;	// IMP=0x00000001000383a4
- (struct sqlite3_stmt *)prepareStatement:(const char *)arg1;	// IMP=0x00000001000380e8
- (long long)lastInsertRowId;	// IMP=0x00000001000380c0
- (id)lastCrapWithDate:(id *)arg1;	// IMP=0x0000000100037fe0
- (void)sqliteCrappedOut:(int)arg1 message:(id)arg2;	// IMP=0x0000000100037ce8
- (id)_crapPath;	// IMP=0x0000000100037cd0
- (void)executeSql:(const char *)arg1 withCallback:(CDUnknownFunctionPointerType)arg2 context:(void *)arg3;	// IMP=0x0000000100037cb0
- (void)executeWithCallback:(CDUnknownFunctionPointerType)arg1 context:(void *)arg2 sql:(const char *)arg3;	// IMP=0x0000000100037c44
- (void)executeWithRollbackOnError:(const char *)arg1;	// IMP=0x0000000100037be8
- (void)execute:(const char *)arg1;	// IMP=0x0000000100037b8c
- (void)executeWithBlob:(const void *)arg1 length:(int)arg2 format:(const char *)arg3;	// IMP=0x0000000100037884
- (void)executeWithCallback:(CDUnknownFunctionPointerType)arg1 context:(void *)arg2 rollbackOnError:(_Bool)arg3 sql:(const char *)arg4 arguments:(char *)arg5;	// IMP=0x00000001000376a4
- (void)endTransaction;	// IMP=0x00000001000375f0
- (_Bool)beginTransaction;	// IMP=0x0000000100037524
- (void)disableSqliteTracing;	// IMP=0x00000001000374f0
- (void)enableSqliteTracing:(id)arg1;	// IMP=0x00000001000373a8

@end

