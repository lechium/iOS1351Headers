//
//     Generated by classdumpios 1.0.1 (64 bit) (iOS port by DreamDevLost)(Debug version compiled Sep 26 2020 13:48:20).
//
//  Copyright (C) 1997-2019 Steve Nygard.
//

#import <PassKitCore/PDXPCService.h>

#import "PDApplyManagerObserver-Protocol.h"
#import "PDPaymentServiceExportedInterface-Protocol.h"
#import "PDPaymentWebServiceCoordinatorDelegate-Protocol.h"
#import "PKFieldDetectorObserver-Protocol.h"

@class NSString, PDAccountManager, PDAppletSubcredentialManager, PDApplyManager, PDCardFileManager, PDCloudStoreNotificationCoordinator, PDDatabaseManager, PDDefaultPassManager, PDDevicePasscodeManager, PDExpressPassManager, PDNotificationServiceCoordinator, PDPaymentWebServiceCoordinator, PDPeerPaymentWebServiceCoordinator, PDPushNotificationManager, PDRemoteInterfacePresenter, PDTransactionReceiptFileManager, PDTransitStateManager, PDUserNotificationManager, PKEntitlementWhitelist, PKFieldDetector, PKPaymentTransactionProcessor, PKSecureElement;

@interface PDPaymentService : PDXPCService <PKFieldDetectorObserver, PDApplyManagerObserver, PDPaymentWebServiceCoordinatorDelegate, PDPaymentServiceExportedInterface>
{
    PKEntitlementWhitelist *_whitelist;	// 8 = 0x8
    PDNotificationServiceCoordinator *_notificationServiceCoordinator;	// 16 = 0x10
    PDCloudStoreNotificationCoordinator *_cloudStoreNotificationCoordinator;	// 24 = 0x18
    PDPeerPaymentWebServiceCoordinator *_peerPaymentWebServicesCoordinator;	// 32 = 0x20
    PDPaymentWebServiceCoordinator *_paymentWebServiceCoordinator;	// 40 = 0x28
    PKPaymentTransactionProcessor *_paymentTransactionProcessor;	// 48 = 0x30
    PDRemoteInterfacePresenter *_remoteInterfacePresenter;	// 56 = 0x38
    PDDatabaseManager *_databaseManager;	// 64 = 0x40
    PDExpressPassManager *_expressPassManager;	// 72 = 0x48
    PDTransitStateManager *_transitStateManager;	// 80 = 0x50
    PDUserNotificationManager *_userNotificationManager;	// 88 = 0x58
    PKFieldDetector *_fieldDetector;	// 96 = 0x60
    PKSecureElement *_secureElement;	// 104 = 0x68
    PDDefaultPassManager *_defaultPassManager;	// 112 = 0x70
    PDPushNotificationManager *_pushNotificationManager;	// 120 = 0x78
    PDDevicePasscodeManager *_devicePasscodeManager;	// 128 = 0x80
    PDApplyManager *_applyManager;	// 136 = 0x88
    PDAccountManager *_accountManager;	// 144 = 0x90
    PDAppletSubcredentialManager *_subcredentialManager;	// 152 = 0x98
    PDCardFileManager *_cardFileManager;	// 160 = 0xa0
    PDTransactionReceiptFileManager *_transactionReceiptFileManager;	// 168 = 0xa8
}

- (void).cxx_destruct;	// IMP=0x000000010014c3d8
@property(retain, nonatomic) PDTransactionReceiptFileManager *transactionReceiptFileManager; // @synthesize transactionReceiptFileManager=_transactionReceiptFileManager;
@property(retain, nonatomic) PDCardFileManager *cardFileManager; // @synthesize cardFileManager=_cardFileManager;
@property(retain, nonatomic) PDAppletSubcredentialManager *subcredentialManager; // @synthesize subcredentialManager=_subcredentialManager;
@property(retain, nonatomic) PDAccountManager *accountManager; // @synthesize accountManager=_accountManager;
@property(retain, nonatomic) PDApplyManager *applyManager; // @synthesize applyManager=_applyManager;
@property(retain, nonatomic) PDDevicePasscodeManager *devicePasscodeManager; // @synthesize devicePasscodeManager=_devicePasscodeManager;
@property(retain, nonatomic) PDPushNotificationManager *pushNotificationManager; // @synthesize pushNotificationManager=_pushNotificationManager;
@property(retain, nonatomic) PDDefaultPassManager *defaultPassManager; // @synthesize defaultPassManager=_defaultPassManager;
@property(retain, nonatomic) PKSecureElement *secureElement; // @synthesize secureElement=_secureElement;
@property(retain, nonatomic) PKFieldDetector *fieldDetector; // @synthesize fieldDetector=_fieldDetector;
@property(retain, nonatomic) PDUserNotificationManager *userNotificationManager; // @synthesize userNotificationManager=_userNotificationManager;
@property(retain, nonatomic) PDTransitStateManager *transitStateManager; // @synthesize transitStateManager=_transitStateManager;
@property(retain, nonatomic) PDExpressPassManager *expressPassManager; // @synthesize expressPassManager=_expressPassManager;
@property(retain, nonatomic) PDDatabaseManager *databaseManager; // @synthesize databaseManager=_databaseManager;
@property(retain, nonatomic) PDRemoteInterfacePresenter *remoteInterfacePresenter; // @synthesize remoteInterfacePresenter=_remoteInterfacePresenter;
@property(retain, nonatomic) PKPaymentTransactionProcessor *paymentTransactionProcessor; // @synthesize paymentTransactionProcessor=_paymentTransactionProcessor;
@property(retain, nonatomic) PDPaymentWebServiceCoordinator *paymentWebServiceCoordinator; // @synthesize paymentWebServiceCoordinator=_paymentWebServiceCoordinator;
@property(retain, nonatomic) PDPeerPaymentWebServiceCoordinator *peerPaymentWebServicesCoordinator; // @synthesize peerPaymentWebServicesCoordinator=_peerPaymentWebServicesCoordinator;
@property(retain, nonatomic) PDCloudStoreNotificationCoordinator *cloudStoreNotificationCoordinator; // @synthesize cloudStoreNotificationCoordinator=_cloudStoreNotificationCoordinator;
@property(retain, nonatomic) PDNotificationServiceCoordinator *notificationServiceCoordinator; // @synthesize notificationServiceCoordinator=_notificationServiceCoordinator;
- (void)willPassWithUniqueIdentifierAutomaticallyBecomeDefault:(id)arg1 completion:(CDUnknownBlockType)arg2;	// IMP=0x000000010014c05c
- (void)performProductActionRequest:(id)arg1 completion:(CDUnknownBlockType)arg2;	// IMP=0x000000010014bf70
- (void)productsWithCompletion:(CDUnknownBlockType)arg1;	// IMP=0x000000010014bea0
- (void)sendPaymentPassWithUniqueIdentifier:(id)arg1 didUpdateCredential:(id)arg2;	// IMP=0x000000010014bd80
- (void)sendDidRecieveCredentialInvitation:(id)arg1;	// IMP=0x000000010014bd04
- (void)sendPaymentPassWithUniqueIdentifier:(id)arg1 didUpdateCategoryVisualizationWithStyle:(long long)arg2;	// IMP=0x000000010014bc78
- (void)sendPaymentPassWithUniqueIdentifier:(id)arg1 didUpdateWithTransitProperties:(id)arg2;	// IMP=0x000000010014bbd8
- (void)sendDidUpdateDefaultPaymentPassWithUniqueIdentifier:(id)arg1;	// IMP=0x000000010014bb40
- (void)sendPaymentPassWithUniqueIdentifier:(id)arg1 didEnableTransactionService:(_Bool)arg2;	// IMP=0x000000010014baa0
- (void)sendPaymentPassWithUniqueIdentifier:(id)arg1 didEnableMessageService:(_Bool)arg2;	// IMP=0x000000010014ba00
- (void)sendPaymentPassWithUniqueIdentifier:(id)arg1 didRemoveTransactionWithIdentifier:(id)arg2;	// IMP=0x000000010014b960
- (void)sendPaymentPassWithUniqueIdentifier:(id)arg1 didReceiveBalanceUpdate:(id)arg2;	// IMP=0x000000010014b8c0
- (void)sendPaymentPassWithUniqueIdentifier:(id)arg1 didReceiveTransaction:(id)arg2;	// IMP=0x000000010014b820
- (void)sendPaymentPassWithUniqueIdentifier:(id)arg1 didReceiveMessage:(id)arg2;	// IMP=0x000000010014b780
- (void)sendPassWithUniqueIdentifier:(id)arg1 didReceiveValueAddedServiceTransaction:(id)arg2;	// IMP=0x000000010014b6e0
- (void)fieldDetectorDidExitField:(id)arg1;	// IMP=0x000000010014b670
- (void)fieldDetectorDidEnterField:(id)arg1 withProperties:(id)arg2;	// IMP=0x000000010014b5f4
- (void)transactionReceiptForTransactionWithIdentifier:(id)arg1 updateIfNecessary:(_Bool)arg2 completion:(CDUnknownBlockType)arg3;	// IMP=0x000000010014b228
- (void)deleteTransactionReceiptWithUniqueID:(id)arg1 completion:(CDUnknownBlockType)arg2;	// IMP=0x000000010014b050
- (void)storeTransactionReceiptData:(id)arg1 completion:(CDUnknownBlockType)arg2;	// IMP=0x000000010014ab6c
- (void)transactionReceiptWithUniqueID:(id)arg1 completion:(CDUnknownBlockType)arg2;	// IMP=0x000000010014a970
- (void)requiresUpgradedPasscodeWithCompletion:(CDUnknownBlockType)arg1;	// IMP=0x000000010014a6e0
- (void)enforceUpgradedPasscodePolicyWithCompletion:(CDUnknownBlockType)arg1;	// IMP=0x000000010014a54c
- (void)disbursementVoucherWithDisbursementSource:(unsigned long long)arg1 disbursementTarget:(unsigned long long)arg2 bundleIdentifier:(id)arg3 teamIdentifier:(id)arg4 completion:(CDUnknownBlockType)arg5;	// IMP=0x000000010014a0f8
- (void)passOwnershipTokenWithIdentifier:(id)arg1 completion:(CDUnknownBlockType)arg2;	// IMP=0x0000000100149f68
- (void)storePassOwnershipToken:(id)arg1 withIdentifier:(id)arg2;	// IMP=0x0000000100149dc8
- (void)setDeviceCheckInContextBuildVersion:(id)arg1 outstandingAction:(long long)arg2 forRegion:(id)arg3;	// IMP=0x0000000100149c90
- (void)performDeviceCheckInWithCompletion:(CDUnknownBlockType)arg1;	// IMP=0x0000000100149b6c
- (void)didReceiveSharingInvitationRequest:(id)arg1 withCompletion:(CDUnknownBlockType)arg2;	// IMP=0x0000000100149a10
- (void)didReceiveSharingInvitationWithIdentifier:(id)arg1 fromOriginatorIDSHandle:(id)arg2 sharingSessionIdentifier:(id)arg3 metadata:(id)arg4 completion:(CDUnknownBlockType)arg5;	// IMP=0x0000000100149848
- (void)finishedKeyExchangeForCredential:(id)arg1 withCompletion:(CDUnknownBlockType)arg2;	// IMP=0x00000001001496f0
- (void)sharingInvitationWasInvalidated:(id)arg1 withCredentialIdentifier:(id)arg2 error:(id)arg3 completion:(CDUnknownBlockType)arg4;	// IMP=0x000000010014954c
- (void)credentialWithIdentifier:(id)arg1 completion:(CDUnknownBlockType)arg2;	// IMP=0x00000001001493f0
- (void)requestBackgroundRegistrationForCredentialWithIdentifier:(id)arg1 completion:(CDUnknownBlockType)arg2;	// IMP=0x00000001001492a8
- (void)removeSharingInvitationWithIdentifier:(id)arg1 withCompletion:(CDUnknownBlockType)arg2;	// IMP=0x0000000100149164
- (void)addSubcredential:(id)arg1 fromSharingInvitationWithIdentifier:(id)arg2 completion:(CDUnknownBlockType)arg3;	// IMP=0x0000000100148ff8
- (void)removeSharingInvitationReceiptWithIdentifiers:(id)arg1 onCredential:(id)arg2 completion:(CDUnknownBlockType)arg3;	// IMP=0x0000000100148e8c
- (void)addSharingInvitationReceipts:(id)arg1 onCredentialWithIdentifier:(id)arg2 withCompletion:(CDUnknownBlockType)arg3;	// IMP=0x0000000100148d20
- (void)revokeCredentialsWithIdentifiers:(id)arg1 completion:(CDUnknownBlockType)arg2;	// IMP=0x0000000100148bc8
- (void)registerCredentialsWithIdentifiers:(id)arg1 completion:(CDUnknownBlockType)arg2;	// IMP=0x00000001001487c0
- (void)updateMetadataOnPassWithIdentifier:(id)arg1 credential:(id)arg2 completion:(CDUnknownBlockType)arg3;	// IMP=0x0000000100148660
- (void)subcredentialInvitationsWithCompletion:(CDUnknownBlockType)arg1;	// IMP=0x000000010014851c
- (void)addPlaceholderPassWithConfiguration:(id)arg1 completion:(CDUnknownBlockType)arg2;	// IMP=0x000000010014814c
- (void)setAccountAttestationAnonymizationSalt:(id)arg1 withCompletion:(CDUnknownBlockType)arg2;	// IMP=0x0000000100148008
- (void)accountAttestationAnonymizationSaltWithCompletion:(CDUnknownBlockType)arg1;	// IMP=0x0000000100147ee4
- (void)_requestUpdatesForPassUniqueIdentifier:(id)arg1;	// IMP=0x0000000100147de0
- (void)noteAccountDeletedWithCompletion:(CDUnknownBlockType)arg1;	// IMP=0x0000000100147bd8
- (void)recomputeCategoryVisualizationMangitudesForPassUniqueID:(id)arg1 style:(long long)arg2;	// IMP=0x0000000100147abc
- (void)categoryVisualizationMagnitudesForPassUniqueID:(id)arg1 completion:(CDUnknownBlockType)arg2;	// IMP=0x0000000100147958
- (void)transactionsRequiringReviewForAccountWithIdentifier:(id)arg1 completion:(CDUnknownBlockType)arg2;	// IMP=0x00000001001478b0
- (void)submitTransactionAnswerForTransaction:(id)arg1 questionType:(unsigned long long)arg2 answer:(id)arg3 completion:(CDUnknownBlockType)arg4;	// IMP=0x00000001001471a0
- (void)submitDeleteRequest:(id)arg1 completion:(CDUnknownBlockType)arg2;	// IMP=0x000000010014705c
- (void)submitTermsRequest:(id)arg1 completion:(CDUnknownBlockType)arg2;	// IMP=0x0000000100146f14
- (void)submitDocumentRequest:(id)arg1 completion:(CDUnknownBlockType)arg2;	// IMP=0x0000000100146dcc
- (void)submitApplyRequest:(id)arg1 completion:(CDUnknownBlockType)arg2;	// IMP=0x0000000100146c84
- (void)featureApplicationsForProvisioningWithCompletion:(CDUnknownBlockType)arg1;	// IMP=0x0000000100146b60
- (void)featureApplicationWithIdentifier:(id)arg1 completion:(CDUnknownBlockType)arg2;	// IMP=0x0000000100146a1c
- (void)featureApplicationsWithCompletion:(CDUnknownBlockType)arg1;	// IMP=0x00000001001468fc
- (void)startBackgroundVerificationObserverForPass:(id)arg1 verificationMethod:(id)arg2;	// IMP=0x0000000100146874
- (void)passbookUIServiceDidLaunch:(CDUnknownBlockType)arg1;	// IMP=0x000000010014674c
- (void)scheduleAutomaticPresentationAvailableNotificationForPassWithUniqueIdentifier:(id)arg1 handler:(CDUnknownBlockType)arg2;	// IMP=0x000000010014641c
- (void)removeProductsCache;	// IMP=0x00000001001463c4
- (void)unscheduleDeviceCheckIn;	// IMP=0x000000010014636c
- (void)scheduleDeviceCheckInWithStartTimeOffset:(double)arg1;	// IMP=0x0000000100146300
- (void)scheduleSetupReminders:(CDUnknownBlockType)arg1;	// IMP=0x0000000100145f8c
- (void)consistencyCheckWithHandler:(CDUnknownBlockType)arg1;	// IMP=0x0000000100145dfc
- (void)downloadAllPaymentPassesWithHandler:(CDUnknownBlockType)arg1;	// IMP=0x0000000100145c6c
- (void)simulatePaymentPushTopic:(id)arg1 handler:(CDUnknownBlockType)arg2;	// IMP=0x0000000100145a9c
- (void)initializeSecureElement:(CDUnknownBlockType)arg1;	// IMP=0x0000000100145844
- (void)initializeSecureElementIfNecessaryWithHandler:(CDUnknownBlockType)arg1;	// IMP=0x00000001001453d8
- (void)defaultPaymentApplicationForPassUniqueIdentifier:(id)arg1 handler:(CDUnknownBlockType)arg2;	// IMP=0x0000000100145180
- (void)setDefaultPaymentApplication:(id)arg1 forPassUniqueIdentifier:(id)arg2 handler:(CDUnknownBlockType)arg3;	// IMP=0x0000000100144ee8
- (void)insertOrUpdateValueAddedServiceTransaction:(id)arg1 forPassUniqueIdentifier:(id)arg2 paymentTransaction:(id)arg3 handler:(CDUnknownBlockType)arg4;	// IMP=0x0000000100144adc
- (void)outstandingExpressTransactionState:(CDUnknownBlockType)arg1;	// IMP=0x0000000100144a78
- (void)transitStateWithPassUniqueIdentifier:(id)arg1 paymentApplication:(id)arg2 handler:(CDUnknownBlockType)arg3;	// IMP=0x00000001001449d4
- (void)processTransitTransactionEventWithHistory:(id)arg1 transactionDate:(id)arg2 forPaymentApplication:(id)arg3 withPassUniqueIdentifier:(id)arg4 expressTransactionState:(id)arg5;	// IMP=0x00000001001447c0
- (void)sanitizeExpressPasses;	// IMP=0x0000000100144764
- (void)removeMapsDataForTransactionWithIdentifier:(id)arg1 forPassUniqueIdentifier:(id)arg2 issueReportIdentifier:(id)arg3 completion:(CDUnknownBlockType)arg4;	// IMP=0x000000010014450c
- (void)insertOrUpdatePaymentTransaction:(id)arg1 forPassUniqueIdentifier:(id)arg2 paymentApplication:(id)arg3 handler:(CDUnknownBlockType)arg4;	// IMP=0x0000000100144194
- (void)archiveMessageWithIdentifier:(id)arg1 handler:(CDUnknownBlockType)arg2;	// IMP=0x0000000100143fcc
- (void)deleteAllMessagesForPaymentPassWithUniqueIdentifier:(id)arg1 handler:(CDUnknownBlockType)arg2;	// IMP=0x0000000100143e04
- (void)deleteAllTransactionsForPaymentPassWithUniqueIdentifier:(id)arg1 handler:(CDUnknownBlockType)arg2;	// IMP=0x0000000100143c1c
- (void)deletePaymentTransactionWithIdentifier:(id)arg1 forPassWithUniqueIdentifier:(id)arg2 handler:(CDUnknownBlockType)arg3;	// IMP=0x0000000100143a20
- (void)setCommutePlanReminder:(id)arg1 forCommutePlanIdentifier:(id)arg2 withPassUniqueIdentifier:(id)arg3 handler:(CDUnknownBlockType)arg4;	// IMP=0x00000001001437e4
- (void)commutePlanReminderForCommutePlanIdentifier:(id)arg1 withPassUniqueIdentifier:(id)arg2 handler:(CDUnknownBlockType)arg3;	// IMP=0x00000001001435cc
- (void)setBalanceReminder:(id)arg1 forBalanceIdentifier:(id)arg2 withPassUniqueIdentifier:(id)arg3 handler:(CDUnknownBlockType)arg4;	// IMP=0x000000010014306c
- (void)balanceReminderThresholdForBalanceIdentifier:(id)arg1 withPassUniqueIdentifier:(id)arg2 handler:(CDUnknownBlockType)arg3;	// IMP=0x0000000100142e54
- (void)balancesForPaymentPassWithUniqueIdentifier:(id)arg1 handler:(CDUnknownBlockType)arg2;	// IMP=0x0000000100142c20
- (void)messagesForPaymentPassWithUniqueIdentifier:(id)arg1 handler:(CDUnknownBlockType)arg2;	// IMP=0x00000001001429ec
- (void)valueAddedServiceTransactionWithIdentifier:(id)arg1 handler:(CDUnknownBlockType)arg2;	// IMP=0x000000010014280c
- (void)valueAddedServiceTransactionsForPaymentTransaction:(id)arg1 handler:(CDUnknownBlockType)arg2;	// IMP=0x000000010014262c
- (void)valueAddedServiceTransactionsForPassWithUniqueIdentifier:(id)arg1 limit:(long long)arg2 handler:(CDUnknownBlockType)arg3;	// IMP=0x0000000100142440
- (void)mapsMerchantsWithCompletion:(CDUnknownBlockType)arg1;	// IMP=0x000000010014227c
- (void)passUniqueIdentifierForTransactionWithServiceIdentifier:(id)arg1 completion:(CDUnknownBlockType)arg2;	// IMP=0x0000000100142084
- (void)passUniqueIdentifierForTransactionWithIdentifier:(id)arg1 completion:(CDUnknownBlockType)arg2;	// IMP=0x0000000100141e8c
- (void)installmentPlanTransactionsForPassUniqueIdentifier:(id)arg1 accountIdentifier:(id)arg2 withRedemptionType:(long long)arg3 startDate:(id)arg4 endDate:(id)arg5 completion:(CDUnknownBlockType)arg6;	// IMP=0x0000000100141c04
- (void)installmentPlansWithTransactionReferenceIdentifier:(id)arg1 completion:(CDUnknownBlockType)arg2;	// IMP=0x0000000100141a24
- (void)installmentTransactionsForInstallmentPlanIdentifier:(id)arg1 completion:(CDUnknownBlockType)arg2;	// IMP=0x0000000100141844
- (void)transactionWithReferenceIdentifier:(id)arg1 completion:(CDUnknownBlockType)arg2;	// IMP=0x000000010014164c
- (void)transactionWithServiceIdentifier:(id)arg1 completion:(CDUnknownBlockType)arg2;	// IMP=0x0000000100141454
- (void)transactionWithTransactionIdentifier:(id)arg1 completion:(CDUnknownBlockType)arg2;	// IMP=0x000000010014125c
- (void)transactionsWithTransactionSource:(unsigned long long)arg1 withBackingData:(unsigned long long)arg2 limit:(long long)arg3 completion:(CDUnknownBlockType)arg4;	// IMP=0x0000000100141084
- (void)transactionsForPaymentPassWithUniqueIdentifier:(id)arg1 withTransactionSource:(unsigned long long)arg2 withBackingData:(unsigned long long)arg3 limit:(long long)arg4 completion:(CDUnknownBlockType)arg5;	// IMP=0x0000000100140f14
- (void)pendingTransactionsForPassWithUniqueIdentifier:(id)arg1 withTransactionSource:(unsigned long long)arg2 withBackingData:(unsigned long long)arg3 startDate:(id)arg4 endDate:(id)arg5 limit:(long long)arg6 completion:(CDUnknownBlockType)arg7;	// IMP=0x0000000100140c94
- (void)approvedTransactionsForPassWithUniqueIdentifier:(id)arg1 withTransactionSource:(unsigned long long)arg2 withBackingData:(unsigned long long)arg3 startDate:(id)arg4 endDate:(id)arg5 limit:(long long)arg6 completion:(CDUnknownBlockType)arg7;	// IMP=0x0000000100140a14
- (void)transactionsForPaymentPassWithUniqueIdentifier:(id)arg1 withTransactionType:(long long)arg2 withTransactionSource:(unsigned long long)arg3 withBackingData:(unsigned long long)arg4 startDate:(id)arg5 endDate:(id)arg6 limit:(long long)arg7 completion:(CDUnknownBlockType)arg8;	// IMP=0x0000000100140798
- (void)transactionsForPaymentPassWithuniqueIdentifier:(id)arg1 withMerchantCategory:(long long)arg2 withTransactionSource:(unsigned long long)arg3 withBackingData:(unsigned long long)arg4 startDate:(id)arg5 endDate:(id)arg6 limit:(long long)arg7 completion:(CDUnknownBlockType)arg8;	// IMP=0x000000010014051c
- (void)transactionsForPaymentPassWithUniqueIdentifier:(id)arg1 matchingMerchant:(id)arg2 withTransactionSource:(unsigned long long)arg3 withBackingData:(unsigned long long)arg4 limit:(long long)arg5 completion:(CDUnknownBlockType)arg6;	// IMP=0x00000001001402d0
- (void)transactionsForPaymentPassWithUniqueIdentifier:(id)arg1 withMapsIdentifier:(unsigned long long)arg2 withTransactionSource:(unsigned long long)arg3 withBackingData:(unsigned long long)arg4 limit:(long long)arg5 completion:(CDUnknownBlockType)arg6;	// IMP=0x00000001001400b0
- (void)transactionsForPaymentPassWithUniqueIdentifier:(id)arg1 withPeerPaymentCounterpartHandle:(id)arg2 withTransactionSource:(unsigned long long)arg3 withBackingData:(unsigned long long)arg4 limit:(long long)arg5 completion:(CDUnknownBlockType)arg6;	// IMP=0x000000010013fe64
- (void)transactionsForPassWithUniqueIdentifier:(id)arg1 withTransactionSource:(unsigned long long)arg2 withBackingData:(unsigned long long)arg3 startDate:(id)arg4 endDate:(id)arg5 orderedByDate:(long long)arg6 limit:(long long)arg7 completion:(CDUnknownBlockType)arg8;	// IMP=0x000000010013fbdc
- (void)transactionsForPassWithUniqueIdentifier:(id)arg1 withTransactionSource:(unsigned long long)arg2 withBackingData:(unsigned long long)arg3 startDate:(id)arg4 endDate:(id)arg5 limit:(long long)arg6 completion:(CDUnknownBlockType)arg7;	// IMP=0x000000010013fb24
- (void)cashbackByPeriodFromPassUniqueIdentifier:(id)arg1 withStartDate:(id)arg2 endDate:(id)arg3 calendar:(id)arg4 calendarUnit:(unsigned long long)arg5 type:(long long)arg6 completion:(CDUnknownBlockType)arg7;	// IMP=0x000000010013f898
- (void)transactionCountByPeriodForPassWithUniqueIdentifier:(id)arg1 withTransactionSource:(unsigned long long)arg2 withBackingData:(unsigned long long)arg3 calendar:(id)arg4 unit:(unsigned long long)arg5 includePurchaseTotal:(_Bool)arg6 completion:(CDUnknownBlockType)arg7;	// IMP=0x000000010013f650
- (void)submitVerificationCode:(id)arg1 verificationData:(id)arg2 forDPANIdentifier:(id)arg3 handler:(CDUnknownBlockType)arg4;	// IMP=0x000000010013f10c
- (void)messagesAppLaunchTokenForPassWithUniqueIdentifier:(id)arg1 handler:(CDUnknownBlockType)arg2;	// IMP=0x000000010013ef00
- (void)transactionsAppLaunchTokenForPassWithUniqueIdentifier:(id)arg1 handler:(CDUnknownBlockType)arg2;	// IMP=0x000000010013ecf4
- (void)setSharedPaymentWebServiceContext:(id)arg1 handler:(CDUnknownBlockType)arg2;	// IMP=0x000000010013ea88
- (void)sharedPaymentWebServiceContextWithHandler:(CDUnknownBlockType)arg1;	// IMP=0x000000010013e848
- (void)simulateDefaultExpressTransitPassIdentifier:(id)arg1 forExpressMode:(id)arg2 handler:(CDUnknownBlockType)arg3;	// IMP=0x000000010013e654
- (void)removeExpressPassWithUniqueIdentifier:(id)arg1 completion:(CDUnknownBlockType)arg2;	// IMP=0x000000010013e598
- (void)removeExpressPassesWithCardType:(long long)arg1 completion:(CDUnknownBlockType)arg2;	// IMP=0x000000010013e4f0
- (void)setExpressWithPassInformation:(id)arg1 credential:(id)arg2 completion:(CDUnknownBlockType)arg3;	// IMP=0x000000010013e3fc
- (void)conflictingExpressPassIdentifiersForPassInformation:(id)arg1 withReferenceExpressState:(id)arg2 completion:(CDUnknownBlockType)arg3;	// IMP=0x000000010013e30c
- (void)conflictingExpressPassIdentifiersForPassInformation:(id)arg1 withCompletion:(CDUnknownBlockType)arg2;	// IMP=0x000000010013e238
- (void)expressPassInformationForMode:(id)arg1 withHandler:(CDUnknownBlockType)arg2;	// IMP=0x000000010013e180
- (void)expressPassesInformationWithHandler:(CDUnknownBlockType)arg1;	// IMP=0x000000010013e0e4
- (void)expressPassesInformationWithAutomaticSelectionTechnologyType:(long long)arg1 handler:(CDUnknownBlockType)arg2;	// IMP=0x000000010013e040
- (void)expressPassesInformationWithCardType:(long long)arg1 handler:(CDUnknownBlockType)arg2;	// IMP=0x000000010013df9c
- (void)expressPassInformationWithPassUniqueIdentifier:(id)arg1 handler:(CDUnknownBlockType)arg2;	// IMP=0x000000010013dee4
- (void)setDefaultExpressFelicaTransitPassIdentifier:(id)arg1 withCredential:(id)arg2 completion:(CDUnknownBlockType)arg3;	// IMP=0x000000010013dcdc
- (void)defaultPaymentPassIngestionSpecificIdentifier:(CDUnknownBlockType)arg1;	// IMP=0x000000010013d9bc
- (void)setDefaultPaymentPassUniqueIdentifier:(id)arg1 handler:(CDUnknownBlockType)arg2;	// IMP=0x000000010013d764
- (void)defaultPaymentPassUniqueIdentifier:(CDUnknownBlockType)arg1;	// IMP=0x000000010013d540
- (void)paymentDeviceFieldPropertiesWithHandler:(CDUnknownBlockType)arg1;	// IMP=0x000000010013d300
- (void)applyManager:(id)arg1 didUpdateApplication:(id)arg2 oldApplication:(id)arg3;	// IMP=0x000000010013d284
- (void)applyManager:(id)arg1 didRemoveApplication:(id)arg2;	// IMP=0x000000010013d208
- (void)applyManager:(id)arg1 didAddApplication:(id)arg2;	// IMP=0x000000010013d18c
- (void)paymentWebServiceCoordinator:(id)arg1 didDownloadTransactionReceipt:(id)arg2 forTransactionWithIdentifier:(id)arg3;	// IMP=0x000000010013d0ec
- (id)remoteObjectProxyWithErrorHandler:(CDUnknownBlockType)arg1;	// IMP=0x000000010013cfb0
- (id)remoteObjectProxy;	// IMP=0x000000010013cf7c
- (void)dealloc;	// IMP=0x000000010013cf20
- (id)initWithConnection:(id)arg1;	// IMP=0x000000010013ce80

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

