//
//     Generated by classdumpios 1.0.1 (64 bit) (iOS port by DreamDevLost)(Debug version compiled Sep 26 2020 13:48:20).
//
//  Copyright (C) 1997-2019 Steve Nygard.
//

#import <objc/NSObject.h>

@class IDSPeerIDManager, IMTimer, NSDate, NSMutableDictionary, NSRecursiveLock;
@protocol IDSIDStatusDependencyProvider, IMUserDefaults;

@interface IDSIDStatusQueryController : NSObject
{
    IMTimer *_purgeTimer;	// 8 = 0x8
    NSRecursiveLock *_lock;	// 16 = 0x10
    NSMutableDictionary *_idStatusCache;	// 24 = 0x18
    NSMutableDictionary *_completionBlocks;	// 32 = 0x20
    NSDate *_startQueryDate;	// 40 = 0x28
    CDUnknownBlockType _purgeCancelBlock;	// 48 = 0x30
    CDUnknownBlockType _purgeEnqueueBlock;	// 56 = 0x38
    _Bool _loaded;	// 64 = 0x40
    int _numQueriesThisHour;	// 68 = 0x44
    _Bool _allowProxyQueries;	// 72 = 0x48
    IDSPeerIDManager *_peerIDManager;	// 80 = 0x50
    id <IMUserDefaults> _userDefaults;	// 88 = 0x58
    id <IDSIDStatusDependencyProvider> _dependencyProvider;	// 96 = 0x60
}

+ (id)sharedInstance;	// IMP=0x00000001003ba824
- (void).cxx_destruct;	// IMP=0x00000001003cb820
@property(nonatomic) _Bool allowProxyQueries; // @synthesize allowProxyQueries=_allowProxyQueries;
@property(retain, nonatomic) id <IDSIDStatusDependencyProvider> dependencyProvider; // @synthesize dependencyProvider=_dependencyProvider;
@property(retain, nonatomic) id <IMUserDefaults> userDefaults; // @synthesize userDefaults=_userDefaults;
@property(retain, nonatomic) IDSPeerIDManager *peerIDManager; // @synthesize peerIDManager=_peerIDManager;
- (void)_saveCache;	// IMP=0x00000001003cb30c
- (void)_loadCache;	// IMP=0x00000001003ca890
- (void)_pruneExpiredStatusUnknownEntries;	// IMP=0x00000001003c9714
- (void)_loadIfNeeded;	// IMP=0x00000001003c9674
- (void)_setPurgeTimer;	// IMP=0x00000001003c9624
- (void)_flush;	// IMP=0x00000001003c9240
- (void)clearCache;	// IMP=0x00000001003c8c50
- (void)removeCompletionBlockForUniqueIdentifier:(id)arg1;	// IMP=0x00000001003c87cc
- (void)addCompletionBlock:(CDUnknownBlockType)arg1 forUniqueIdentifier:(id)arg2;	// IMP=0x00000001003c8088
- (void)_sendIDStatusChanges:(id)arg1 forService:(id)arg2 URI:(id)arg3 success:(_Bool)arg4 error:(id)arg5;	// IMP=0x00000001003c7924
- (void)remoteDevicesForIDs:(id)arg1 fromIdentity:(id)arg2 fromURI:(id)arg3 fromService:(id)arg4 lightQuery:(_Bool)arg5 allowQuery:(_Bool)arg6 completionBlock:(CDUnknownBlockType)arg7;	// IMP=0x00000001003c6c88
- (id)currentCacheForService:(id)arg1;	// IMP=0x00000001003c6804
- (id)currentCache;	// IMP=0x00000001003c62fc
- (unsigned int)cachedIDStatusForID:(id)arg1 fromURI:(id)arg2 fromService:(id)arg3 respectExpiry:(_Bool)arg4;	// IMP=0x00000001003c5510
- (unsigned int)cachedIDStatusForID:(id)arg1 fromURI:(id)arg2 fromService:(id)arg3;	// IMP=0x00000001003c5428
- (void)setCachedIDStatus:(unsigned int)arg1 ForID:(id)arg2 fromURI:(id)arg3 fromService:(id)arg4;	// IMP=0x00000001003c4a40
- (void)requestIDStatusForID:(id)arg1 fromIdentity:(id)arg2 fromURI:(id)arg3 fromService:(id)arg4 lightQuery:(_Bool)arg5 allowQuery:(_Bool)arg6 completionBlock:(CDUnknownBlockType)arg7;	// IMP=0x00000001003c488c
- (void)requestIDStatusForIDs:(id)arg1 fromIdentity:(id)arg2 fromURI:(id)arg3 fromService:(id)arg4 lightQuery:(_Bool)arg5 allowQuery:(_Bool)arg6 forceQuery:(_Bool)arg7 completionBlock:(CDUnknownBlockType)arg8;	// IMP=0x00000001003c3ebc
- (void)_lookupIDStatusForURIs:(id)arg1 fromIdentity:(id)arg2 fromURI:(id)arg3 fromService:(id)arg4 lightQuery:(_Bool)arg5 allowQuery:(_Bool)arg6 forceQuery:(_Bool)arg7 completionBlock:(CDUnknownBlockType)arg8;	// IMP=0x00000001003c018c
- (_Bool)hasValidStatusForURI:(id)arg1 fromURI:(id)arg2 fromService:(id)arg3;	// IMP=0x00000001003bfc20
- (id)_negativeTTLForURI:(id)arg1 fromService:(id)arg2;	// IMP=0x00000001003bfa98
- (id)_validExpiryForURI:(id)arg1 fromService:(id)arg2;	// IMP=0x00000001003bf910
- (id)_lookupDateForURI:(id)arg1 fromService:(id)arg2;	// IMP=0x00000001003bf788
- (id)_cachedResultsForURIs:(id)arg1 fromURI:(id)arg2 fromService:(id)arg3;	// IMP=0x00000001003bf414
- (void)noteIncomingID:(id)arg1 fromService:(id)arg2;	// IMP=0x00000001003be9f8
- (void)removeCachedEntriesForService:(id)arg1;	// IMP=0x00000001003be734
- (unsigned int)_IDStatusForURI:(id)arg1 fromService:(id)arg2;	// IMP=0x00000001003bd948
- (void)_updateCacheWithStatusUpdates:(id)arg1 fromURI:(id)arg2 fromService:(id)arg3 success:(_Bool)arg4 hadError:(_Bool)arg5 negativeCacheHints:(id)arg6;	// IMP=0x00000001003bbf9c
- (void)dealloc;	// IMP=0x00000001003bbf00
- (id)init;	// IMP=0x00000001003bbdc8
- (id)initWithShouldAllowProxyQueries:(_Bool)arg1 peerIDManager:(id)arg2 userDefaults:(id)arg3 statusDepencencyProvider:(id)arg4;	// IMP=0x00000001003ba9ec

@end

