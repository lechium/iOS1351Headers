//
//     Generated by classdumpios 1.0.1 (64 bit) (iOS port by DreamDevLost)(Debug version compiled Sep 26 2020 13:48:20).
//
//  Copyright (C) 1997-2019 Steve Nygard.
//

#import <objc/NSObject.h>

#import "IDSBaseSocketPairConnectionDelegate-Protocol.h"
#import "IDSDSession-Protocol.h"
#import "IDSDSessionAWDMetrics-Protocol.h"
#import "IDSRealTimeEncryptionDelegate-Protocol.h"
#import "IDSSocketPairConnectionDelegate-Protocol.h"
#import "_IDSSessionConnectionDelegate-Protocol.h"

@class IDSBaseSocketPairConnection, IDSClientChannel, IDSConnectionContext, IDSDSessionInvitationManager, IDSDSessionMessenger, IDSDSessionSharedState, IDSGroupStatusNotificationParameters, NSData, NSDate, NSMutableArray, NSMutableData, NSMutableDictionary, NSNumber, NSString;
@protocol IDSDSessionAvailabilityCheck;

@interface IDSDSession : NSObject <IDSDSessionAWDMetrics, _IDSSessionConnectionDelegate, IDSSocketPairConnectionDelegate, IDSBaseSocketPairConnectionDelegate, IDSRealTimeEncryptionDelegate, IDSDSession>
{
    _Bool _assertedRealTimeMode;	// 8 = 0x8
    id <IDSDSessionAvailabilityCheck> _availabilityCheck;	// 16 = 0x10
    NSDate *_awdStartTimestamp;	// 24 = 0x18
    NSString *_awdUniqueId;	// 32 = 0x20
    IDSBaseSocketPairConnection *_baseSocketPairConnection;	// 40 = 0x28
    _Bool _bypassUTun;	// 48 = 0x30
    NSMutableArray *_cachedClientData;	// 56 = 0x38
    long long _cachedNumberOfActiveParticipants;	// 64 = 0x40
    IDSClientChannel *_clientChannel;	// 72 = 0x48
    CDUnknownBlockType _clientChannelExcessiveCacheTimeoutBlock;	// 80 = 0x50
    unsigned long long _connectionClaimed;	// 88 = 0x58
    IDSConnectionContext *_connectionContext;	// 96 = 0x60
    unsigned int _currentGenerationCounter;	// 104 = 0x68
    _Bool _disallowCellularInterface;	// 108 = 0x6c
    _Bool _disallowWifiInterface;	// 109 = 0x6d
    NSDate *_endDate;	// 112 = 0x70
    NSMutableDictionary *_extraConnections;	// 120 = 0x78
    unsigned long long _extraConnectionCount;	// 128 = 0x80
    unsigned int _groupSessionState;	// 136 = 0x88
    IDSGroupStatusNotificationParameters *_groupStatusNotificationParams;	// 144 = 0x90
    int _idsDataChannelClientPID;	// 152 = 0x98
    unsigned long long _initialLinkType;	// 160 = 0xa0
    NSString *_instanceID;	// 168 = 0xa8
    double _inviteRecvTime;	// 176 = 0xb0
    _Bool _joinGroupSessionPending;	// 184 = 0xb8
    CDUnknownBlockType _joinNotificationDeliveryTimeoutBlock;	// 192 = 0xc0
    unsigned char _keyMaterial[60];	// 200 = 0xc8
    long long _linkProtocol;	// 264 = 0x108
    double _membershipChangeEventTime;	// 272 = 0x110
    double _newKeyEventTime;	// 280 = 0x118
    struct *_packetBufferArray[8];	// 288 = 0x120
    unsigned long long _preferredAddressFamily;	// 352 = 0x160
    _Bool _preferCellularForCallSetup;	// 360 = 0x168
    NSNumber *_qrError;	// 368 = 0x170
    NSMutableArray *_qrEventsForRTCReports;	// 376 = 0x178
    NSNumber *_qrReason;	// 384 = 0x180
    unsigned int _reason;	// 392 = 0x188
    unsigned short _relayPort;	// 396 = 0x18c
    _Bool _sessionStartedCalled;	// 398 = 0x18e
    NSMutableData *_sessionInfoMetaData;	// 400 = 0x190
    _Bool _shouldAssertRealTimeMode;	// 408 = 0x198
    _Bool _shouldConnectToQRServer;	// 409 = 0x199
    NSData *_skeData;	// 416 = 0x1a0
    int _socketDescriptor;	// 424 = 0x1a8
    NSDate *_startDate;	// 432 = 0x1b0
    _Bool _supressClientNotifications;	// 440 = 0x1b8
    _Bool _verboseFunctionalLogging;	// 441 = 0x1b9
    _Bool _verbosePerformanceLogging;	// 442 = 0x1ba
    NSString *_clientID;	// 448 = 0x1c0
    IDSDSessionInvitationManager *_invitationManager;	// 456 = 0x1c8
    IDSDSessionMessenger *_messenger;	// 464 = 0x1d0
    IDSDSessionSharedState *_sharedState;	// 472 = 0x1d8
}

- (void).cxx_destruct;	// IMP=0x0000000100109814
@property(retain, nonatomic) IDSDSessionSharedState *sharedState; // @synthesize sharedState=_sharedState;
@property(nonatomic) _Bool shouldConnectToQRServer; // @synthesize shouldConnectToQRServer=_shouldConnectToQRServer;
@property(retain, nonatomic) NSNumber *qrReason; // @synthesize qrReason=_qrReason;
@property(retain, nonatomic) NSNumber *qrError; // @synthesize qrError=_qrError;
@property(retain, nonatomic) IDSDSessionMessenger *messenger; // @synthesize messenger=_messenger;
@property(retain, nonatomic) IDSDSessionInvitationManager *invitationManager; // @synthesize invitationManager=_invitationManager;
@property(readonly, nonatomic) NSString *instanceID; // @synthesize instanceID=_instanceID;
@property(readonly, nonatomic) unsigned int groupSessionState; // @synthesize groupSessionState=_groupSessionState;
@property(readonly, nonatomic) _Bool disallowWifiInterface; // @synthesize disallowWifiInterface=_disallowWifiInterface;
@property(readonly, nonatomic) _Bool disallowCellularInterface; // @synthesize disallowCellularInterface=_disallowCellularInterface;
@property(retain, nonatomic) NSString *clientID; // @synthesize clientID=_clientID;
- (unsigned long long)connectionCountHint;	// IMP=0x00000001001094d4
- (_Bool)_useBTDatagramPipe;	// IMP=0x0000000100109460
- (void)_setClientType:(long long)arg1;	// IMP=0x00000001001093f4
- (_Bool)isScreenSharingSession;	// IMP=0x0000000100109380
- (unsigned int)state;	// IMP=0x0000000100109310
- (id)fromID;	// IMP=0x00000001001092ac
- (id)groupID;	// IMP=0x0000000100109248
- (id)accountID;	// IMP=0x00000001001091e4
- (id)participantID;	// IMP=0x0000000100109180
- (long long)clientType;	// IMP=0x0000000100109110
- (_Bool)enableQuickRelay;	// IMP=0x000000010010909c
- (_Bool)isInitiator;	// IMP=0x0000000100109028
- (id)uniqueID;	// IMP=0x0000000100108fc4
- (id)destinations;	// IMP=0x0000000100108f60
- (void)setSeqRecvStart:(unsigned int)arg1;	// IMP=0x0000000100108eec
- (void)setSSRCRecv:(unsigned int)arg1;	// IMP=0x0000000100108e78
- (void)setRemoteUsePhoneContinuityLocalMessage:(id)arg1;	// IMP=0x0000000100108ddc
- (void)setRemoteUseCloudPairedControlChannel:(id)arg1;	// IMP=0x0000000100108d40
- (void)setQuickRelaySessionToken:(id)arg1;	// IMP=0x0000000100108ca4
- (void)setInviteTimeout:(long long)arg1;	// IMP=0x0000000100108c2c
- (void)setRemoteBlob:(id)arg1;	// IMP=0x0000000100108b90
- (void)receivedEndMessage:(id)arg1 fromID:(id)arg2;	// IMP=0x0000000100108ac4
- (void)receivedSessionMessage:(id)arg1 fromID:(id)arg2;	// IMP=0x00000001001089f8
- (void)receivedCancelMessage:(id)arg1 fromID:(id)arg2;	// IMP=0x000000010010892c
- (void)receivedDeclineMessage:(id)arg1 fromID:(id)arg2;	// IMP=0x0000000100108860
- (void)receivedAcceptMessage:(id)arg1 fromID:(id)arg2;	// IMP=0x0000000100108794
- (void)sendSessionMessage:(id)arg1 toDestinations:(id)arg2;	// IMP=0x00000001001086c8
- (void)declineInvitationWithData:(id)arg1 forceFromID:(id)arg2 additionalMessageAttributes:(id)arg3;	// IMP=0x00000001001085c4
- (void)declineInvitationWithData:(id)arg1;	// IMP=0x0000000100108530
- (void)declineInvitation;	// IMP=0x00000001001084cc
- (void)acceptInvitationWithData:(id)arg1;	// IMP=0x0000000100108438
- (void)acceptInvitation;	// IMP=0x00000001001083d4
- (void)cancelInvitationWithRemoteEndedReasonOverride:(unsigned int)arg1;	// IMP=0x0000000100108368
- (void)cancelInvitationWithData:(id)arg1;	// IMP=0x00000001001082d4
- (void)cancelInvitation;	// IMP=0x0000000100108270
- (void)sendInvitationWithData:(id)arg1 declineOnError:(_Bool)arg2;	// IMP=0x00000001001081c8
- (void)sendInvitationWithOptions:(id)arg1 declineOnError:(_Bool)arg2;	// IMP=0x0000000100108120
- (void)sendCancelInvitationMessage;	// IMP=0x00000001001080a4
- (void)invitationDeclined;	// IMP=0x000000010010802c
- (_Bool)isWithDefaultPairedDevice;	// IMP=0x0000000100107ef0
- (void)didSessionReinitiated;	// IMP=0x0000000100107984
- (void)_receivedReinitiateBringupAckMessage:(id)arg1 fromID:(id)arg2;	// IMP=0x0000000100106a40
- (void)_receivedReinitiateBringupMessage:(id)arg1 fromID:(id)arg2;	// IMP=0x0000000100105ea8
- (void)_receivedReinitiateTeardownAckMessage:(id)arg1 fromID:(id)arg2;	// IMP=0x0000000100104f2c
- (void)_receivedReinitiateTeardownMessage:(id)arg1 fromID:(id)arg2;	// IMP=0x0000000100103c70
- (void)_receivedReinitiateRequestMessage:(id)arg1 fromID:(id)arg2;	// IMP=0x00000001001038d0
- (void)receivedReinitiateMessage:(id)arg1 fromID:(id)arg2;	// IMP=0x0000000100103338
- (void)reinitiate;	// IMP=0x00000001001013e8
- (void)getActiveParticipants:(id)arg1 pushTokenForParticipants:(id)arg2;	// IMP=0x0000000100100cc0
- (void)_updateActiveParticipants:(id)arg1;	// IMP=0x00000001001004d8
- (void)processAllocationErrorStatus:(int)arg1 errorCode:(int)arg2;	// IMP=0x0000000100100160
- (void)onParticipantID2PushTokenMappingChange:(id)arg1;	// IMP=0x00000001000ff5d8
- (void)sendAllocationRequest:(id)arg1;	// IMP=0x00000001000fed10
- (void)recvMembershipChangeEventWithReason:(unsigned char)arg1;	// IMP=0x00000001000fec1c
- (void)recvKeyMaterial:(id)arg1;	// IMP=0x00000001000fe6a8
- (void)sendKeyMaterialMessage:(id)arg1 toDestination:(id)arg2;	// IMP=0x00000001000fd868
- (void)leaveGroupSession:(id)arg1;	// IMP=0x00000001000fc930
- (void)joinWithOptions:(id)arg1;	// IMP=0x00000001000fa820
- (id)_checkIfPushMessageSizeGreaterThanMaxLimit:(id)arg1 maxLimit:(unsigned long long)arg2;	// IMP=0x00000001000fa2f8
- (void)setGroupStreamInfo:(id)arg1 sessionInfo:(id)arg2;	// IMP=0x00000001000f9538
- (void)updateParticipantData:(id)arg1 withContext:(id)arg2;	// IMP=0x00000001000f90ac
- (void)updateMembers:(id)arg1 withContext:(id)arg2 triggeredLocally:(_Bool)arg3;	// IMP=0x00000001000f7858
- (_Bool)destinationsContainFromID:(id)arg1;	// IMP=0x00000001000f73e4
- (void)link:(id)arg1 didReceiveSessionStats:(id)arg2 relayGroupID:(id)arg3 relaySessionID:(id)arg4 success:(_Bool)arg5;	// IMP=0x00000001000f7088
- (void)link:(id)arg1 didReceiveSessionInfo:(id)arg2 relayGroupID:(id)arg3 relaySessionID:(id)arg4 success:(_Bool)arg5;	// IMP=0x00000001000f512c
- (void)link:(id)arg1 didReceiveDebugDataForClient:(id)arg2 dataType:(unsigned char)arg3;	// IMP=0x00000001000f4c28
- (void)link:(id)arg1 didReceiveMembershipChangedInformation:(unsigned char)arg2;	// IMP=0x00000001000f47ac
- (void)link:(id)arg1 didReceiveEncryptionInformation:(id)arg2;	// IMP=0x00000001000f41a4
- (void)link:(id)arg1 didAddQREvent:(id)arg2;	// IMP=0x00000001000f3cdc
- (void)link:(id)arg1 didDefaultUnderlyingLinkChangeSucceeded:(_Bool)arg2 currentDefaultLinkID:(BOOL)arg3;	// IMP=0x00000001000f3658
- (void)link:(id)arg1 didDisconnectUnderlyingLinkID:(BOOL)arg2 linkUUID:(id)arg3;	// IMP=0x00000001000f3024
- (void)link:(id)arg1 didCellularMTUChange:(unsigned short)arg2;	// IMP=0x00000001000f2a10
- (void)link:(id)arg1 didRATChange:(unsigned char)arg2;	// IMP=0x00000001000f2464
- (void)link:(id)arg1 didConnectUnderlyingLink:(BOOL)arg2 linkUUID:(id)arg3 localAttributes:(id)arg4 remoteAttributes:(id)arg5;	// IMP=0x00000001000f12f0
- (_Bool)link:(id)arg1 didReceivePacket:(CDStruct_12676517 *)arg2 fromDeviceUniqueID:(id)arg3 cbuuid:(id)arg4;	// IMP=0x00000001000eff00
- (void)link:(id)arg1 didReceiveReportEvent:(id)arg2;	// IMP=0x00000001000ef238
- (void)link:(id)arg1 didConnectForDeviceUniqueID:(id)arg2 cbuuid:(id)arg3;	// IMP=0x00000001000eee44
- (void)link:(id)arg1 didReceiveSKEData:(id)arg2;	// IMP=0x00000001000ee6d8
- (void)link:(id)arg1 didDisconnectForDeviceUniqueID:(id)arg2 cbuuid:(id)arg3;	// IMP=0x00000001000ee488
- (void)addQREventForRTCReport:(id)arg1;	// IMP=0x00000001000ee07c
- (void)_setLinkProtocol:(id)arg1;	// IMP=0x00000001000ed8dc
- (void)connection:(id)arg1 didReceiveData:(id)arg2;	// IMP=0x00000001000ecd80
- (void)connection:(id)arg1 receivedData:(id)arg2;	// IMP=0x00000001000ebf74
- (void)handleAVConferenceError:(id)arg1;	// IMP=0x00000001000eba24
- (void)connectionDidStop:(id)arg1 error:(id)arg2;	// IMP=0x00000001000eb644
- (void)connection:(id)arg1 didStart:(_Bool)arg2 error:(id)arg3;	// IMP=0x00000001000eafc0
- (void)setPreferences:(id)arg1;	// IMP=0x00000001000eaa68
- (void)setMuted:(_Bool)arg1;	// IMP=0x00000001000ea530
- (void)setAudioEnabled:(_Bool)arg1;	// IMP=0x00000001000e9ff8
- (id)connectDuration;	// IMP=0x00000001000e9e0c
- (id)sessionDuration;	// IMP=0x00000001000e9cec
- (void)endSessionWithReason:(unsigned int)arg1;	// IMP=0x00000001000e9bc8
- (void)_notifyClientsSessionStopped;	// IMP=0x00000001000e9174
- (void)_cleanupSocketPairConnection;	// IMP=0x00000001000e9120
- (void)_checkAndUnassertRealTimeMode;	// IMP=0x00000001000e90a0
- (id)_acceptedDeviceToken;	// IMP=0x00000001000e8c04
- (id)_acceptedDeviceUniqueID;	// IMP=0x00000001000e8624
- (id)_socketOptionsForDevice:(id)arg1 uniqueID:(id)arg2 pushToken:(id)arg3 connectionSuffix:(id)arg4;	// IMP=0x00000001000e7234
- (void)_closeSocketToDevice:(id)arg1;	// IMP=0x00000001000e66cc
- (void)_resetPreferences:(id)arg1;	// IMP=0x00000001000e6198
- (void)_endSession;	// IMP=0x00000001000e4398
- (void)endSessionWithData:(id)arg1;	// IMP=0x00000001000e3928
- (void)endSession;	// IMP=0x00000001000e3880
- (void)reconnectSession;	// IMP=0x00000001000e35dc
- (void)_cleanupQuickRelaySession;	// IMP=0x00000001000e31d0
- (void)cleanupSession;	// IMP=0x00000001000e2078
- (void)startListeningOnClientSocket:(int)arg1 isRawSocket:(_Bool)arg2;	// IMP=0x00000001000e1af4
- (void)runConnectivityCheckWithCompletionBlock:(CDUnknownBlockType)arg1;	// IMP=0x00000001000e1918
- (void)networkingIsAvailable:(CDUnknownBlockType)arg1;	// IMP=0x00000001000e18ac
- (unsigned int)globalLinkErrorToSessionEndReason:(long long)arg1;	// IMP=0x00000001000e17b4
- (id)getAppID;	// IMP=0x00000001000e1750
- (id)getFromService;	// IMP=0x00000001000e1654
- (id)getCallerCert;	// IMP=0x00000001000e151c
- (void)setAcceptedRelaySession:(id)arg1;	// IMP=0x00000001000e0c74
- (void)_setInitialLinkType:(unsigned long long)arg1;	// IMP=0x00000001000e05b4
- (void)checkAndCallSessionStart;	// IMP=0x00000001000e045c
- (void)_sessionStartWithSocketDescriptor:(int)arg1;	// IMP=0x00000001000dfc2c
- (_Bool)_shouldUseIPsecLink;	// IMP=0x00000001000dfb68
- (void)_broadcastSessionStartWithSocket:(int)arg1;	// IMP=0x00000001000df7e8
- (void)startQRSession;	// IMP=0x00000001000df7ac
- (void)openSocketToDevice:(id)arg1;	// IMP=0x00000001000dd8fc
- (double)_serverSpecifiedJoinNotificationDeliveryTimeout;	// IMP=0x00000001000dd7e8
- (void)_noteJoinNotificationDidDeliverWithSuccess:(_Bool)arg1;	// IMP=0x00000001000dd140
- (void)_startJoinNotificationDeliveryTimeout;	// IMP=0x00000001000dc24c
- (void)connectQRServer:(id)arg1 withPreferredLocalInterface:(int)arg2;	// IMP=0x00000001000d7660
- (void)didReceiveCurrentCellularSignalRaw:(int)arg1 signalStrength:(int)arg2 signalGrade:(int)arg3;	// IMP=0x00000001000d6e70
- (id)_getNewLinkOptionsForActiveParticipantInfoRequest;	// IMP=0x00000001000d69dc
- (void)_sendingOfflineActiveParticipantInfoRequest:(id)arg1;	// IMP=0x00000001000d5fb8
- (void)requestSessionInfoWithOptions:(id)arg1;	// IMP=0x00000001000d39c4
- (void)_connectQRDirectlyToClientChannel:(id)arg1;	// IMP=0x00000001000c7014
- (void)_connectSocketDescriptor:(int)arg1 toClientChannel:(id)arg2;	// IMP=0x00000001000c4970
- (void)_checkAndRunClientChannelTests:(id)arg1;	// IMP=0x00000001000c3ba0
- (_Bool)_checkAndSendCachedDataForClient:(id)arg1;	// IMP=0x00000001000c3140
- (void)writeToClientChannel:(id)arg1 packetBuffer:(CDStruct_12676517 *)arg2 metaData:(const char *)arg3 metadataSize:(unsigned int)arg4;	// IMP=0x00000001000c0d5c
- (void)_invalidateClientChannel:(id)arg1;	// IMP=0x00000001000c05e4
- (void)registerClientChannel;	// IMP=0x00000001000bf59c
- (void)_cleanupSessionConnection;	// IMP=0x00000001000bef7c
- (void)_reportRTC;	// IMP=0x00000001000be8f0
@property(readonly, copy) NSString *description;
@property(readonly, nonatomic) char *keyMaterial;
- (void)dealloc;	// IMP=0x00000001000bdc50
- (id)initWithAccount:(id)arg1 destinations:(id)arg2 options:(id)arg3 availabilityCheck:(id)arg4;	// IMP=0x00000001000b9fbc
- (id)initWithAccount:(id)arg1 destinations:(id)arg2 options:(id)arg3;	// IMP=0x00000001000b9e78
- (long long)_loggingFlags;	// IMP=0x00000001000b9dec
- (void)_selectDefaultMic;	// IMP=0x00000001000b9dd8
- (void)submitAWDMetricsForIDSSessionWithEndReason:(unsigned int)arg1;	// IMP=0x00000001003ccdf4
- (void)submitAWDMetricsForIDSSessionCompleted;	// IMP=0x00000001003cc6d4
- (void)submitAWDMetricsForIDSSessionReinitiateConnected;	// IMP=0x00000001003cc630
- (void)submitAWDMetricsForIDSSessionReinitiateStarted;	// IMP=0x00000001003cc58c
- (void)submitAWDMetricsForIDSSessionReinitiateRequested;	// IMP=0x00000001003cc4e8
- (void)submitAWDMetricsForIDSSessionConnected;	// IMP=0x00000001003cc444
- (void)submitAWDMetricsForIDSSessionAcceptReceived;	// IMP=0x00000001003cc3a0
- (void)submitAWDMetricsForIDSSessionAcceptSent;	// IMP=0x00000001003cc2fc
- (void)submitAWDMetricsForIDSSessionDeclineReceived;	// IMP=0x00000001003cc258
- (void)submitAWDMetricsForIDSSessionDeclineSent;	// IMP=0x00000001003cc1b4
- (void)submitAWDMetricsForIDSSessionCancelReceived;	// IMP=0x00000001003cc110
- (void)submitAWDMetricsForIDSSessionCancelSentWithRemoteEndReason:(unsigned int)arg1 numberOfRecipients:(id)arg2;	// IMP=0x00000001003cc02c
- (void)submitAWDMetricsForIDSSessionInvitationReceived;	// IMP=0x00000001003cbf88
- (void)submitAWDMetricsForIDSSessionInvitationSentWithNumberOfRecipients:(id)arg1;	// IMP=0x00000001003cbeac
- (void)submitAWDMetricsForIDSSessionStarted;	// IMP=0x00000001003cbccc
- (_Bool)_shouldSubmitMetricsBasedOnDate:(id)arg1 isInitiator:(_Bool)arg2;	// IMP=0x00000001003cba58
- (_Bool)_shouldSubmitMetricsForThisSession;	// IMP=0x00000001003cb938

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

