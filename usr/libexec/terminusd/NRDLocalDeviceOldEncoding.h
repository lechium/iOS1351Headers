//
//     Generated by classdumpios 1.0.1 (64 bit) (iOS port by DreamDevLost)(Debug version compiled Sep 26 2020 13:48:20).
//
//  Copyright (C) 1997-2019 Steve Nygard.
//

#import <objc/NSObject.h>

#import "NSCopying-Protocol.h"
#import "NSSecureCoding-Protocol.h"

@class NSData, NSDate, NSString, NSUUID;

@interface NRDLocalDeviceOldEncoding : NSObject <NSCopying, NSSecureCoding>
{
    _Bool _isRegistered;	// 8 = 0x8
    _Bool _isEnabled;	// 9 = 0x9
    _Bool _isEmptyPairing;	// 10 = 0xa
    _Bool _wasInitiallySetupUsingIDSPairing;	// 11 = 0xb
    _Bool _lastSeenAlwaysOnWiFiSupported;	// 12 = 0xc
    _Bool _usesSPPLink;	// 13 = 0xd
    unsigned short _lastSeenInnerLinkVersionHBO;	// 14 = 0xe
    NSUUID *_nrUUID;	// 16 = 0x10
    NSUUID *_bluetoothUUID;	// 24 = 0x18
    long long _pairingProtocolVersion;	// 32 = 0x20
    NSString *_lastSeenName;	// 40 = 0x28
    NSString *_lastSeenBuildVersion;	// 48 = 0x30
    NSDate *_dateCreated;	// 56 = 0x38
    NSDate *_dateRegistered;	// 64 = 0x40
    NSDate *_dateEnabled;	// 72 = 0x48
    NSData *_outOfBandKey;	// 80 = 0x50
    NSData *_bluetoothMACAddress;	// 88 = 0x58
    NSData *_classDRemotePublicKey;	// 96 = 0x60
    NSData *_classDLocalPublicKey;	// 104 = 0x68
    NSData *_classDLocalPrivateKey;	// 112 = 0x70
    NSData *_classDSharedSecret;	// 120 = 0x78
    NSData *_localPublicClassDTLVEncryptedWithIDS;	// 128 = 0x80
    NSData *_dhLocalPublicClassD;	// 136 = 0x88
    NSData *_dhLocalPrivateClassD;	// 144 = 0x90
    NSData *_classCRemotePublicKey;	// 152 = 0x98
    NSData *_classCLocalPublicKey;	// 160 = 0xa0
    NSData *_classCLocalPrivateKey;	// 168 = 0xa8
    NSData *_classCSharedSecret;	// 176 = 0xb0
    NSData *_localPublicClassCTLVEncryptedWithIDS;	// 184 = 0xb8
    NSData *_dhLocalPublicClassC;	// 192 = 0xc0
    NSData *_dhLocalPrivateClassC;	// 200 = 0xc8
    NSData *_classARemotePublicKey;	// 208 = 0xd0
    NSData *_classALocalPublicKey;	// 216 = 0xd8
    NSData *_classALocalPrivateKey;	// 224 = 0xe0
    NSData *_classASharedSecret;	// 232 = 0xe8
    NSData *_localPublicClassATLVEncryptedWithIDS;	// 240 = 0xf0
    NSData *_dhLocalPublicClassA;	// 248 = 0xf8
    NSData *_dhLocalPrivateClassA;	// 256 = 0x100
    NSData *_localInnerIPv6AddressBytesClassD;	// 264 = 0x108
    NSData *_remoteInnerIPv6AddressBytesClassD;	// 272 = 0x110
    NSData *_localInnerIPv6AddressBytesClassC;	// 280 = 0x118
    NSData *_remoteInnerIPv6AddressBytesClassC;	// 288 = 0x120
    NSData *_receivedProxyNotifyPayload;	// 296 = 0x128
}

+ (_Bool)supportsSecureCoding;	// IMP=0x00000001000bbf00
- (void).cxx_destruct;	// IMP=0x00000001000a8f90
@property(retain, nonatomic) NSData *receivedProxyNotifyPayload; // @synthesize receivedProxyNotifyPayload=_receivedProxyNotifyPayload;
@property(retain, nonatomic) NSData *remoteInnerIPv6AddressBytesClassC; // @synthesize remoteInnerIPv6AddressBytesClassC=_remoteInnerIPv6AddressBytesClassC;
@property(retain, nonatomic) NSData *localInnerIPv6AddressBytesClassC; // @synthesize localInnerIPv6AddressBytesClassC=_localInnerIPv6AddressBytesClassC;
@property(retain, nonatomic) NSData *remoteInnerIPv6AddressBytesClassD; // @synthesize remoteInnerIPv6AddressBytesClassD=_remoteInnerIPv6AddressBytesClassD;
@property(retain, nonatomic) NSData *localInnerIPv6AddressBytesClassD; // @synthesize localInnerIPv6AddressBytesClassD=_localInnerIPv6AddressBytesClassD;
@property(retain, nonatomic) NSData *dhLocalPrivateClassA; // @synthesize dhLocalPrivateClassA=_dhLocalPrivateClassA;
@property(retain, nonatomic) NSData *dhLocalPublicClassA; // @synthesize dhLocalPublicClassA=_dhLocalPublicClassA;
@property(retain, nonatomic) NSData *localPublicClassATLVEncryptedWithIDS; // @synthesize localPublicClassATLVEncryptedWithIDS=_localPublicClassATLVEncryptedWithIDS;
@property(retain, nonatomic) NSData *classASharedSecret; // @synthesize classASharedSecret=_classASharedSecret;
@property(retain, nonatomic) NSData *classALocalPrivateKey; // @synthesize classALocalPrivateKey=_classALocalPrivateKey;
@property(retain, nonatomic) NSData *classALocalPublicKey; // @synthesize classALocalPublicKey=_classALocalPublicKey;
@property(retain, nonatomic) NSData *classARemotePublicKey; // @synthesize classARemotePublicKey=_classARemotePublicKey;
@property(retain, nonatomic) NSData *dhLocalPrivateClassC; // @synthesize dhLocalPrivateClassC=_dhLocalPrivateClassC;
@property(retain, nonatomic) NSData *dhLocalPublicClassC; // @synthesize dhLocalPublicClassC=_dhLocalPublicClassC;
@property(retain, nonatomic) NSData *localPublicClassCTLVEncryptedWithIDS; // @synthesize localPublicClassCTLVEncryptedWithIDS=_localPublicClassCTLVEncryptedWithIDS;
@property(retain, nonatomic) NSData *classCSharedSecret; // @synthesize classCSharedSecret=_classCSharedSecret;
@property(retain, nonatomic) NSData *classCLocalPrivateKey; // @synthesize classCLocalPrivateKey=_classCLocalPrivateKey;
@property(retain, nonatomic) NSData *classCLocalPublicKey; // @synthesize classCLocalPublicKey=_classCLocalPublicKey;
@property(retain, nonatomic) NSData *classCRemotePublicKey; // @synthesize classCRemotePublicKey=_classCRemotePublicKey;
@property(retain, nonatomic) NSData *dhLocalPrivateClassD; // @synthesize dhLocalPrivateClassD=_dhLocalPrivateClassD;
@property(retain, nonatomic) NSData *dhLocalPublicClassD; // @synthesize dhLocalPublicClassD=_dhLocalPublicClassD;
@property(retain, nonatomic) NSData *localPublicClassDTLVEncryptedWithIDS; // @synthesize localPublicClassDTLVEncryptedWithIDS=_localPublicClassDTLVEncryptedWithIDS;
@property(retain, nonatomic) NSData *classDSharedSecret; // @synthesize classDSharedSecret=_classDSharedSecret;
@property(retain, nonatomic) NSData *classDLocalPrivateKey; // @synthesize classDLocalPrivateKey=_classDLocalPrivateKey;
@property(retain, nonatomic) NSData *classDLocalPublicKey; // @synthesize classDLocalPublicKey=_classDLocalPublicKey;
@property(retain, nonatomic) NSData *classDRemotePublicKey; // @synthesize classDRemotePublicKey=_classDRemotePublicKey;
@property(retain, nonatomic) NSData *bluetoothMACAddress; // @synthesize bluetoothMACAddress=_bluetoothMACAddress;
@property(retain, nonatomic) NSData *outOfBandKey; // @synthesize outOfBandKey=_outOfBandKey;
@property(retain, nonatomic) NSDate *dateEnabled; // @synthesize dateEnabled=_dateEnabled;
@property(retain, nonatomic) NSDate *dateRegistered; // @synthesize dateRegistered=_dateRegistered;
@property(retain, nonatomic) NSDate *dateCreated; // @synthesize dateCreated=_dateCreated;
@property(nonatomic) _Bool usesSPPLink; // @synthesize usesSPPLink=_usesSPPLink;
@property(nonatomic) _Bool lastSeenAlwaysOnWiFiSupported; // @synthesize lastSeenAlwaysOnWiFiSupported=_lastSeenAlwaysOnWiFiSupported;
@property(retain, nonatomic) NSString *lastSeenBuildVersion; // @synthesize lastSeenBuildVersion=_lastSeenBuildVersion;
@property(retain, nonatomic) NSString *lastSeenName; // @synthesize lastSeenName=_lastSeenName;
@property(nonatomic) unsigned short lastSeenInnerLinkVersionHBO; // @synthesize lastSeenInnerLinkVersionHBO=_lastSeenInnerLinkVersionHBO;
@property(nonatomic) _Bool wasInitiallySetupUsingIDSPairing; // @synthesize wasInitiallySetupUsingIDSPairing=_wasInitiallySetupUsingIDSPairing;
@property(nonatomic) long long pairingProtocolVersion; // @synthesize pairingProtocolVersion=_pairingProtocolVersion;
@property(nonatomic) _Bool isEmptyPairing; // @synthesize isEmptyPairing=_isEmptyPairing;
@property(nonatomic) _Bool isEnabled; // @synthesize isEnabled=_isEnabled;
@property(nonatomic) _Bool isRegistered; // @synthesize isRegistered=_isRegistered;
@property(retain, nonatomic) NSUUID *bluetoothUUID; // @synthesize bluetoothUUID=_bluetoothUUID;
@property(retain, nonatomic) NSUUID *nrUUID; // @synthesize nrUUID=_nrUUID;
- (void)encodeWithCoder:(id)arg1;	// IMP=0x00000001000a8288
- (id)initWithCoder:(id)arg1;	// IMP=0x00000001000a67fc
- (id)copyWithZone:(struct _NSZone *)arg1;	// IMP=0x00000001000a5b5c
- (id)copyNewEncoding;	// IMP=0x00000001000a4e08
- (id)initWithNRUUID:(id)arg1;	// IMP=0x00000001000a4c4c

@end

