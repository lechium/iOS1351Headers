//
//     Generated by classdumpios 1.0.1 (64 bit) (iOS port by DreamDevLost)(Debug version compiled Sep 26 2020 13:48:20).
//
//  Copyright (C) 1997-2019 Steve Nygard.
//

#import <objc/NSObject.h>

#import "SETransceiver-Protocol.h"

@class NSArray, NSData, NSNumber, NSString;
@protocol NFSecureElementHandleInterface, NFSecureElementWrapperDelegate, OS_dispatch_queue;

@interface NFSecureElementWrapper : NSObject <SETransceiver>
{
    NSObject<OS_dispatch_queue> *_authQueue;	// 8 = 0x8
    NSObject<NFSecureElementHandleInterface> *_handle;	// 16 = 0x10
    NSObject<NFSecureElementWrapperDelegate> *_delegate;	// 24 = 0x18
    NSData *_activeAppletAid;	// 32 = 0x20
    NSArray *_cachedAppletsUnfiltered;	// 40 = 0x28
    NSNumber *_cachedAppletUpdateCounter;	// 48 = 0x30
}

+ (void)cleanupATL;	// IMP=0x00000001000bf09c
@property(retain, nonatomic) NSNumber *cachedAppletUpdateCounter; // @synthesize cachedAppletUpdateCounter=_cachedAppletUpdateCounter;
@property(retain, nonatomic) NSArray *cachedAppletsUnfiltered; // @synthesize cachedAppletsUnfiltered=_cachedAppletsUnfiltered;
@property(retain) NSData *activeAppletAid; // @synthesize activeAppletAid=_activeAppletAid;
@property NSObject<NFSecureElementWrapperDelegate> *delegate; // @synthesize delegate=_delegate;
@property(readonly) NSObject<NFSecureElementHandleInterface> *handle; // @synthesize handle=_handle;
- (id)inRestrictedPerformanceMode:(_Bool *)arg1;	// IMP=0x0000000100096a64
- (id)checkDeepSleepTimerRunning:(_Bool *)arg1;	// IMP=0x00000001000965e4
- (_Bool)refreshISDCounter;	// IMP=0x00000001000965dc
- (id)queryISDCounter;	// IMP=0x0000000100096458
- (id)readBinary:(unsigned int)arg1;	// IMP=0x0000000100096210
- (id)selectCRSWithError:(id *)arg1;	// IMP=0x0000000100095d8c
- (_Bool)select:(id)arg1;	// IMP=0x0000000100095b9c
- (id)getData:(unsigned int)arg1 subtag:(unsigned int)arg2;	// IMP=0x00000001000957b8
- (id)getData:(unsigned int)arg1;	// IMP=0x00000001000954a8
- (id)selectByName:(id)arg1 error:(id *)arg2;	// IMP=0x0000000100095484
- (id)readBinary:(unsigned char)arg1 offset:(unsigned int)arg2 tag:(unsigned int)arg3 error:(id *)arg4;	// IMP=0x00000001000953fc
- (id)getData:(unsigned char)arg1 tag:(unsigned int)arg2 data:(id)arg3 error:(id *)arg4;	// IMP=0x00000001000953dc
- (id)sendCommandWithClass:(unsigned char)arg1 instruction:(unsigned char)arg2 p1:(unsigned char)arg3 p2:(unsigned char)arg4 data:(id)arg5 error:(id *)arg6;	// IMP=0x00000001000953b0
- (id)sendCommandWithClass:(unsigned char)arg1 instruction:(unsigned char)arg2 p1:(unsigned char)arg3 p2:(unsigned char)arg4 data:(id)arg5 expectedLength:(unsigned char)arg6 error:(id *)arg7;	// IMP=0x0000000100094d38
@property(readonly) unsigned long long supportedTechnologies;
- (id)transceiveData:(id)arg1 error:(id *)arg2;	// IMP=0x0000000100094d00
@property(readonly) NSString *eckaCertificate; // @dynamic eckaCertificate;
@property(readonly) NSString *eccCertificate; // @dynamic eccCertificate;
@property(readonly) NSString *rsaCertificate; // @dynamic rsaCertificate;
@property(readonly) NSData *serialNumberAsData;
@property(readonly) NSString *serialNumber; // @dynamic serialNumber;
@property(readonly) _Bool isOperational;
@property(readonly) _Bool isProd;
@property(readonly) _Bool isIceFall;
- (id)getAuthQueue;	// IMP=0x0000000100094abc
- (void)dealloc;	// IMP=0x0000000100094a50
- (id)initWithHandle:(id)arg1;	// IMP=0x00000001000949f8
- (id)signWithKeyInSlot:(id)arg1 AID:(id)arg2 signRequest:(id)arg3 paymentRequest:(id)arg4 authorization:(id)arg5 uid:(unsigned int)arg6 response:(id *)arg7;	// IMP=0x000000010004eb48
- (id)signWithKeyInSlot:(id)arg1 request:(id)arg2 response:(id *)arg3;	// IMP=0x000000010004e808
- (id)createKeyInSlot:(id)arg1 request:(id)arg2 response:(id *)arg3;	// IMP=0x000000010004e070
- (id)getKeyInSlot:(id)arg1;	// IMP=0x000000010004dd04
- (id)deleteKeyInSlot:(id)arg1;	// IMP=0x000000010004daf4
- (id)sendTrustCommand:(unsigned char)arg1 p1:(unsigned char)arg2 p2:(unsigned char)arg3 data:(id)arg4 rapdu:(id *)arg5;	// IMP=0x000000010004d7c0
- (id)getGetProtocolV4Container:(id)arg1 forApplet:(id)arg2;	// IMP=0x000000010005c4a0
- (void)_addEntriesFromSSD:(id)arg1 intoApp:(id)arg2;	// IMP=0x000000010005bfc4
- (void)_parseDiscretionaryData:(id)arg1 intoApp:(id)arg2;	// IMP=0x000000010005bd2c
- (id)_sendProprietaryGetStatusCommand:(unsigned char)arg1 tagList:(const char *)arg2 tagListLen:(unsigned long long)arg3 callback:(CDUnknownBlockType)arg4;	// IMP=0x000000010005b804
- (id)getStatusProprietaryPackages;	// IMP=0x000000010005ae74
- (id)getStatusProprietaryApplications;	// IMP=0x0000000100059d74
- (_Bool)supportsGetStatusProprietary;	// IMP=0x0000000100059c3c
- (id)_getUnlockRequestInfoFrom:(int)arg1;	// IMP=0x00000001000596ec
- (id)_generateCASDSignatureIcf:(id)arg1;	// IMP=0x0000000100059430
- (id)_generateCASDSignatureComet:(id)arg1;	// IMP=0x0000000100058ecc
- (id)_generateSignatureFromStateInfo:(id)arg1;	// IMP=0x0000000100058c6c
- (id)_getVASDInfo;	// IMP=0x0000000100058ab0
- (id)_getCRSInfo;	// IMP=0x0000000100057520
- (id)_getCASDInfo;	// IMP=0x0000000100056ffc
- (id)_getKeyInfo:(_Bool)arg1;	// IMP=0x00000001000569c0
- (id)_getISDInfo;	// IMP=0x0000000100056458
- (unsigned int)remoteAdminState:(id)arg1 stateInfo:(id *)arg2;	// IMP=0x000000010005569c
- (unsigned int)remoteAdminState:(id *)arg1;	// IMP=0x00000001000555e8
- (unsigned int)restoreTransientAuthForAllAppletsExcept:(id)arg1 uid:(unsigned int)arg2 updated:(_Bool *)arg3;	// IMP=0x00000001000776a8
- (unsigned int)requireTransientAuth:(_Bool)arg1 uid:(unsigned int)arg2 applets:(id)arg3 authorization:(id)arg4;	// IMP=0x0000000100076ca8
- (unsigned int)signChallengeWithOSVersion:(id)arg1 signature:(id *)arg2;	// IMP=0x0000000100076734
- (id)signChallengeWithOSVersion:(id)arg1;	// IMP=0x00000001000766e4
- (id)_signChallengeWithOSVersionIcf:(id)arg1;	// IMP=0x0000000100076434
- (id)_signChallengeWithOSVersionComet:(id)arg1;	// IMP=0x0000000100075f04
- (unsigned int)getCryptogram:(id *)arg1 challengeResponse:(id *)arg2;	// IMP=0x00000001000759e0
- (unsigned int)validateSEAndSEPPairing:(unsigned int)arg1;	// IMP=0x0000000100075348
- (id)getPlatformData:(id *)arg1 withSignature:(id *)arg2;	// IMP=0x0000000100074f80
- (unsigned int)signChallenge:(id)arg1 value:(id *)arg2;	// IMP=0x0000000100074ad0
- (unsigned int)effaceAuthorization:(unsigned int)arg1;	// IMP=0x0000000100073fd0
- (id)authorizeAppletTransaction:(id)arg1 forApplet:(id)arg2 authType:(unsigned char)arg3 authorization:(id)arg4 uid:(unsigned int)arg5;	// IMP=0x00000001000731e0
- (id)authorizeEcommerceTransaction:(id)arg1 uid:(unsigned int)arg2 request:(id)arg3 response:(id *)arg4;	// IMP=0x00000001000712dc
- (void)postAWDCRSAuth:(id)arg1 request:(id)arg2 response:(id *)arg3 status:(unsigned int)arg4;	// IMP=0x000000010007107c
- (unsigned int)sendEcommerceAPDU:(id)arg1 response:(id *)arg2 swStatus:(unsigned int *)arg3;	// IMP=0x00000001000708d0
- (id)createEcommerceAPDU:(id)arg1;	// IMP=0x00000001000707d0
- (_Bool)supportsSSESigning:(id *)arg1;	// IMP=0x000000010007071c
- (unsigned int)deauthorizeContactlessPayment;	// IMP=0x000000010007069c
- (unsigned int)authorizeContactlessPayment:(id)arg1 uid:(unsigned int)arg2 withLocalAuthorization:(_Bool)arg3;	// IMP=0x000000010006fb90
- (id)getFelicaAppletState:(id)arg1;	// IMP=0x0000000100079140
- (id)felicaGetEventDataCommand:(unsigned short)arg1 block:(unsigned short)arg2;	// IMP=0x0000000100078ea8
- (id)felicaEnvelopeCommand:(id)arg1;	// IMP=0x0000000100078e84
- (id)_readFromService:(unsigned short)arg1 numBlocks:(unsigned char)arg2;	// IMP=0x00000001000789c8
- (id)_readIDM;	// IMP=0x0000000100078904
- (id)_getAppletStateForProvider:(id)arg1;	// IMP=0x0000000100078048
- (id)activateKeys:(_Bool)arg1 forIdentifiers:(id)arg2 onApplet:(id)arg3 persistent:(_Bool)arg4;	// IMP=0x000000010007d050
- (id)setupTransactionCodes:(id)arg1 forIdentifier:(id)arg2 onApplet:(id)arg3 authorization:(id)arg4 uid:(unsigned int)arg5;	// IMP=0x000000010007c9e0
- (id)_setupEndpoint:(id)arg1 activate:(_Bool)arg2 persistent:(_Bool)arg3;	// IMP=0x000000010007c4c8
- (id)_disableAllEndpointsWithPersistence:(_Bool)arg1;	// IMP=0x000000010007c15c
- (id)appletForIdentifier:(id)arg1 filtered:(_Bool)arg2;	// IMP=0x000000010007bfdc
- (id)appletForIdentifier:(id)arg1;	// IMP=0x000000010007bfcc
- (unsigned int)refreshCachedApplets;	// IMP=0x000000010007bfb8
- (id)getUnfilteredApplets:(id *)arg1;	// IMP=0x000000010007bcbc
- (id)getApplets:(id *)arg1;	// IMP=0x000000010007ba8c
- (id)deleteApplets:(id)arg1;	// IMP=0x000000010007b594
- (id)deselectAllIfNeeded;	// IMP=0x000000010007b424
- (id)deselectAll;	// IMP=0x000000010007b1f4
- (id)deselectApplets:(id)arg1;	// IMP=0x000000010007ace4
- (id)selectApplet:(id)arg1;	// IMP=0x000000010007a928
- (id)deleteAllApplets:(unsigned int)arg1;	// IMP=0x000000010007a474
- (unsigned int)_markApplicationsForDelete:(id)arg1;	// IMP=0x000000010007a200
- (unsigned int)setApplications:(id)arg1 asSelectable:(_Bool)arg2 groupActivationStyle:(unsigned char)arg3;	// IMP=0x0000000100079e90
@property(readonly, getter=getCachedApplets) NSArray *cachedApplets;
- (id)filterApplications:(id)arg1;	// IMP=0x0000000100079a88
- (id)_performGetStatus;	// IMP=0x0000000100079954
- (void)forceInvalidateAppletCache;	// IMP=0x0000000100079918
- (unsigned int)_getApplicationsFromSE:(id *)arg1 filtered:(_Bool)arg2;	// IMP=0x00000001000795f0
- (id)signChallenge:(id)arg1;	// IMP=0x000000010007e3bc
- (_Bool)getAvailableMemory:(struct _NFSecureElementMemory *)arg1;	// IMP=0x000000010007df64
- (id)getCertificates;	// IMP=0x000000010007d88c
- (unsigned short)getUpdateCounter;	// IMP=0x000000010007d72c
- (id)getSerialNumber;	// IMP=0x000000010007d528
- (id)crs_authorizedInternalAuthenticate:(id)arg1 signedData:(id *)arg2;	// IMP=0x0000000100083650
- (unsigned int)crs_enableTransientAuth:(_Bool)arg1 applets:(id)arg2 cryptogram:(id)arg3;	// IMP=0x00000001000833c4
- (unsigned int)_crs_enableTransientAuth:(_Bool)arg1 applets:(id)arg2 cryptogram:(id)arg3;	// IMP=0x0000000100082e98
- (void)crs_deauthorize;	// IMP=0x0000000100082bac
- (void)crs_postAWDCRSAuthECommerce:(unsigned char)arg1 request:(id)arg2 response:(id)arg3 status:(unsigned int)arg4;	// IMP=0x0000000100082784
- (unsigned int)crs_authorizeForECommerce:(unsigned char)arg1 cryptogram:(id)arg2 encryptedPIN:(id)arg3 request:(id)arg4 response:(id *)arg5;	// IMP=0x00000001000825a8
- (id)crs_decodeResponseTLV:(id)arg1;	// IMP=0x0000000100082174
- (unsigned int)crs_authorizeForECommerce:(unsigned char)arg1 input:(id)arg2 output:(id *)arg3 swStatus:(unsigned int *)arg4;	// IMP=0x0000000100081bbc
- (unsigned int)crs_authorizeWithLocalValidation:(unsigned char)arg1 cryptogram:(id)arg2;	// IMP=0x0000000100081740
- (unsigned int)crs_authorizeWithCryptogram:(id)arg1;	// IMP=0x00000001000813b0
- (unsigned int)crs_authenticate:(id)arg1 response:(id *)arg2;	// IMP=0x0000000100081020
- (unsigned int)crs_setAuthorizationTimeout:(unsigned short)arg1 challenge:(id)arg2 mac:(id)arg3;	// IMP=0x0000000100080c38
- (unsigned int)crs_setAuthorizationRandom:(id)arg1 mac:(id)arg2;	// IMP=0x0000000100080894
- (_Bool)crs_markApplicationForDelete:(id)arg1;	// IMP=0x0000000100080574
- (_Bool)crs_setApplications:(id)arg1 isSelectable:(_Bool)arg2 groupActivationStyle:(unsigned char)arg3;	// IMP=0x00000001000803fc
- (_Bool)_crs_setApplications:(id)arg1 isSelectable:(_Bool)arg2 groupActivationStyle:(unsigned char)arg3;	// IMP=0x000000010007fd6c
- (_Bool)crs_deactivateAll;	// IMP=0x000000010007fa10
- (id)crs_getApplicationsWithSearchCriteria:(id)arg1;	// IMP=0x000000010007f5b4
- (id)crs_applicationsFromTLV:(id)arg1;	// IMP=0x000000010007e634
- (id)crs_getStatus:(id)arg1 firstRequest:(_Bool)arg2;	// IMP=0x000000010007e610
- (id)getAndResetLPEMCounter:(long long *)arg1;	// IMP=0x0000000100086a84
- (_Bool)getPresenceOfAttackLog:(_Bool *)arg1;	// IMP=0x0000000100086a1c
- (id)getAttackCounterLogAsHex;	// IMP=0x0000000100086974
- (id)getAttackCounterLogAsBinary;	// IMP=0x00000001000868f4
- (id)getAttackCounterLog;	// IMP=0x0000000100086898
- (id)getOSUpdateLog;	// IMP=0x000000010008680c
- (id)decodeCRSPlatformConfiguration:(id)arg1;	// IMP=0x0000000100086548
- (id)decodeCRSResponse:(id)arg1;	// IMP=0x0000000100086214
- (id)decodeUpdateInfoResponse:(id)arg1;	// IMP=0x0000000100085e70
- (id)decodeCPLCResponse:(id)arg1;	// IMP=0x00000001000857c8
- (id)decodeCertificateResponse:(id)arg1;	// IMP=0x00000001000853b4
- (id)decodeRootSecurityDomainResponse:(id)arg1;	// IMP=0x0000000100084dbc
- (id)dumpContactlessRegistryService:(id *)arg1;	// IMP=0x0000000100084a48
- (id)dumpRootSecurityDomain:(int)arg1 info:(id *)arg2;	// IMP=0x0000000100084038
- (id)dumpDomain:(unsigned char)arg1 info:(id *)arg2;	// IMP=0x0000000100083d04
- (unsigned int)upgradeKey:(unsigned char)arg1 inputData:(id)arg2 outWriteCount:(unsigned int *)arg3 appletResult:(unsigned short *)arg4;	// IMP=0x00000001000894e0
- (unsigned int)getHash:(id *)arg1 appletResult:(unsigned short *)arg2;	// IMP=0x0000000100089024
- (unsigned int)getData:(id *)arg1 updateKUD:(char *)arg2 outWriteLimit:(unsigned int *)arg3 outWriteCount:(unsigned int *)arg4 appletResult:(unsigned short *)arg5;	// IMP=0x0000000100088ac4
- (unsigned int)deleteSlot:(unsigned char)arg1 outWriteCount:(unsigned int *)arg2 appletResult:(unsigned short *)arg3;	// IMP=0x00000001000885fc
- (unsigned int)authorizeUpdate:(_Bool)arg1 slotIndex:(unsigned char)arg2 userToken:(id)arg3 outWriteCount:(unsigned int *)arg4 appletResult:(unsigned short *)arg5;	// IMP=0x000000010008812c
- (unsigned int)resetCounter:(unsigned char)arg1 userToken:(id)arg2 outWriteCount:(unsigned int *)arg3 appletResult:(unsigned short *)arg4;	// IMP=0x0000000100087c60
- (unsigned int)derive:(unsigned char)arg1 userHash:(id)arg2 outData:(id *)arg3 outWriteCount:(unsigned int *)arg4 appletResult:(unsigned short *)arg5;	// IMP=0x0000000100087674
- (unsigned int)allocateSlot:(unsigned char)arg1 authorizingUser:(unsigned char)arg2 authorizingUserToken:(id)arg3 outToken:(id *)arg4 outWriteCount:(unsigned int *)arg5 appletResult:(unsigned short *)arg6;	// IMP=0x00000001000870a4
- (id)recoverSLAM;	// IMP=0x0000000100096f78
- (_Bool)isLegacyApplet:(id)arg1;	// IMP=0x00000001000bf020
- (id)processEndOfFelicaTransactionForApplet:(id)arg1 error:(id *)arg2;	// IMP=0x00000001000bee78
- (id)checkSEExpressAppletCompatibility:(id)arg1 error:(id *)arg2;	// IMP=0x00000001000bec88
- (_Bool)appletRequiresDynamicRF:(id)arg1;	// IMP=0x00000001000beab0
- (id)configureSEExpressApplets:(id)arg1;	// IMP=0x00000001000be658
- (id)setPlasticCardMode:(_Bool)arg1 forApplet:(id)arg2;	// IMP=0x00000001000be3d8
- (id)reConfigureApplets;	// IMP=0x00000001000bdee4
- (id)getATLAppletProperties:(id)arg1 error:(id *)arg2;	// IMP=0x00000001000bdbc4
- (id)getATLAppletState:(id)arg1 error:(id *)arg2;	// IMP=0x00000001000bd6f8
- (id)transceive:(id)arg1 error:(id *)arg2;	// IMP=0x00000001000bd6ec
- (id)deleteKey;	// IMP=0x00000001000f0614
- (id)performPeerPayment:(id)arg1 uid:(unsigned int)arg2 request:(id)arg3 response:(id *)arg4;	// IMP=0x00000001000ef238
- (id)createOsloToken:(id)arg1 transactionID:(id *)arg2 error:(id *)arg3;	// IMP=0x00000001000eef44
- (id)createSURFToken:(id)arg1 from:(id)arg2 userVerification:(unsigned char)arg3 error:(id *)arg4;	// IMP=0x00000001000ee62c
- (id)sendSEPPKSURFPaymentRequest:(id)arg1 error:(id *)arg2;	// IMP=0x00000001000ede2c
- (unsigned char)getUserVerification:(id)arg1 error:(id *)arg2;	// IMP=0x00000001000edc2c
- (id)getSEPPKSURFPaymentRequest:(id)arg1 uid:(unsigned int)arg2 authorization:(id)arg3 hostChallenge:(id)arg4 cardChallenge:(id)arg5 cryptogram:(id)arg6 error:(id *)arg7;	// IMP=0x00000001000ed098
- (id)createSURFAPDU:(id)arg1 error:(id *)arg2;	// IMP=0x00000001000ecec0
- (id)createOsloSpecificInput:(id)arg1 error:(id *)arg2;	// IMP=0x00000001000ecb90
- (id)createSURFSpecificInput:(id)arg1 error:(id *)arg2;	// IMP=0x00000001000eb87c
- (id)performPeerPaymentEnrollment:(id)arg1 response:(id *)arg2;	// IMP=0x00000001000eab4c
- (id)sendCreateKey:(id)arg1 response:(id *)arg2;	// IMP=0x00000001000ea3c8
- (id)deleteKeyCommandWithError:(id *)arg1;	// IMP=0x00000001000ea3a0
- (id)getSurfSlot;	// IMP=0x00000001000e9b78
- (void)deselectSURFApplet;	// IMP=0x00000001000e99f0
- (id)selectSURFApplet;	// IMP=0x00000001000e9630

@end

