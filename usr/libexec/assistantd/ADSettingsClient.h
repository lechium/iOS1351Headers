//
//     Generated by classdumpios 1.0.1 (64 bit) (iOS port by DreamDevLost)(Debug version compiled Sep 26 2020 13:48:20).
//
//  Copyright (C) 1997-2019 Steve Nygard.
//

#import <objc/NSObject.h>

#import "ADCommandCenterSyncDelegate-Protocol.h"
#import "AFSettingsService-Protocol.h"

@class NSString, NSXPCConnection, SiriCoreLocalSpeechRecognizer;

@interface ADSettingsClient : NSObject <AFSettingsService, ADCommandCenterSyncDelegate>
{
    NSXPCConnection *_xpcConnection;	// 8 = 0x8
    SiriCoreLocalSpeechRecognizer *_localSpeechRecognizer;	// 16 = 0x10
}

- (void).cxx_destruct;	// IMP=0x0000000100212bd4
- (void)adSyncVerificationServerReport:(id)arg1;	// IMP=0x0000000100212b68
- (void)adSyncVerificationPartialResult:(id)arg1;	// IMP=0x0000000100212afc
- (oneway void)siriDesignModeIsEnabled:(CDUnknownBlockType)arg1;	// IMP=0x0000000100212abc
- (oneway void)setSiriDesignModeEnabled:(_Bool)arg1 completion:(CDUnknownBlockType)arg2;	// IMP=0x0000000100212a78
- (void)_postWatchNotificationWithContext:(id)arg1 withError:(id)arg2;	// IMP=0x0000000100212940
- (oneway void)deleteSiriHistoryWithContext:(id)arg1 withCompletion:(CDUnknownBlockType)arg2;	// IMP=0x0000000100211f3c
- (oneway void)shouldSuppressSiriDataSharingOptInAlertWithCompletion:(CDUnknownBlockType)arg1;	// IMP=0x0000000100211efc
- (oneway void)setSiriDataSharingOptInAlertPresented:(_Bool)arg1 completion:(CDUnknownBlockType)arg2;	// IMP=0x0000000100211eb8
- (oneway void)getSiriDataSharingOptInStatusWithCompletion:(CDUnknownBlockType)arg1;	// IMP=0x0000000100211e3c
- (oneway void)setSiriDataSharingOptInStatus:(long long)arg1 completion:(CDUnknownBlockType)arg2;	// IMP=0x0000000100211cb8
- (oneway void)clearOpportuneSpeakingEdgeDetectorSignalOverride;	// IMP=0x0000000100211cb4
- (oneway void)setOpportuneSpeakingEdgeDetectorSignalOverride:(long long)arg1;	// IMP=0x0000000100211cac
- (oneway void)setSpokenNotificationProxCardSeen:(_Bool)arg1;	// IMP=0x0000000100211ca8
- (oneway void)setSpokenNotificationShouldSkipTriggerlessReplies:(_Bool)arg1;	// IMP=0x0000000100211ca0
- (oneway void)getSpokenNotificationShouldSkipTriggerlessRepliesWithCompletion:(CDUnknownBlockType)arg1;	// IMP=0x0000000100211c60
- (oneway void)setSpokenNotificationShouldAlwaysSpeakNotifications:(_Bool)arg1;	// IMP=0x0000000100211c58
- (oneway void)getSpokenNotificationShouldAlwaysSpeakNotificationsWithCompletion:(CDUnknownBlockType)arg1;	// IMP=0x0000000100211c18
- (oneway void)setSpokenNotificationTemporarilyDisabledForApp:(id)arg1 until:(id)arg2;	// IMP=0x0000000100211be0
- (oneway void)getSpokenNotificationTemporarilyDisabledEndDateForApp:(id)arg1 completion:(CDUnknownBlockType)arg2;	// IMP=0x0000000100211b6c
- (oneway void)clearSpokenNotificationTemporarilyDisabledStatus;	// IMP=0x0000000100211b68
- (oneway void)setSpokenNotificationTemporarilyDisabledUntil:(id)arg1;	// IMP=0x0000000100211b60
- (oneway void)getSpokenNotificationTemporarilyDisabledEndDateWithCompletion:(CDUnknownBlockType)arg1;	// IMP=0x0000000100211b04
- (oneway void)stopObservingBluetoothWirelessSplitterSession;	// IMP=0x0000000100211abc
- (oneway void)startObservingBluetoothWirelessSplitterSession;	// IMP=0x0000000100211a74
- (oneway void)getBluetoothWirelessSplitterSessionInfoWithCompletion:(CDUnknownBlockType)arg1;	// IMP=0x000000010021196c
- (oneway void)getPairedBluetoothDeviceInfoArrayWithCompletion:(CDUnknownBlockType)arg1;	// IMP=0x0000000100211964
- (oneway void)getConnectedBluetoothDeviceInfoArrayWithCompletion:(CDUnknownBlockType)arg1;	// IMP=0x0000000100211520
- (oneway void)getBluetoothDeviceInfoWithUID:(id)arg1 completion:(CDUnknownBlockType)arg2;	// IMP=0x0000000100211410
- (oneway void)getBluetoothDeviceInfoWithAddress:(id)arg1 completion:(CDUnknownBlockType)arg2;	// IMP=0x0000000100211300
- (oneway void)setSiriOutputVolume:(float)arg1 forAudioRoute:(id)arg2 completion:(CDUnknownBlockType)arg3;	// IMP=0x00000001002111fc
- (oneway void)getSiriOutputVolumeForAudioRoute:(id)arg1 completion:(CDUnknownBlockType)arg2;	// IMP=0x000000010021110c
- (oneway void)fetchExperimentContextWithCompletion:(CDUnknownBlockType)arg1;	// IMP=0x0000000100211034
- (oneway void)fetchExperimentConfigurationsWithCompletion:(CDUnknownBlockType)arg1;	// IMP=0x0000000100210f5c
- (oneway void)sendMetricsToServerWithCompletion:(CDUnknownBlockType)arg1;	// IMP=0x0000000100210e68
- (oneway void)resetAnalyticsStoreWithCompletion:(CDUnknownBlockType)arg1;	// IMP=0x0000000100210d04
- (oneway void)purgeAnalyticsStoreWithCompletion:(CDUnknownBlockType)arg1;	// IMP=0x0000000100210ba0
- (oneway void)fetchEventRecordsFromAnalyticsStoreAtPath:(id)arg1 completion:(CDUnknownBlockType)arg2;	// IMP=0x0000000100210a24
- (oneway void)homeOnboardingFlowInvoked:(_Bool)arg1 completion:(CDUnknownBlockType)arg2;	// IMP=0x00000001002109a4
- (oneway void)fetchMultiUserVoiceIdentificationSetting:(CDUnknownBlockType)arg1;	// IMP=0x0000000100210920
- (oneway void)getSharedUserID:(CDUnknownBlockType)arg1;	// IMP=0x000000010021085c
- (oneway void)updateMultiUserWithSharedUserId:(id)arg1 companionId:(id)arg2 companionSpeechId:(id)arg3 idsIdentifier:(id)arg4 productPrefix:(id)arg5 aceHost:(id)arg6 completion:(CDUnknownBlockType)arg7;	// IMP=0x00000001002106e0
- (oneway void)getSharedUserIdForHomeUserId:(id)arg1 completion:(CDUnknownBlockType)arg2;	// IMP=0x000000010021060c
- (oneway void)getHomeUserIdForSharedUserId:(id)arg1 completion:(CDUnknownBlockType)arg2;	// IMP=0x0000000100210538
- (oneway void)updateVoiceIdScoreToUser:(id)arg1 score:(id)arg2 reset:(_Bool)arg3 completion:(CDUnknownBlockType)arg4;	// IMP=0x0000000100210468
- (oneway void)showMultiUsers:(CDUnknownBlockType)arg1;	// IMP=0x00000001002103e8
- (oneway void)removeMultiUserUserWithSharedUserId:(id)arg1 completion:(CDUnknownBlockType)arg2;	// IMP=0x0000000100210308
- (oneway void)removeMultiUserUser:(id)arg1 completion:(CDUnknownBlockType)arg2;	// IMP=0x0000000100210228
- (oneway void)addMultiUserUser:(id)arg1 sharedId:(id)arg2 loggableSharedId:(id)arg3 enrollmentName:(id)arg4 isPrimary:(_Bool)arg5 completion:(CDUnknownBlockType)arg6;	// IMP=0x00000001002100dc
- (oneway void)getSharedCompanionInfo:(CDUnknownBlockType)arg1;	// IMP=0x000000010020ffdc
- (oneway void)setNanoSiriDataSharingOptInStatus:(long long)arg1 withCompletion:(CDUnknownBlockType)arg2;	// IMP=0x000000010020ffc8
- (oneway void)setNanoCrownActivationEnabled:(_Bool)arg1 withCompletion:(CDUnknownBlockType)arg2;	// IMP=0x000000010020ffb4
- (oneway void)setNanoLanguage:(id)arg1 withCompletion:(CDUnknownBlockType)arg2;	// IMP=0x000000010020ffa0
- (oneway void)setNanoOutputVoice:(id)arg1 withCompletion:(CDUnknownBlockType)arg2;	// IMP=0x000000010020ff8c
- (oneway void)setNanoTTSSpeakerVolume:(id)arg1 withCompletion:(CDUnknownBlockType)arg2;	// IMP=0x000000010020ff78
- (oneway void)setNanoUseDeviceSpeakerForTTS:(id)arg1 withCompletion:(CDUnknownBlockType)arg2;	// IMP=0x000000010020ff64
- (oneway void)setNanoRaiseToSpeakEnabled:(_Bool)arg1 withCompletion:(CDUnknownBlockType)arg2;	// IMP=0x000000010020ff50
- (oneway void)setNanoPhraseSpotterEnabled:(_Bool)arg1 withCompletion:(CDUnknownBlockType)arg2;	// IMP=0x000000010020ff3c
- (oneway void)setNanoDictationEnabled:(_Bool)arg1 withCompletion:(CDUnknownBlockType)arg2;	// IMP=0x000000010020ff28
- (oneway void)setNanoAssistantEnabled:(_Bool)arg1 withCompletion:(CDUnknownBlockType)arg2;	// IMP=0x000000010020ff14
- (oneway void)getStereoPairState:(CDUnknownBlockType)arg1;	// IMP=0x000000010020fe60
- (oneway void)getStereoPartnerLastMyriadWinDate:(CDUnknownBlockType)arg1;	// IMP=0x000000010020fd60
- (oneway void)getMeCard:(CDUnknownBlockType)arg1;	// IMP=0x000000010020fc4c
- (oneway void)getSupplementalLanguagesForProduct:(id)arg1 forBuildVersion:(id)arg2 completion:(CDUnknownBlockType)arg3;	// IMP=0x000000010020fbc8
- (oneway void)getSupplementalLanguageDictionaryForProduct:(id)arg1 completion:(CDUnknownBlockType)arg2;	// IMP=0x000000010020fb44
- (oneway void)getSupplementalLanguagesModificationDate:(CDUnknownBlockType)arg1;	// IMP=0x000000010020fac0
- (oneway void)getSupplementalLanguagesDictionary:(CDUnknownBlockType)arg1;	// IMP=0x000000010020fa3c
- (oneway void)setSupplementalLanguages:(id)arg1 forProduct:(id)arg2 forBuildVersion:(id)arg3 completion:(CDUnknownBlockType)arg4;	// IMP=0x000000010020f9bc
- (oneway void)setSupplementalLanguageDictionary:(id)arg1 forProduct:(id)arg2 completion:(CDUnknownBlockType)arg3;	// IMP=0x000000010020f93c
- (oneway void)stopAllAudioPlaybackRequests:(_Bool)arg1;	// IMP=0x000000010020f8e8
- (oneway void)stopAudioPlaybackRequest:(id)arg1 immediately:(_Bool)arg2;	// IMP=0x000000010020f870
- (oneway void)startAudioPlaybackRequest:(id)arg1 completion:(CDUnknownBlockType)arg2;	// IMP=0x000000010020f7e0
- (oneway void)getPeerIdentifiers:(CDUnknownBlockType)arg1;	// IMP=0x000000010020f620
- (oneway void)startRemoteRequest:(id)arg1 onPeer:(id)arg2 completion:(CDUnknownBlockType)arg3;	// IMP=0x000000010020f40c
- (void)_createMockServerIfNeededAndSetActiveWithCompletion:(CDUnknownBlockType)arg1;	// IMP=0x000000010020f1ac
- (oneway void)startUIMockServerRequestWithReplayFileURL:(id)arg1 completion:(CDUnknownBlockType)arg2;	// IMP=0x000000010020ee10
- (oneway void)dismissUI;	// IMP=0x000000010020edc8
- (oneway void)startUIRequestWithSpeechAudioFileURL:(id)arg1;	// IMP=0x000000010020ed28
- (oneway void)startMultiUserUIRequestWithText:(id)arg1 expectedSpeakerSharedUserID:(id)arg2 expectedSpeakerConfidenceScore:(unsigned long long)arg3 nonspeakerConfidenceScores:(id)arg4 completion:(CDUnknownBlockType)arg5;	// IMP=0x000000010020e9a4
- (oneway void)startUIRequestWithText:(id)arg1 completion:(CDUnknownBlockType)arg2;	// IMP=0x000000010020e73c
- (oneway void)startUIRequestWithInfo:(id)arg1 completion:(CDUnknownBlockType)arg2;	// IMP=0x000000010020e510
- (oneway void)setOfflineDictationProfileOverridePath:(id)arg1 completion:(CDUnknownBlockType)arg2;	// IMP=0x000000010020e478
- (oneway void)createOfflineSpeechProfileWithLanguage:(id)arg1 JSONData:(id)arg2 completion:(CDUnknownBlockType)arg3;	// IMP=0x000000010020e3cc
- (oneway void)updateOfflineSpeechProfileWithLanguage:(id)arg1 completion:(CDUnknownBlockType)arg2;	// IMP=0x000000010020e344
- (oneway void)getOfflineDictationStatusWithCompletion:(CDUnknownBlockType)arg1;	// IMP=0x000000010020e2d4
- (id)_localSpeechRecognizer;	// IMP=0x000000010020e278
- (oneway void)setLanguage:(id)arg1 outputVoice:(id)arg2 withCompletion:(CDUnknownBlockType)arg3;	// IMP=0x000000010020e114
- (oneway void)setLanguage:(id)arg1 withCompletion:(CDUnknownBlockType)arg2;	// IMP=0x000000010020dfbc
- (oneway void)setOutputVoice:(id)arg1 withCompletion:(CDUnknownBlockType)arg2;	// IMP=0x000000010020dec8
- (oneway void)getAvailableVoicesIncludingAssetInfo:(_Bool)arg1 completion:(CDUnknownBlockType)arg2;	// IMP=0x000000010020d6ec
- (oneway void)forceMultiUserSync:(_Bool)arg1 download:(_Bool)arg2 completion:(CDUnknownBlockType)arg3;	// IMP=0x000000010020d5ec
- (oneway void)getDevicesWithAvailablePHSAssetsOnDeviceCheck:(CDUnknownBlockType)arg1;	// IMP=0x000000010020d57c
- (oneway void)getDevicesWithAvailablePHSAssetsForLanguage:(id)arg1 completion:(CDUnknownBlockType)arg2;	// IMP=0x000000010020d4d8
- (oneway void)disableAndDeleteCloudSyncWithCompletion:(CDUnknownBlockType)arg1;	// IMP=0x000000010020d3c8
- (oneway void)_startDeepSyncVerificationForKeys:(id)arg1;	// IMP=0x000000010020d358
- (oneway void)_runServiceMaintenance;	// IMP=0x000000010020d30c
- (void)_setSyncVerificationNeededAndFullReportNeeded:(_Bool)arg1 shouldPostNotification:(_Bool)arg2 completion:(CDUnknownBlockType)arg3;	// IMP=0x000000010020cfc0
- (oneway void)_fetchPeerData:(CDUnknownBlockType)arg1;	// IMP=0x000000010020cf4c
- (oneway void)_syncDataWithAnchorKeys:(id)arg1 forceReset:(_Bool)arg2 reason:(id)arg3 reply:(CDUnknownBlockType)arg4;	// IMP=0x000000010020cb18
- (oneway void)_clearSyncNeededForKey:(id)arg1;	// IMP=0x000000010020ca6c
- (oneway void)_setSyncNeededForReason:(id)arg1;	// IMP=0x000000010020ca64
- (oneway void)configOverrides:(CDUnknownBlockType)arg1;	// IMP=0x000000010020c9c8
- (oneway void)setConfigOverrides:(id)arg1 completion:(CDUnknownBlockType)arg2;	// IMP=0x000000010020c938
- (oneway void)barrierWithReply:(CDUnknownBlockType)arg1;	// IMP=0x000000010020c92c
- (oneway void)_shutdownSessionIfIdle;	// IMP=0x000000010020c854
- (oneway void)_killDaemon;	// IMP=0x000000010020c77c
- (oneway void)setEnableAssistantLogging:(_Bool)arg1;	// IMP=0x000000010020c5a4
- (oneway void)setDictationEnabled:(_Bool)arg1;	// IMP=0x000000010020c360
- (oneway void)setAssistantEnabled:(_Bool)arg1;	// IMP=0x000000010020c2c4
- (oneway void)setActiveAccountIdentifier:(id)arg1;	// IMP=0x000000010020c254
- (oneway void)deleteAccountWithIdentifier:(id)arg1;	// IMP=0x000000010020c1e4
- (void)_saveAccount:(id)arg1 setActive:(_Bool)arg2;	// IMP=0x000000010020c134
- (oneway void)saveAccountWithMessageDictionary:(id)arg1 setActive:(_Bool)arg2;	// IMP=0x000000010020be38
- (oneway void)retrieveAccountMessageDictionariesWithReply:(CDUnknownBlockType)arg1;	// IMP=0x000000010020ba38
- (oneway void)fetchSupportedLanguagesWithReply:(CDUnknownBlockType)arg1;	// IMP=0x000000010020b948
- (id)_serviceDelegateWithErrorHandler:(CDUnknownBlockType)arg1;	// IMP=0x000000010020b938
- (id)_serviceDelegate;	// IMP=0x000000010020b928
- (void)connectionDisconnected;	// IMP=0x000000010020b8e8
- (id)initWithXPCConnection:(id)arg1;	// IMP=0x000000010020b870
- (id)_appIdentifierfromConnection:(id)arg1;	// IMP=0x000000010020b750

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

