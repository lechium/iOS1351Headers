//
//     Generated by classdumpios 1.0.1 (64 bit) (iOS port by DreamDevLost)(Debug version compiled Sep 26 2020 13:48:20).
//
//  Copyright (C) 1997-2019 Steve Nygard.
//

#import <objc/NSObject.h>

#import "ADSessionDelegate-Protocol.h"

@class ADAccount, AFAWDSiriRequestRecord, AFAggregator, NSError, NSMutableArray, NSMutableDictionary, NSMutableSet, NSString, SASSpeechFailure, SASSpeechRecognized;
@protocol ADSessionManagerDelegate, ADSessionManagerIntercepting, OS_dispatch_queue, OS_dispatch_source;

@interface ADSessionManager : NSObject <ADSessionDelegate>
{
    NSObject<OS_dispatch_queue> *_queue;	// 8 = 0x8
    ADAccount *_account;	// 16 = 0x10
    NSString *_sharedUserIdentifier;	// 24 = 0x18
    NSString *_loggingSharedUserIdentifier;	// 32 = 0x20
    long long _sharedUserIdentifierState;	// 40 = 0x28
    long long _state;	// 48 = 0x30
    _Bool _isRegisteredForSessionDestroyingNotifications;	// 56 = 0x38
    NSString *_connectionMode;	// 64 = 0x40
    NSString *_languageCode;	// 72 = 0x48
    NSMutableArray *_sessions;	// 80 = 0x50
    id <ADSessionManagerDelegate> _delegate;	// 88 = 0x58
    _Bool _callInProcess;	// 96 = 0x60
    _Bool _hasClient;	// 97 = 0x61
    unsigned int _ioConnect;	// 100 = 0x64
    struct IONotificationPort *_ioNotificationPortRef;	// 104 = 0x68
    unsigned int _ioNotifier;	// 112 = 0x70
    AFAggregator *_aggregator;	// 120 = 0x78
    NSString *_requestId;	// 128 = 0x80
    NSMutableDictionary *_proxiedIdMap;	// 136 = 0x88
    NSMutableDictionary *_reverseProxiedIdMap;	// 144 = 0x90
    NSMutableDictionary *_sessionOriginatedCommandTable;	// 152 = 0x98
    NSString *_winningSessionId;	// 160 = 0xa0
    NSObject<OS_dispatch_source> *_resultObjectsEvaluationTimer;	// 168 = 0xa8
    _Bool _isQueuingResultsForDelayedEvaluation;	// 176 = 0xb0
    _Bool _timerFiredOnce;	// 177 = 0xb1
    _Bool _continueWithPreviousWinner;	// 178 = 0xb2
    NSError *_lastSessionError;	// 184 = 0xb8
    int _preferredSessionType;	// 192 = 0xc0
    SASSpeechRecognized *_savedSasSpeechRecognized;	// 200 = 0xc8
    _Bool _savedSasSpeechRecognizedSubmitted;	// 208 = 0xd0
    SASSpeechFailure *_savedSasSpeechFailure;	// 216 = 0xd8
    unsigned int _serverDrivenResultsHoldTime;	// 224 = 0xe0
    _Bool _serverSpeechRecognitionArrived;	// 228 = 0xe4
    _Bool _hasActiveRequest;	// 229 = 0xe5
    _Bool _needsResetOnRequestBoundary;	// 230 = 0xe6
    NSMutableSet *_assertions;	// 232 = 0xe8
    AFAWDSiriRequestRecord *_awdRequestRecord;	// 240 = 0xf0
    id <ADSessionManagerIntercepting> _interceptor;	// 248 = 0xf8
    CDUnknownBlockType _sessionResetOnRequestBoundaryCompletion;	// 256 = 0x100
}

- (void).cxx_destruct;	// IMP=0x00000001001e46d0
@property(nonatomic) __weak id <ADSessionManagerIntercepting> interceptor; // @synthesize interceptor=_interceptor;
@property(nonatomic) __weak id <ADSessionManagerDelegate> delegate; // @synthesize delegate=_delegate;
- (void)speechError:(id)arg1;	// IMP=0x00000001001e430c
- (void)_propagateCachedSpeechErrorToLocalSessions;	// IMP=0x00000001001e41b0
- (void)_mapAndSendSpeechFailure:(id)arg1 toLocalSession:(id)arg2;	// IMP=0x00000001001e40bc
- (void)handleCommandInLocalSession:(id)arg1;	// IMP=0x00000001001e3d98
- (void)sendCommandToLocalSession:(id)arg1;	// IMP=0x00000001001e3c90
- (void)_logContextForWinningSession:(id)arg1 forReason:(id)arg2 forRemoteSessionScore:(long long)arg3 forLocalSessionScore:(long long)arg4;	// IMP=0x00000001001e3a6c
- (void)_resetWinningState;	// IMP=0x00000001001e3958
- (_Bool)_reverseMapSessionRequestIdToADRequestId:(id)arg1 forSession:(id)arg2;	// IMP=0x00000001001e37a0
- (id)_mapADRequestIdToSessionRequestId:(id)arg1 forSession:(id)arg2;	// IMP=0x00000001001e3704
- (id)_keyForRequestId:(id)arg1 forSession:(id)arg2;	// IMP=0x00000001001e3654
- (_Bool)_canStartLocalSession;	// IMP=0x00000001001e3520
- (_Bool)_hasAtleastOneActiveSessionBesides:(id)arg1;	// IMP=0x00000001001e32a0
- (void)refreshValidationData;	// IMP=0x00000001001e316c
- (void)setHasClient:(_Bool)arg1;	// IMP=0x00000001001e3164
- (_Bool)hasClient;	// IMP=0x00000001001e315c
- (void)barrier:(CDUnknownBlockType)arg1;	// IMP=0x00000001001e2e50
- (void)setAWDRequestRecordMetrics:(id)arg1;	// IMP=0x00000001001e2d08
- (void)_logMetricsForSessionFailure:(id)arg1 withError:(id)arg2 completion:(CDUnknownBlockType)arg3;	// IMP=0x00000001001e2760
- (void)_logCommandToMetrics:(id)arg1 forSession:(id)arg2 outbound:(_Bool)arg3;	// IMP=0x00000001001e2438
- (void)getConnectionMetrics:(CDUnknownBlockType)arg1;	// IMP=0x00000001001e20e4
- (void)updateConnectionSetConnectionType:(unsigned int)arg1;	// IMP=0x00000001001e209c
- (void)updateConnectionDidFailAggdMetrics;	// IMP=0x00000001001e205c
- (void)updateConnectionDidDropAggdMetrics;	// IMP=0x00000001001e201c
- (id)aggregator;	// IMP=0x00000001001e1fd8
- (id)sessionRequestIdForRefId:(id)arg1;	// IMP=0x00000001001e1e44
- (void)setRequestId:(id)arg1;	// IMP=0x00000001001e17f0
- (void)_resetSessionOnRequestBoundaryIfNeeded;	// IMP=0x00000001001e13fc
- (void)relinquishAssertion:(id)arg1;	// IMP=0x00000001001e12f4
- (id)acquireAssertionForReason:(id)arg1;	// IMP=0x00000001001e11c8
- (void)setHasActiveRequest:(_Bool)arg1;	// IMP=0x00000001001e0fd4
- (void)sendRawCommand:(id)arg1 opportunistically:(_Bool)arg2 logEvent:(_Bool)arg3;	// IMP=0x00000001001e0fc0
- (void)sendCommand:(id)arg1 opportunistically:(_Bool)arg2 logEvent:(_Bool)arg3;	// IMP=0x00000001001e0fac
- (void)_sendCommand:(id)arg1 opportunistically:(_Bool)arg2 logEvent:(_Bool)arg3 doSendPreProcessing:(_Bool)arg4 doSendPostProcessing:(_Bool)arg5;	// IMP=0x00000001001e0568
- (void)delegateDidHandleCommand:(id)arg1;	// IMP=0x00000001001e033c
- (void)handleCommand:(id)arg1;	// IMP=0x00000001001e01ac
- (void)_convertEmbeddedRequestIds:(id)arg1 originalCommand:(id)arg2 session:(id)arg3;	// IMP=0x00000001001e009c
- (_Bool)_allowWhitelistedCommands:(id)arg1;	// IMP=0x00000001001dffcc
- (_Bool)_filterUnsupportedCommands:(id)arg1 inGroup:(id)arg2 onSession:(id)arg3;	// IMP=0x00000001001dfed8
- (void)assistantSessionConnectionDidClose:(id)arg1;	// IMP=0x00000001001dfe94
- (void)assistantSessionRetryingRequest:(id)arg1;	// IMP=0x00000001001dfdf0
- (void)assistantSessionSiriServerLoggingSettingDidChange;	// IMP=0x00000001001dfde4
- (void)assistantSession:(id)arg1 beginSessionRetryPreferringWWAN:(_Bool)arg2;	// IMP=0x00000001001dfce8
- (void)assistantSession:(id)arg1 willRetryOnError:(id)arg2;	// IMP=0x00000001001dfbfc
- (void)assistantSession:(id)arg1 didLoadAssistantSyncRequested:(_Bool)arg2;	// IMP=0x00000001001dfbb0
- (void)assistantSessionDidDestroyAssistant:(id)arg1;	// IMP=0x00000001001dfb74
- (void)assistantSessionDidCreateAssistant:(id)arg1;	// IMP=0x00000001001dfaa8
- (void)assistantSession:(id)arg1 didChangeRequestIdFrom:(id)arg2 toId:(id)arg3;	// IMP=0x00000001001df7ec
- (id)assistantSessionCommandsToRestoreStateOnNewConnection:(id)arg1;	// IMP=0x00000001001df79c
- (_Bool)assistantSessionShouldAttemptRetry:(id)arg1;	// IMP=0x00000001001df6c8
- (void)assistantSessionConnectionDidReset:(id)arg1;	// IMP=0x00000001001df548
- (_Bool)assistantSessionShouldRestartConnectionOnWiFi:(id)arg1;	// IMP=0x00000001001df528
- (_Bool)assistantSessionShouldLogVisibleRequestFailure:(id)arg1 forError:(id)arg2;	// IMP=0x00000001001df3f8
- (void)assistantSession:(id)arg1 receivedError:(id)arg2 isRetryableError:(_Bool)arg3;	// IMP=0x00000001001df054
- (void)assistantSession:(id)arg1 cannotHandleRequest:(id)arg2 error:(id)arg3;	// IMP=0x00000001001decb8
- (void)assistantSession:(id)arg1 receivedCommand:(id)arg2;	// IMP=0x00000001001de76c
- (void)assistantSession:(id)arg1 didOpenConnectionWithPolicyId:(id)arg2 routeId:(id)arg3 connectionDelay:(double)arg4;	// IMP=0x00000001001de4f0
- (void)assistantSessionWillStartConnection:(id)arg1;	// IMP=0x00000001001de424
- (_Bool)assistantSessionShouldPrewarmConnetion:(id)arg1;	// IMP=0x00000001001de3e4
- (void)sendRemoteGizmoDeviceToServer:(id)arg1;	// IMP=0x00000001001de290
- (void)_resetWinningStateAndPurgeRequestMaps;	// IMP=0x00000001001de25c
- (void)resetWinningState;	// IMP=0x00000001001de24c
- (_Bool)hasActiveSessionForSendingMetrics;	// IMP=0x00000001001de04c
- (void)adviseSessionArbiterToContinueWithPreviousWinner:(_Bool)arg1;	// IMP=0x00000001001ddfd4
- (void)_pickDefaultWinnerWithDroppingSession:(id)arg1;	// IMP=0x00000001001ddb90
- (void)_cancelOtherSessionRequests:(id)arg1 forRefId:(id)arg2;	// IMP=0x00000001001dd7a0
- (_Bool)_haveUsefulness:(id)arg1 usefulnessScore:(id *)arg2;	// IMP=0x00000001001dd724
- (_Bool)_isDestructive:(id)arg1;	// IMP=0x00000001001dd34c
- (void)_queueResultObject:(id)arg1 forSession:(id)arg2;	// IMP=0x00000001001dd0d8
- (void)_resetResultObjectsTimer;	// IMP=0x00000001001dd09c
- (void)_resultObjectsTimerFired:(id)arg1;	// IMP=0x00000001001dcf94
- (void)_startResultObjectsTimer;	// IMP=0x00000001001dce10
- (unsigned int)_resultObjectsHoldTime;	// IMP=0x00000001001dcda8
- (_Bool)_evaluateResultObjects;	// IMP=0x00000001001dc668
- (int)_preferredSessionType;	// IMP=0x00000001001dc63c
- (void)updateForCallIsLikelyDueToRequest:(_Bool)arg1;	// IMP=0x00000001001dc524
- (void)updateForCallState:(_Bool)arg1;	// IMP=0x00000001001dc510
- (void)_unregisterForSleepNotification;	// IMP=0x00000001001dc494
- (void)_registerForSleepNotification;	// IMP=0x00000001001dc39c
- (void)_powerChangedMessageType:(unsigned int)arg1 notificationID:(long long)arg2;	// IMP=0x00000001001dc218
- (void)_languageCodeDidChange:(id)arg1;	// IMP=0x00000001001dc020
- (void)_enabledBitsChanged:(id)arg1;	// IMP=0x00000001001dbe6c
- (void)_unregisterForPossibleSessionDestroyingNotifications;	// IMP=0x00000001001dbdf4
- (void)_registerForPossibleSessionDestroyingNotifications;	// IMP=0x00000001001dbd70
- (id)_saConnectionMode;	// IMP=0x00000001001dbd04
- (void)_cloudPreferencesDidSync:(id)arg1;	// IMP=0x00000001001dbc04
- (void)_sharedAssistantdIdentifierDidChange:(id)arg1;	// IMP=0x00000001001dbacc
- (void)_updateSharedUserIdentifiers;	// IMP=0x00000001001db770
- (id)languageCode;	// IMP=0x00000001001db764
- (id)_languageCode;	// IMP=0x00000001001db6f0
- (void)_purgeRequestMaps;	// IMP=0x00000001001db61c
- (void)endRetryableRequestForCommand:(id)arg1;	// IMP=0x00000001001db3e4
- (void)resetRetryManager;	// IMP=0x00000001001db2d4
- (void)startRetry;	// IMP=0x00000001001db1a4
- (void)resetSessionsAtNextRequestBoundaryWithCompletion:(CDUnknownBlockType)arg1;	// IMP=0x00000001001dafc0
- (void)resetSessionsAtNextRequestBoundary;	// IMP=0x00000001001dafb0
- (void)resetSessionsAndMakeQuiet:(_Bool)arg1;	// IMP=0x00000001001dafa4
- (void)_resetSessionsAndMakeQuiet:(_Bool)arg1;	// IMP=0x00000001001dac64
- (void)cancelSessions;	// IMP=0x00000001001dac58
- (void)cancelSynchronously;	// IMP=0x00000001001dac28
- (void)cancel;	// IMP=0x00000001001dab54
- (void)_cancelSynchronously:(_Bool)arg1;	// IMP=0x00000001001da9e4
- (void)beginUpdatingAssistantData;	// IMP=0x00000001001da8b0
- (void)preheatSessions;	// IMP=0x00000001001da8a0
- (void)preheatAndMakeQuiet:(_Bool)arg1;	// IMP=0x00000001001da730
- (void)_startSession:(int)arg1 makeQuiet:(_Bool)arg2;	// IMP=0x00000001001da4e0
- (void)_startSessions:(_Bool)arg1;	// IMP=0x00000001001da214
- (void)dealloc;	// IMP=0x00000001001da120
- (id)initOnQueue:(id)arg1 withAccount:(id)arg2;	// IMP=0x00000001001d9f94

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

