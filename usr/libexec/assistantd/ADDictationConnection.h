//
//     Generated by classdumpios 1.0.1 (64 bit) (iOS port by DreamDevLost)(Debug version compiled Sep 26 2020 13:48:20).
//
//  Copyright (C) 1997-2019 Steve Nygard.
//

#import <objc/NSObject.h>

#import "ADCommandCenterSpeechDelegate-Protocol.h"
#import "AFDictationService-Protocol.h"
#import "NSXPCListenerDelegate-Protocol.h"
#import "SiriCoreLocalSpeechRecognizerDelegate-Protocol.h"

@class ADDictationSessionTracker, AFDictationOptions, NSString, NSXPCConnection, NSXPCListener, SiriCoreLocalSpeechRecognizer;
@protocol AFDictationServiceDelegate, OS_dispatch_queue;

@interface ADDictationConnection : NSObject <SiriCoreLocalSpeechRecognizerDelegate, NSXPCListenerDelegate, ADCommandCenterSpeechDelegate, AFDictationService>
{
    SiriCoreLocalSpeechRecognizer *_localSpeechRecognizer;	// 8 = 0x8
    _Bool _usingLocalSpeechRecognizer;	// 16 = 0x10
    id <AFDictationServiceDelegate> _serviceDelegate;	// 24 = 0x18
    AFDictationOptions *_dictationOptions;	// 32 = 0x20
    NSObject<OS_dispatch_queue> *_queue;	// 40 = 0x28
    _Bool _waitingForSpeechRecognition;	// 48 = 0x30
    _Bool _waitingForStructuredResultsOrVoiceSearch;	// 49 = 0x31
    _Bool _waitingForAudioFile;	// 50 = 0x32
    _Bool _waitingForKeyboardVisibleCheck;	// 51 = 0x33
    int _keyboardOnScreenToken;	// 52 = 0x34
    ADDictationSessionTracker *_sessionTracker;	// 56 = 0x38
    NSXPCListener *_pendingSpeechRequestListener;	// 64 = 0x40
    NSXPCConnection *_pendingSpeechRequestConnection;	// 72 = 0x48
    CDUnknownBlockType _pendingSpeechRequestContinue;	// 80 = 0x50
    _Bool _disconnected;	// 88 = 0x58
    CDUnknownBlockType _requestCompletion;	// 96 = 0x60
    _Bool adSpeechSessionEnded;	// 104 = 0x68
}

- (void).cxx_destruct;	// IMP=0x00000001001d5b9c
@property(readonly, nonatomic) NSObject<OS_dispatch_queue> *queue; // @synthesize queue=_queue;
@property(nonatomic) _Bool adSpeechSessionEnded; // @synthesize adSpeechSessionEnded;
- (void)_continuePendingSpeechRequestFromTimestamp:(double)arg1;	// IMP=0x00000001001d5a74
- (oneway void)continuePendingSpeechRequestFromTimestamp:(double)arg1;	// IMP=0x00000001001d5a00
- (_Bool)listener:(id)arg1 shouldAcceptNewConnection:(id)arg2;	// IMP=0x00000001001d58e8
- (void)localSpeechRecognizer:(id)arg1 didCompletionRecognitionWithStatistics:(id)arg2 error:(id)arg3;	// IMP=0x00000001001d5800
- (void)localSpeechRecognizer:(id)arg1 didRecognizePackage:(id)arg2;	// IMP=0x00000001001d5768
- (void)localSpeechRecognizer:(id)arg1 didRecognizePhrases:(id)arg2 utterances:(id)arg3;	// IMP=0x00000001001d5678
- (void)localSpeechRecognizer:(id)arg1 didRecognizeRawEagerRecognitionCandidate:(id)arg2;	// IMP=0x00000001001d55fc
- (void)localSpeechRecognizer:(id)arg1 didProcessAudioDuration:(double)arg2;	// IMP=0x00000001001d5584
- (void)localSpeechRecognizer:(id)arg1 didRecognizeTokens:(id)arg2;	// IMP=0x00000001001d54e4
- (id)_localSpeechRecognizer;	// IMP=0x00000001001d53d0
- (oneway void)reportIssueForError:(id)arg1 eventType:(long long)arg2 context:(id)arg3;	// IMP=0x00000001001d51c0
- (oneway void)requestOfflineDictationSupportForLanguage:(id)arg1 completion:(CDUnknownBlockType)arg2;	// IMP=0x00000001001d50d0
- (oneway void)getInstalledOfflineLanguagesWithCompletion:(CDUnknownBlockType)arg1;	// IMP=0x00000001001d4ee4
- (oneway void)_sendEngagementFeedback:(long long)arg1 voiceQueryIdentifier:(id)arg2;	// IMP=0x00000001001d4e68
- (oneway void)_startDictationWithURL:(id)arg1 isNarrowBand:(_Bool)arg2 language:(id)arg3 options:(id)arg4;	// IMP=0x00000001001d4be8
- (oneway void)addRecordedSpeechSampleData:(id)arg1;	// IMP=0x00000001001d4b34
- (oneway void)startRecordedAudioDictationWithOptions:(id)arg1 language:(id)arg2 narrowband:(_Bool)arg3;	// IMP=0x00000001001d4690
- (oneway void)recordAWDSuccessMetrics;	// IMP=0x00000001001d4648
- (oneway void)recordFailureMetricsForError:(id)arg1;	// IMP=0x00000001001d45d8
- (oneway void)endSession;	// IMP=0x00000001001d44d8
- (oneway void)preheatWithRecordDeviceIdentifier:(id)arg1;	// IMP=0x00000001001d43d0
- (oneway void)preheat;	// IMP=0x00000001001d42dc
- (oneway void)sendUserSelectedAlternativeDictationLanguageCode:(id)arg1;	// IMP=0x00000001001d4174
- (oneway void)sendSpeechCorrectionInfo:(id)arg1 interactionIdentifier:(id)arg2;	// IMP=0x00000001001d40e0
- (oneway void)sendSpeechCorrectionInfo:(id)arg1 forCorrectionContext:(id)arg2;	// IMP=0x00000001001d4048
- (oneway void)updateSpeechOptions:(id)arg1;	// IMP=0x00000001001d3f20
- (oneway void)stopSpeechWithOptions:(id)arg1;	// IMP=0x00000001001d3d8c
- (oneway void)cancelSpeech;	// IMP=0x00000001001d3cd0
- (oneway void)startDictationWithLanguageCode:(id)arg1 options:(id)arg2 speechOptions:(id)arg3;	// IMP=0x00000001001d36b8
- (oneway void)startRecordingForPendingDictationWithLanguageCode:(id)arg1 options:(id)arg2 speechOptions:(id)arg3 reply:(CDUnknownBlockType)arg4;	// IMP=0x00000001001d3254
- (oneway void)startRequestActivityWithCompletion:(CDUnknownBlockType)arg1;	// IMP=0x00000001001d3200
- (void)_startDictationWithLanguageCode:(id)arg1 options:(id)arg2 speechOptions:(id)arg3;	// IMP=0x00000001001d3118
- (id)_dictationWillStartWithLanguageCode:(id)arg1 options:(id)arg2 speechOptions:(id)arg3;	// IMP=0x00000001001d2b94
- (void)adSpeechDidBeginLocalRecognitionWithModelInfo:(id)arg1 sessionUUID:(id)arg2;	// IMP=0x00000001001d2afc
- (void)adSpeechMultilingualSpeechRecognized:(id)arg1 sessionUUID:(id)arg2;	// IMP=0x00000001001d2a34
- (void)adSpeechLanguageDetectorFailedWithError:(id)arg1;	// IMP=0x00000001001d299c
- (void)adSpeechRecordingDidDetectLanguage:(id)arg1 confidenceScores:(id)arg2 isConfident:(_Bool)arg3;	// IMP=0x00000001001d28a8
- (_Bool)adWaitingForAudioFile;	// IMP=0x00000001001d2804
- (void)adAudioFileFinishedWriting:(id)arg1 error:(id)arg2 sessionUUID:(id)arg3;	// IMP=0x00000001001d2678
- (void)adPronunciationRecognized:(id)arg1 usingSpeechModel:(id)arg2 sessionUUID:(id)arg3;	// IMP=0x00000001001d231c
- (void)adSpeechRecognitionDidFail:(id)arg1 sessionUUID:(id)arg2;	// IMP=0x00000001001d216c
- (void)adSpeechRecognizedStructuredResult:(id)arg1 usingSpeechModel:(id)arg2 sessionUUID:(id)arg3;	// IMP=0x00000001001d1e30
- (void)adSpeechRecordingDidRecognizePhrases:(id)arg1 sessionUUID:(id)arg2 refId:(id)arg3;	// IMP=0x00000001001d1a38
- (void)adSpeechRecordingDidRecognizeTokens:(id)arg1 sessionUUID:(id)arg2;	// IMP=0x00000001001d19f0
- (void)adSpeechDidFindVoiceSearchFinalResult:(id)arg1;	// IMP=0x00000001001d1860
- (void)adSpeechDidFindVoiceSearchPartialResult:(id)arg1;	// IMP=0x00000001001d1740
- (void)adSpeechRecognizedPartialResult:(id)arg1;	// IMP=0x00000001001d14ec
- (_Bool)_keyboardIsVisible;	// IMP=0x00000001001d1480
- (void)adSpeechRecognized:(id)arg1 usingSpeechModel:(id)arg2 sessionUUID:(id)arg3;	// IMP=0x00000001001d10f0
- (void)adSpeechRecordingDidFail:(id)arg1 sessionUUID:(id)arg2;	// IMP=0x00000001001d0e84
- (void)adSpeechRecordingDidCancelWithSessionUUID:(id)arg1;	// IMP=0x00000001001d0be8
- (void)adSpeechRecordingDidEndWithSessionUUID:(id)arg1;	// IMP=0x00000001001d0b08
- (void)adSpeechRecordingDidChangeAVRecordRoute:(id)arg1 bluetoothDevice:(id)arg2 isDucking:(_Bool)arg3 isTwoShot:(_Bool)arg4 speechEndHostTime:(unsigned long long)arg5 sessionUUID:(id)arg6;	// IMP=0x00000001001d0b04
- (void)adSpeechRecordingDidBeginOnAVRecordRoute:(id)arg1 audioSessionID:(unsigned int)arg2 bluetoothDevice:(id)arg3 sessionUUID:(id)arg4 dictationOptions:(id)arg5;	// IMP=0x00000001001d0a00
- (void)adSpeechRecordingWillBeginWithInputAudioPowerXPCWrapper:(id)arg1 sessionUUID:(id)arg2;	// IMP=0x00000001001d09c0
- (void)_speechRecordingDidFinish;	// IMP=0x00000001001d08ec
- (void)_updateDictationOptions:(id)arg1;	// IMP=0x00000001001d08b4
- (void)connectionDisconnected;	// IMP=0x00000001001d07f0
- (void)dealloc;	// IMP=0x00000001001d078c
- (id)initWithServiceDelegate:(id)arg1;	// IMP=0x00000001001d0664

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

