//
//     Generated by classdumpios 1.0.1 (64 bit) (iOS port by DreamDevLost)(Debug version compiled Sep 26 2020 13:48:20).
//
//  Copyright (C) 1997-2019 Steve Nygard.
//

#import <objc/NSObject.h>

#import "ADAudioPlaybackServiceListening-Protocol.h"
#import "ADAudioStateListening-Protocol.h"
#import "ADBluetoothDeviceObserver-Protocol.h"
#import "ADCommandCenterClient-Protocol.h"
#import "ADCommandCenterRequestDelegate-Protocol.h"
#import "ADCommandCenterSpeechDelegate-Protocol.h"
#import "ADHandsFreeStateChangedObserver-Protocol.h"
#import "AFClientService-Protocol.h"

@class AFClientConfiguration, AFRequestInfo, AFSpeechRequestOptions, AFWatchdogTimer, NSString, NSUUID, NSXPCConnection;
@protocol ADBluetoothDevice, OS_dispatch_group, OS_dispatch_queue, OS_os_transaction;

@interface ADClientConnection : NSObject <ADHandsFreeStateChangedObserver, ADAudioStateListening, ADAudioPlaybackServiceListening, ADBluetoothDeviceObserver, ADCommandCenterClient, ADCommandCenterRequestDelegate, ADCommandCenterSpeechDelegate, AFClientService>
{
    NSXPCConnection *_xpcConnection;	// 8 = 0x8
    NSObject<OS_dispatch_queue> *_queue;	// 16 = 0x10
    AFRequestInfo *_requestInfo;	// 24 = 0x18
    AFSpeechRequestOptions *_requestOptions;	// 32 = 0x20
    CDUnknownBlockType _requestCompletion;	// 40 = 0x28
    NSObject<OS_dispatch_group> *_requestGroup;	// 48 = 0x30
    NSUUID *_requestUUID;	// 56 = 0x38
    AFClientConfiguration *_clientConfiguration;	// 64 = 0x40
    unsigned long long _pendingRequestId;	// 72 = 0x48
    double _pendingRequestTimestamp;	// 80 = 0x50
    CDUnknownBlockType _pendingSpeechRequestContinue;	// 88 = 0x58
    long long _numberOfPresentedUIs;	// 96 = 0x60
    CDUnknownBlockType _presentedUIReply;	// 104 = 0x68
    NSObject<OS_os_transaction> *_presentedUITransaction;	// 112 = 0x70
    int _ringerStateToken;	// 120 = 0x78
    _Bool _hasCachedADShouldSpeak;	// 124 = 0x7c
    _Bool _cachedADShouldSpeak;	// 125 = 0x7d
    _Bool _requestOptionsRequireTTS;	// 126 = 0x7e
    _Bool _serverIsForcingTTS;	// 127 = 0x7f
    _Bool _combinedShouldSpeakState;	// 128 = 0x80
    _Bool _isConnected;	// 129 = 0x81
    id <ADBluetoothDevice> _bluetoothDevice;	// 136 = 0x88
    AFWatchdogTimer *_longLivedConnectionABCTimer;	// 144 = 0x90
    _Bool adSpeechSessionEnded;	// 152 = 0x98
}

- (void).cxx_destruct;	// IMP=0x000000010013f0d0
@property(nonatomic) _Bool adSpeechSessionEnded; // @synthesize adSpeechSessionEnded;
- (void)_continuePendingSpeechRequestFromTimestamp:(double)arg1;	// IMP=0x000000010013efe4
- (_Bool)listener:(id)arg1 shouldAcceptNewConnection:(id)arg2;	// IMP=0x000000010013eecc
- (oneway void)recordUIMetrics:(id)arg1;	// IMP=0x000000010013eec8
- (oneway void)_sendFeedbackToAppPreferencesPredictorForMetricsContext:(id)arg1 selectedBundleId:(id)arg2;	// IMP=0x000000010013ec14
- (oneway void)_refreshAssistantValidation;	// IMP=0x000000010013ebcc
- (oneway void)_startSpeechWithURL:(id)arg1 isNarrowBand:(_Bool)arg2;	// IMP=0x000000010013eb44
- (oneway void)_requestBarrierWithReply:(CDUnknownBlockType)arg1;	// IMP=0x000000010013ead4
- (oneway void)_barrierWithReply:(CDUnknownBlockType)arg1;	// IMP=0x000000010013eac8
- (oneway void)_clearAssistantInfoForAccountIdentifier:(id)arg1;	// IMP=0x000000010013ea48
- (oneway void)_fetchAppContextForApplicationInfo:(id)arg1 reply:(CDUnknownBlockType)arg2;	// IMP=0x000000010013e878
- (oneway void)_broadcastCommandDictionary:(id)arg1;	// IMP=0x000000010013e77c
- (oneway void)_performTaskCommandDictionary:(id)arg1 forBundleIdentifier:(id)arg2 reply:(CDUnknownBlockType)arg3;	// IMP=0x000000010013e294
- (oneway void)_performCommandDictionary:(id)arg1 forBundleIdentifier:(id)arg2 reply:(CDUnknownBlockType)arg3;	// IMP=0x000000010013dd90
- (oneway void)_sendLargeData:(id)arg1 reply:(CDUnknownBlockType)arg2;	// IMP=0x000000010013dd4c
- (oneway void)_pingServiceForIdentifier:(id)arg1 reply:(CDUnknownBlockType)arg2;	// IMP=0x000000010013db70
- (oneway void)_listInstalledServicesWithReply:(CDUnknownBlockType)arg1;	// IMP=0x000000010013db00
- (oneway void)adviseSessionArbiterToContinueWithPreviousWinner:(_Bool)arg1;	// IMP=0x000000010013dab0
- (oneway void)reportIssueForError:(id)arg1 type:(long long)arg2 context:(id)arg3;	// IMP=0x000000010013d9c4
- (oneway void)updateSpeechSynthesisRecord:(id)arg1;	// IMP=0x000000010013d954
- (oneway void)endUpdateOutputAudioPower;	// IMP=0x000000010013d904
- (oneway void)beginUpdateOutputAudioPowerWithReply:(CDUnknownBlockType)arg1;	// IMP=0x000000010013d88c
- (oneway void)stopAllAudioPlaybackRequests:(_Bool)arg1;	// IMP=0x000000010013d838
- (oneway void)stopAudioPlaybackRequest:(id)arg1 immediately:(_Bool)arg2;	// IMP=0x000000010013d7c0
- (oneway void)startAudioPlaybackRequest:(id)arg1 options:(unsigned long long)arg2 reply:(CDUnknownBlockType)arg3;	// IMP=0x000000010013d724
- (oneway void)getRemoteClockTimerSnapshotWithCompletion:(CDUnknownBlockType)arg1;	// IMP=0x000000010013d3f0
- (oneway void)getSerializedCachedObjectsWithIdentifiers:(id)arg1 completion:(CDUnknownBlockType)arg2;	// IMP=0x000000010013d02c
- (oneway void)getDeferredObjectsWithIdentifiers:(id)arg1 completion:(CDUnknownBlockType)arg2;	// IMP=0x000000010013cfa0
- (oneway void)recordAWDSuccessMetrics;	// IMP=0x000000010013cf58
- (oneway void)recordCancellationMetrics;	// IMP=0x000000010013cf10
- (oneway void)recordFailureMetricsForError:(id)arg1;	// IMP=0x000000010013cea0
- (oneway void)telephonyRequestCompleted;	// IMP=0x000000010013ce58
- (oneway void)prepareForPhoneCall;	// IMP=0x000000010013ce10
- (oneway void)setAlertContextDirty;	// IMP=0x000000010013cdc8
- (oneway void)setOverriddenApplicationContext:(id)arg1 withContext:(id)arg2;	// IMP=0x000000010013cd3c
- (oneway void)setApplicationContextForApplicationInfos:(id)arg1 withRefId:(id)arg2;	// IMP=0x000000010013ccb0
- (oneway void)fetchAppicationContextForApplicationInfo:(id)arg1 supplementalContext:(id)arg2 refID:(id)arg3;	// IMP=0x000000010013cc00
- (oneway void)setApplicationContext:(id)arg1;	// IMP=0x000000010013cb90
- (oneway void)willSetApplicationContextWithRefId:(id)arg1;	// IMP=0x000000010013cb20
- (oneway void)rollbackClearContext;	// IMP=0x000000010013ca24
- (oneway void)clearContext;	// IMP=0x000000010013c914
- (oneway void)performGenericAceCommand:(id)arg1 interruptOutstandingRequest:(_Bool)arg2 reply:(CDUnknownBlockType)arg3;	// IMP=0x000000010013c86c
- (oneway void)requestStateUpdateWithReply:(CDUnknownBlockType)arg1;	// IMP=0x000000010013c748
- (oneway void)stopSpeechWithOptions:(id)arg1;	// IMP=0x000000010013c600
- (oneway void)cancelSpeech;	// IMP=0x000000010013c4ec
- (oneway void)rollbackRequest;	// IMP=0x000000010013c3ec
- (oneway void)cancelRequestForReason:(long long)arg1;	// IMP=0x000000010013c260
- (oneway void)updateSpeechOptions:(id)arg1;	// IMP=0x000000010013c120
- (oneway void)startAcousticIDRequestWithOptions:(id)arg1 context:(id)arg2 completion:(CDUnknownBlockType)arg3;	// IMP=0x000000010013c068
- (oneway void)startSpeechPronunciationRequestWithOptions:(id)arg1 context:(id)arg2 completion:(CDUnknownBlockType)arg3;	// IMP=0x000000010013bfb0
- (oneway void)continuePendingSpeechRequestWithId:(unsigned long long)arg1 fromTimestamp:(double)arg2;	// IMP=0x000000010013bf38
- (oneway void)startRecordingForPendingSpeechRequestWithOptions:(id)arg1 requestId:(unsigned long long)arg2 completion:(CDUnknownBlockType)arg3;	// IMP=0x000000010013bbc0
- (oneway void)startRequestWithInfo:(id)arg1 completion:(CDUnknownBlockType)arg2;	// IMP=0x000000010013b984
- (void)_setRequestCompletion:(CDUnknownBlockType)arg1;	// IMP=0x000000010013b7b0
- (oneway void)endSession;	// IMP=0x000000010013b640
- (oneway void)setConfiguration:(id)arg1;	// IMP=0x000000010013b4f4
- (oneway void)didDismissUI;	// IMP=0x000000010013b3b0
- (oneway void)willPresentUIWithReply:(CDUnknownBlockType)arg1;	// IMP=0x000000010013b184
- (oneway void)setCarDNDActive:(_Bool)arg1;	// IMP=0x000000010013b134
- (oneway void)setLockState:(_Bool)arg1 showingLockScreen:(_Bool)arg2;	// IMP=0x000000010013b0d4
- (oneway void)resumeInterruptedAudioPlaybackIfNeeded;	// IMP=0x000000010013b08c
- (oneway void)forceAudioSessionInactiveWithOptions:(unsigned long long)arg1 completion:(CDUnknownBlockType)arg2;	// IMP=0x000000010013b014
- (oneway void)forceAudioSessionActiveWithOptions:(unsigned long long)arg1 reason:(long long)arg2 speechRequestOptions:(id)arg3 completion:(CDUnknownBlockType)arg4;	// IMP=0x000000010013ae30
- (oneway void)boostedPreheatWithStyle:(long long)arg1 completion:(CDUnknownBlockType)arg2;	// IMP=0x000000010013adb4
- (oneway void)preheatWithStyle:(long long)arg1 forOptions:(id)arg2;	// IMP=0x000000010013ad38
- (void)bluetoothDeviceDidInvalidate:(id)arg1;	// IMP=0x000000010013ac48
- (void)bluetoothDevice:(id)arg1 headphoneListeningModeDidChangeFrom:(long long)arg2 to:(long long)arg3;	// IMP=0x000000010013ab38
- (void)bluetoothDevice:(id)arg1 headphoneInEarDetectionStateDidChangeFrom:(id)arg2 to:(id)arg3;	// IMP=0x000000010013a228
- (void)bluetoothDevice:(id)arg1 deviceInfoDidChangeFrom:(id)arg2 to:(id)arg3;	// IMP=0x000000010013a0f0
- (void)audioPlaybackService:(id)arg1 didStopRequest:(id)arg2 error:(id)arg3;	// IMP=0x0000000100139fe0
- (void)audioPlaybackService:(id)arg1 didStartRequest:(id)arg2;	// IMP=0x0000000100139f10
- (void)audioPlaybackService:(id)arg1 willStartRequest:(id)arg2;	// IMP=0x0000000100139e40
- (void)audioStateAnnouncer:(id)arg1 didChangeAudioStateFrom:(id)arg2 to:(id)arg3;	// IMP=0x0000000100139d24
- (void)adShouldSpeakStateDidChange:(_Bool)arg1;	// IMP=0x0000000100139c88
- (void)_logShouldSpeakState:(_Bool)arg1;	// IMP=0x0000000100139c2c
- (_Bool)adWaitingForAudioFile;	// IMP=0x0000000100139c24
- (void)adSpeechRecordingPerformTwoShotPromptWithType:(long long)arg1 sessionUUID:(id)arg2 completion:(CDUnknownBlockType)arg3;	// IMP=0x00000001001398b8
- (void)adSpeechRecordingDidDetectStartPointWithSessionUUID:(id)arg1;	// IMP=0x0000000100139604
- (void)adSpeechRecognitionDidFail:(id)arg1 sessionUUID:(id)arg2;	// IMP=0x0000000100139504
- (void)adSpeechRecognitionWillBeginRecognitionUpdateForTask:(id)arg1;	// IMP=0x0000000100139434
- (void)adSpeechRecordingDidRecognizePhrases:(id)arg1 sessionUUID:(id)arg2 refId:(id)arg3;	// IMP=0x0000000100139430
- (void)adSpeechRecordingDidRecognizeTokens:(id)arg1 sessionUUID:(id)arg2;	// IMP=0x000000010013942c
- (void)adSpeechRecognizedPartialResult:(id)arg1;	// IMP=0x000000010013929c
- (void)adSpeechRecognized:(id)arg1 usingSpeechModel:(id)arg2 sessionUUID:(id)arg3;	// IMP=0x000000010013910c
- (void)adSpeechRecordingDidFail:(id)arg1 sessionUUID:(id)arg2;	// IMP=0x0000000100138d48
- (void)adSpeechRecordingDidCancelWithSessionUUID:(id)arg1;	// IMP=0x00000001001389e0
- (void)adSpeechRecordingDidEndWithSessionUUID:(id)arg1;	// IMP=0x0000000100138678
- (void)adSpeechRecordingDidChangeAVRecordRoute:(id)arg1 bluetoothDevice:(id)arg2 isDucking:(_Bool)arg3 isTwoShot:(_Bool)arg4 speechEndHostTime:(unsigned long long)arg5 sessionUUID:(id)arg6;	// IMP=0x00000001001382f0
- (void)adSpeechRecordingDidBeginOnAVRecordRoute:(id)arg1 audioSessionID:(unsigned int)arg2 bluetoothDevice:(id)arg3 sessionUUID:(id)arg4 dictationOptions:(id)arg5;	// IMP=0x0000000100137ec8
- (void)adSpeechRecordingWillBeginWithInputAudioPowerXPCWrapper:(id)arg1 sessionUUID:(id)arg2;	// IMP=0x0000000100137be0
- (void)_updateShouldSpeak;	// IMP=0x0000000100137aa0
- (_Bool)_shouldSpeak;	// IMP=0x0000000100137a74
- (void)_computeShouldSpeak;	// IMP=0x0000000100137894
- (void)_handleAudioSessionInterruption:(id)arg1;	// IMP=0x00000001001376e8
- (void)_unregisterForAudioSessionInterruptionNotification;	// IMP=0x0000000100137688
- (void)_registerForAudioSessionInterruptionNotification;	// IMP=0x0000000100137620
- (void)_unregisterForRingerStateNotification;	// IMP=0x00000001001375ec
- (void)_registerForRingerStateNotification;	// IMP=0x0000000100137520
- (void)_setServerForcedTTS:(_Bool)arg1;	// IMP=0x00000001001374d0
- (void)_setRequestOptionsRequireTTS:(_Bool)arg1;	// IMP=0x00000001001374c0
- (void)_setADShouldSpeak:(_Bool)arg1;	// IMP=0x00000001001374a8
- (void)adAudioSessionDidBecomeActive:(_Bool)arg1;	// IMP=0x0000000100137400
- (void)adAudioSessionWillBecomeActive:(_Bool)arg1;	// IMP=0x0000000100137358
- (void)adRequestWillProcessStartPlayback:(long long)arg1 intent:(id)arg2 completion:(CDUnknownBlockType)arg3;	// IMP=0x000000010013716c
- (void)adRequestDidHandleFailedStartPlayback:(long long)arg1;	// IMP=0x00000001001370c8
- (void)adServerRequestsTTSStateUnmuted:(_Bool)arg1;	// IMP=0x0000000100137054
- (void)adAceConnectionWillRetryOnError:(id)arg1;	// IMP=0x0000000100136f84
- (void)adInvalidateCurrentUserActivity;	// IMP=0x0000000100136ee8
- (void)adSetUserActivityInfo:(id)arg1 webpageURL:(id)arg2;	// IMP=0x0000000100136dd8
- (void)adAcousticIDRequestDidFinishSuccessfully:(_Bool)arg1;	// IMP=0x0000000100136d30
- (void)adMusicWasDetected;	// IMP=0x0000000100136c94
- (void)adAcousticIDRequestWillStart;	// IMP=0x0000000100136bf8
- (void)adQuickStopWasHandledWithActions:(unsigned long long)arg1;	// IMP=0x0000000100136b54
- (void)adRequestRequestedDismissAssistant;	// IMP=0x0000000100136ab8
- (void)adExtensionRequestFinishedForApplication:(id)arg1 error:(id)arg2;	// IMP=0x00000001001369a8
- (void)adExtensionRequestWillStartForApplication:(id)arg1;	// IMP=0x00000001001368d8
- (void)adWantsToCacheImage:(id)arg1;	// IMP=0x00000001001367a8
- (_Bool)adTextToSpeechIsMuted;	// IMP=0x000000010013668c
- (void)adGetClockContext:(CDUnknownBlockType)arg1;	// IMP=0x00000001001364f0
- (void)adGetBulletinContext:(CDUnknownBlockType)arg1;	// IMP=0x0000000100136358
- (void)adRequestRequestedOpenURL:(id)arg1 completion:(CDUnknownBlockType)arg2;	// IMP=0x0000000100136174
- (void)adRequestRequestedOpenApplicationWithBundleID:(id)arg1 URL:(id)arg2 completion:(CDUnknownBlockType)arg3;	// IMP=0x0000000100135f70
- (void)adStartUIRequestWithText:(id)arg1 completion:(CDUnknownBlockType)arg2;	// IMP=0x0000000100135d44
- (void)adRequestEncounteredIntermediateError:(id)arg1;	// IMP=0x0000000100135c38
- (void)adRequestDidCompleteWithSuccess:(_Bool)arg1 error:(id)arg2;	// IMP=0x0000000100135824
- (void)_handleRequestCompletedWithUUID:(id)arg1 error:(id)arg2;	// IMP=0x0000000100135608
- (void)adRequestDidReceiveCommand:(id)arg1 reply:(CDUnknownBlockType)arg2;	// IMP=0x0000000100135144
- (void)adRequestWillReceiveCommand:(id)arg1;	// IMP=0x000000010013506c
- (void)_setBluetoothDevice:(id)arg1;	// IMP=0x0000000100134f38
- (void)_speechRecordingDidFinish;	// IMP=0x0000000100134ec4
- (void)_updateSpeechRequestOptions:(id)arg1;	// IMP=0x0000000100134c38
- (id)_serviceDelegateWithErrorHandler:(CDUnknownBlockType)arg1;	// IMP=0x0000000100134b94
- (id)_serviceDelegate;	// IMP=0x0000000100134b84
- (void)connectionDisconnected;	// IMP=0x00000001001348bc
- (void)dealloc;	// IMP=0x00000001001347a4
- (id)initWithXPCConnection:(id)arg1;	// IMP=0x000000010013434c

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

