//
//     Generated by classdumpios 1.0.1 (64 bit) (iOS port by DreamDevLost)(Debug version compiled Sep 26 2020 13:48:20).
//
//  Copyright (C) 1997-2019 Steve Nygard.
//

#import <objc/NSObject.h>

#import "CARSessionObserving-Protocol.h"
#import "CoreTelephonyClientSubscriberDelegate-Protocol.h"
#import "MCProfileConnectionObserver-Protocol.h"
#import "RadiosPreferencesDelegate-Protocol.h"

@class BluetoothManager, CARSessionStatus, CNContact, CNContactStore, CTDataStatus, CoreTelephonyClient, FBSDisplayLayoutMonitor, NSArray, NSData, NSDate, NSDictionary, NSMutableDictionary, NSMutableSet, NSMutableString, NSNumber, NSSet, NSString, RadiosPreferences, SDAirDropServer, SFPowerSource;

__attribute__((visibility("hidden")))
@interface SDStatusMonitor : NSObject <CoreTelephonyClientSubscriberDelegate, CARSessionObserving, RadiosPreferencesDelegate, MCProfileConnectionObserver>
{
    _Bool _activateStarted;	// 8 = 0x8
    NSNumber *_airDropAllowed;	// 16 = 0x10
    int _airDropCount;	// 24 = 0x18
    int _airDropModeNotifyToken;	// 28 = 0x1c
    _Bool _airDropPublished;	// 32 = 0x20
    NSNumber *_backlightOn;	// 40 = 0x28
    int _backlightLevelToken;	// 48 = 0x30
    NSString *_bonjourName;	// 56 = 0x38
    _Bool _carplayConnected;	// 64 = 0x40
    NSMutableDictionary *_certificates;	// 72 = 0x48
    NSString *_computerName;	// 80 = 0x50
    NSNumber *_computerToComputer;	// 88 = 0x58
    NSString *_consoleUser;	// 96 = 0x60
    unsigned int _consoleUserID;	// 104 = 0x68
    CNContactStore *_contactStore;	// 112 = 0x70
    NSString *_currentDiscoverableMode;	// 120 = 0x78
    NSString *_deviceInformation;	// 128 = 0x80
    _Bool _deviceIsHighPriority;	// 136 = 0x88
    NSNumber *_deviceKeyBagState;	// 144 = 0x90
    NSNumber *_deviceKeyBagUnlocked;	// 152 = 0x98
    NSNumber *_deviceSupportsWAPI;	// 160 = 0xa0
    NSNumber *_deviceUIUnlocked;	// 168 = 0xa8
    _Bool _deviceWasUnlockedOnce;	// 176 = 0xb0
    struct __CFRunLoopSource *_dynamicStoreSource;	// 184 = 0xb8
    _Bool _finderAirDropEnabled;	// 192 = 0xc0
    SDAirDropServer *_finderServer;	// 200 = 0xc8
    NSNumber *_handoffVisible;	// 208 = 0xd0
    NSMutableDictionary *_identities;	// 216 = 0xd8
    int _keyBagUnlockToken;	// 224 = 0xe0
    NSNumber *_legacyModeEnabled;	// 232 = 0xe8
    NSString *_localHostName;	// 240 = 0xf0
    NSDictionary *_mountPoints;	// 248 = 0xf8
    NSString *_myAppleID;	// 256 = 0x100
    NSString *_myAppleIDCommonName;	// 264 = 0x108
    struct __SecIdentity *_myAppleIDSecIdentity;	// 272 = 0x110
    NSMutableString *_myEmailHashes;	// 280 = 0x118
    NSData *_myLegacyAirDropIcon;	// 288 = 0x120
    NSString *_myLegacyAirDropIconHash;	// 296 = 0x128
    NSMutableString *_myPhoneHashes;	// 304 = 0x130
    struct _DNSServiceRef_t *_nameMonitor;	// 312 = 0x138
    _Bool _needsExitForLocaleChange;	// 320 = 0x140
    NSString *_netbiosName;	// 328 = 0x148
    unsigned int _notifierObject;	// 336 = 0x150
    struct IONotificationPort *_notifyPortRef;	// 344 = 0x158
    NSDictionary *_odisksMountPoints;	// 352 = 0x160
    long long _pairedWatchWristState;	// 360 = 0x168
    NSNumber *_personalHotspotAutoState;	// 368 = 0x170
    _Bool _personalHotspotFamilyEnabled;	// 376 = 0x178
    NSMutableDictionary *_personalHotspotFamilyStates;	// 384 = 0x180
    NSNumber *_personalHotspotAllowed;	// 392 = 0x188
    struct __IOPMConnection *_pmConnection;	// 400 = 0x190
    NSMutableSet *_preventExitForLocaleReasons;	// 408 = 0x198
    unsigned int _rootPort;	// 416 = 0x1a0
    NSNumber *_screenOn;	// 424 = 0x1a8
    NSMutableDictionary *_serverNames;	// 432 = 0x1b0
    struct __SCPreferences *_smbPreferences;	// 440 = 0x1b8
    NSMutableDictionary *_ssidHashes;	// 448 = 0x1c0
    unsigned int _systemUIFlags;	// 456 = 0x1c8
    int _uiLockStatusToken;	// 460 = 0x1cc
    NSNumber *_wirelessAccessPoint;	// 464 = 0x1d0
    NSString *_workgroup;	// 472 = 0x1d8
    long long _watchWristState;	// 480 = 0x1e0
    struct __WiFiDeviceClient *_wifiDevice;	// 488 = 0x1e8
    struct __WiFiDeviceClient *_awdlDevice;	// 496 = 0x1f0
    struct __WiFiManagerClient *_wifiManager;	// 504 = 0x1f8
    _Bool _wifiDeviceAttachmentRegistered;	// 512 = 0x200
    _Bool _wifiScheduledOnRunLoop;	// 513 = 0x201
    BluetoothManager *_bluetoothManager;	// 520 = 0x208
    CARSessionStatus *_carKitSessionStatus;	// 528 = 0x210
    CoreTelephonyClient *_coreTelephonyClient;	// 536 = 0x218
    CTDataStatus *_coreTelephonyDataStatus;	// 544 = 0x220
    _Bool _coreTelephonyLTEShows4G;	// 552 = 0x228
    struct __CTServerConnection *_coreTelephonyServerConnection;	// 560 = 0x230
    NSString *_coreTelephonySIMStatus;	// 568 = 0x238
    NSNumber *_coreTelephonySignalStrength;	// 576 = 0x240
    FBSDisplayLayoutMonitor *_systemUIMonitor;	// 584 = 0x248
    int _screenBlankedToken;	// 592 = 0x250
    RadiosPreferences *_radiosPreferences;	// 600 = 0x258
    NSMutableDictionary *_longHashesToContactIdentifier;	// 608 = 0x260
    NSMutableDictionary *_mediumHashesToContactIdentifier;	// 616 = 0x268
    NSMutableSet *_shortHashes;	// 624 = 0x270
    _Bool _controlCenterVisible;	// 632 = 0x278
    _Bool _multipleUsersLoggedIn;	// 633 = 0x279
    CNContact *___meCard;	// 640 = 0x280
    NSDictionary *_awdlState;	// 648 = 0x288
    NSDate *_lastDarkWakeDate;	// 656 = 0x290
    NSSet *_effectiveBlacklistedAppBundleIDs;	// 664 = 0x298
}

+ (_Bool)enableOOBPCredentialLogging;	// IMP=0x000000010020f184
+ (_Bool)enableNewHashing;	// IMP=0x000000010020f158
+ (_Bool)isBuddyCompleted;	// IMP=0x000000010020e8bc
+ (_Bool)b332PairingEnabled;	// IMP=0x000000010020e7b8
+ (long long)shareSheetMaxSuggestions;	// IMP=0x000000010020e234
+ (double)b332BTAddressRotationDelay;	// IMP=0x000000010020d494
+ (id)sharedMonitor;	// IMP=0x00000001002049cc
- (void).cxx_destruct;	// IMP=0x0000000100214d90
@property(readonly) _Bool multipleUsersLoggedIn; // @synthesize multipleUsersLoggedIn=_multipleUsersLoggedIn;
@property(readonly) _Bool controlCenterVisible; // @synthesize controlCenterVisible=_controlCenterVisible;
@property(readonly) NSSet *effectiveBlacklistedAppBundleIDs; // @synthesize effectiveBlacklistedAppBundleIDs=_effectiveBlacklistedAppBundleIDs;
@property(readonly) NSDate *lastDarkWakeDate; // @synthesize lastDarkWakeDate=_lastDarkWakeDate;
@property(readonly) NSDictionary *awdlState; // @synthesize awdlState=_awdlState;
- (void)logWiFiPowerState;	// IMP=0x0000000100214c84
- (void)clearWirelessState;	// IMP=0x0000000100214c48
- (void)clearOperationModeInfo;	// IMP=0x0000000100214c00
- (void)installSSIDCacheMonitor;	// IMP=0x00000001002149d0
- (void)installWiFiPasswordSharingMonitor;	// IMP=0x000000010021489c
- (void)handleWiFiPasswordSharingChanged;	// IMP=0x0000000100214874
- (id)stringForWatchWristState:(long long)arg1;	// IMP=0x000000010021481c
@property(readonly) long long watchWristState;
- (void)updateWatchWristState:(long long)arg1;	// IMP=0x0000000100214710
- (void)installWristStateMonitor;	// IMP=0x000000010021470c
- (void)installVolumesMonitor;	// IMP=0x0000000100214708
- (void)installUserPictureMonitor;	// IMP=0x0000000100214704
@property(readonly) unsigned long long ultraWideBandState;
- (void)handleRapportStatusChanged;	// IMP=0x000000010021469c
- (void)installUltraWideBandStateMonitor;	// IMP=0x0000000100214634
- (void)installUILockStatusMonitor;	// IMP=0x000000010021445c
- (void)installSystemUIMonitor;	// IMP=0x0000000100213c08
- (void)installSpringBoardStateMonitor;	// IMP=0x0000000100213828
- (_Bool)smbConfiguration:(struct __SCPreferences *)arg1 netBiosName:(id *)arg2 workgroup:(id *)arg3;	// IMP=0x0000000100213820
- (void)reloadSMBConfInfo;	// IMP=0x00000001002136cc
- (void)installSMBPreferencesMonitor;	// IMP=0x00000001002136c8
- (void)installSleepWakeCallBack;	// IMP=0x0000000100213614
- (void)installSleepNotification;	// IMP=0x0000000100213610
- (void)handleSleepWakeCallBack:(unsigned int)arg1 messageArguement:(void *)arg2;	// IMP=0x0000000100213438
- (void)profileConnectionDidReceiveEffectiveSettingsChangedNotification:(id)arg1 userInfo:(id)arg2;	// IMP=0x000000010021342c
@property(readonly) SFPowerSource *localPowerSource;
- (void)updateLocalPowerSource:(id)arg1;	// IMP=0x0000000100213344
- (void)handleMISStateChanged:(id)arg1;	// IMP=0x00000001002132c4
- (void)installMISMonitor;	// IMP=0x0000000100213260
- (void)updatePairedWatchLockState:(int)arg1;	// IMP=0x0000000100213198
@property(readonly) int pairedWatchLockState;
- (void)updatePairedWatchWristState:(long long)arg1;	// IMP=0x0000000100213050
@property(readonly) long long pairedWatchWristState;
- (void)handleNameMonitorCallBack:(const char *)arg1 flags:(unsigned int)arg2 error:(int)arg3;	// IMP=0x0000000100212f28
- (void)updateBlacklistedAppBundleIDs;	// IMP=0x0000000100212e00
- (void)managedConfigurationSettingsChanged:(id)arg1;	// IMP=0x0000000100212dbc
- (void)installManagedConfigurationMonitor;	// IMP=0x0000000100212d00
- (void)installLocaleChangeMonitor;	// IMP=0x0000000100212b2c
- (void)installKeyBagUnlockMonitor;	// IMP=0x00000001002129b0
- (void)installFinderSidebarPrefsMonitor;	// IMP=0x00000001002129ac
- (void)installDynamicStoreCallBack;	// IMP=0x0000000100212760
- (void)handleDynamicStoreCallback:(struct __SCDynamicStore *)arg1 changedKeys:(struct __CFArray *)arg2;	// IMP=0x00000001002124a0
- (void)installDisplaySleepMonitor;	// IMP=0x000000010021249c
- (void)installDisplayConfigurationMonitor;	// IMP=0x0000000100212498
- (void)signalStrengthChanged:(id)arg1 info:(id)arg2;	// IMP=0x0000000100212424
- (void)dataStatus:(id)arg1 dataStatusInfo:(id)arg2;	// IMP=0x00000001002123b0
- (void)simStatusDidChange:(id)arg1 status:(id)arg2;	// IMP=0x000000010021233c
- (void)subscriptionInfoDidChange;	// IMP=0x00000001002121f4
- (void)updateSignalStrength:(id)arg1;	// IMP=0x00000001002120a0
- (void)updateDataStatus:(id)arg1;	// IMP=0x0000000100211f94
- (void)updateSIMStatus:(id)arg1;	// IMP=0x0000000100211e24
- (void)updateLTEShows4G:(_Bool)arg1;	// IMP=0x0000000100211d48
- (void)fetchSignalStrengthWithContext:(id)arg1;	// IMP=0x0000000100211c48
- (void)fetchDataStatusWithContext:(id)arg1;	// IMP=0x0000000100211b48
- (void)fetchSIMStatusWithContext:(id)arg1;	// IMP=0x0000000100211a48
- (void)fetchLTEShows4GWithContext:(id)arg1;	// IMP=0x00000001002118ac
- (void)fetchSubscriptionContextWithCompletion:(CDUnknownBlockType)arg1;	// IMP=0x00000001002116e4
- (void)installCoreTelephonyMonitor;	// IMP=0x0000000100211560
- (void)installContactsMonitor;	// IMP=0x00000001002113e0
- (void)contactStoreDidChange:(id)arg1;	// IMP=0x0000000100211288
- (void)installClamshellStateChangeMonitor;	// IMP=0x0000000100211284
- (void)uninstallCarPlayStatusMonitor;	// IMP=0x00000001002111c0
- (void)sessionDidDisconnect:(id)arg1;	// IMP=0x0000000100211148
- (void)sessionDidConnect:(id)arg1;	// IMP=0x00000001002110d0
- (void)handleCarKitSessionStateChanged:(id)arg1;	// IMP=0x0000000100210fc4
- (_Bool)isCarKitSessionWireless:(id)arg1;	// IMP=0x0000000100210f70
- (void)installWirelessCarPlayMonitor;	// IMP=0x0000000100210f08
- (void)installCarPlayStatusMonitor;	// IMP=0x0000000100210d80
- (void)carplayStatusNotification:(id)arg1;	// IMP=0x0000000100210bf8
- (void)carplayMonitorDiedNotification:(id)arg1;	// IMP=0x0000000100210b54
- (void)restartBonjourNameMonitor;	// IMP=0x0000000100210b04
- (void)uninstallBonjourNameMonitor;	// IMP=0x0000000100210ad8
- (void)installBonjourNameMonitor;	// IMP=0x00000001002109c4
- (void)logBluetoothPowerState;	// IMP=0x00000001002108f4
- (void)logBluetoothAvailabilityState:(_Bool)arg1;	// IMP=0x0000000100210834
- (void)installBluetoothMonitor;	// IMP=0x0000000100210718
- (void)bluetoothAvailabilityChange:(id)arg1;	// IMP=0x0000000100210694
- (void)airplaneModeChanged;	// IMP=0x0000000100210680
- (void)installAirplaneModeMonitor;	// IMP=0x0000000100210638
- (void)installBacklightMonitor;	// IMP=0x0000000100210540
- (void)updateWirelessDevice;	// IMP=0x000000010020fe70
- (void)installWirelessMonitor;	// IMP=0x000000010020fde4
- (void)updateAWDLStateInfo;	// IMP=0x000000010020fd9c
- (void)handleAWDLState:(id)arg1;	// IMP=0x000000010020fb98
- (void)installAppleIDAccountInfoMonitor;	// IMP=0x000000010020fad4
- (void)appleIDAccountInfoChanged:(id)arg1;	// IMP=0x000000010020fa2c
- (void)installAppleIDUsernameMonitor;	// IMP=0x000000010020f99c
- (void)logAirDropTransactionForClientServer:(_Bool)arg1 beginEnd:(_Bool)arg2 count:(int)arg3;	// IMP=0x000000010020f89c
- (void)installAirDropStatusMonitor;	// IMP=0x000000010020f818
- (void)airDropStatusChanged:(id)arg1;	// IMP=0x000000010020f768
@property(readonly) _Bool wirelessCarPlay;
@property(readonly) _Bool wirelessAccessPoint;
@property(readonly) _Bool wifiUserPowerPreference;
@property(readonly) _Bool testDiskFull;
@property(readonly) _Bool signedIntoPrimaryiCloudAccount;
@property(readonly) _Bool showThisComputer;
@property(readonly) _Bool showMeInWormhole;
@property(readonly) _Bool screenOn;
@property(readonly) _Bool runningAsSetupUser;
@property(readonly) _Bool registerAllInterfaces;
@property(readonly) _Bool preferABImages;
@property(readonly) _Bool myAppleIDIsManaged;
@property(readonly) _Bool legacyModeSettable;
@property(readonly) _Bool legacyDevice;
@property(readonly) _Bool internetSharingEnabled;
@property(readonly) _Bool ignoreIconDiskCache;
@property(readonly) _Bool handoffVisible;
@property(readonly) _Bool forceP2P;
@property(readonly) _Bool forceAWDL;
@property(readonly) _Bool finderAirDropEnabled;
@property(readonly) _Bool enableXML;
@property(readonly) _Bool enableWebloc;
@property(readonly) _Bool enableStreamDebugging;
@property(readonly) _Bool enableStrangers;
@property(readonly) _Bool enablePKZip;
@property(readonly) _Bool forceLeashingAlertsWhenWiFiConnected;
@property(readonly) _Bool enableLeashing;
@property(readonly) _Bool enableHotspotFallback;
@property(readonly) _Bool enableDVZip;
@property(readonly) _Bool enableDemoMode;
@property(readonly) _Bool enableDebugMode;
@property(readonly) _Bool enableContinuity;
@property(readonly) _Bool enableBugs;
@property(readonly) _Bool enableAllRecents;
@property(readonly) _Bool enableAirDropReceiving;
@property(readonly) _Bool enableAirDropAdvertising;
@property(readonly) _Bool enableABImages;
@property(readonly) _Bool eduModeEnabled;
@property(readonly) _Bool dockHasDownloadsFolder;
@property(readonly) _Bool disableTLS;
@property(readonly) _Bool disableRotation;
@property(readonly) _Bool disableExtractMediaFromBundles;
@property(readonly) _Bool disableQuarantine;
@property(readonly) _Bool disablePipelining;
@property(readonly) _Bool disablePictureQuery;
@property(readonly) _Bool disablePeopleSuggestions;
@property(readonly) _Bool disableContinuityTLS;
@property(readonly) _Bool disableCompression;
@property(readonly) _Bool disableAutoAccept;
@property(readonly) _Bool deviceWasUnlockedOnce;
@property(readonly) _Bool deviceUIUnlocked;
@property(readonly) _Bool deviceSupportsWAPI;
@property(readonly) _Bool deviceSupportsRanging;
@property(readonly) _Bool deviceSupportsContinuity;
@property(readonly) _Bool deviceRequiresNewRanging;
@property(readonly) _Bool deviceKeyBagUnlocked;
@property(readonly) _Bool deviceKeyBagLocking;
@property(readonly) _Bool deviceKeyBagLocked;
@property(readonly) _Bool deviceKeyBagDisabled;
@property(readonly) _Bool currentConsoleUser;
@property(readonly) _Bool connectedEnabled;
@property(readonly) _Bool computerToComputer;
@property(readonly) _Bool coalesceMe;
@property(readonly) _Bool carplayConnected;
@property(readonly) _Bool bypassLTKeyAbort;
@property(readonly) _Bool browseAllInterfaces;
@property(readonly) _Bool broadcastPicture;
@property(readonly) _Bool bonjourEnabled;
@property(readonly) _Bool backlightOn;
@property(readonly) _Bool alwaysSendPayload;
@property(readonly) _Bool alwaysAutoAccept;
@property(readonly) _Bool altDSIDNeedsFixing;
@property(readonly) _Bool allEnabled;
@property(readonly, getter=isLegacyAirDropAvailable) _Bool legacyAirDropAvailable;
@property(readonly, getter=isAirDropAvailable) _Bool airdropAvailable;
- (void)updateAirDropAllowed;	// IMP=0x000000010020e484
@property(readonly, getter=isAirDropAllowed) _Bool airdropAllowed;
@property(readonly) int workgroupThreshold;
@property(readonly) NSString *workgroup;
@property(readonly) unsigned int systemUIFlags;
@property(readonly) NSString *someComputerName;
@property(readonly) int sidebarMaxCount;
@property(readonly) NSString *netbiosName;
@property(readonly) NSData *myShortHashesForAirDrop;
@property(readonly) NSData *myMediumHashes;
@property(readonly) NSString *myPrimaryEmail;
@property(readonly) NSString *myGivenName;
@property(readonly) NSString *myName;
@property(readonly) NSString *myLegacyAirDropIconHash;
@property(readonly) NSData *myLegacyAirDropIcon;
@property(readonly) NSString *myEmail;
@property(readonly) NSDictionary *myAppleIDValidationRecord;
@property(readonly) NSArray *myAppleIDPhoneNumbers;
@property(readonly) NSString *myAppleIDPhoneHash;
@property(readonly) NSString *myAppleIDEmailHash;
@property(readonly) NSArray *myAppleIDEmailAddresses;
@property(readonly) NSString *myAppleIDCommonName;
- (id)_myAppleID;	// IMP=0x000000010020d79c
@property(readonly) NSString *myAppleID;
@property(readonly) NSString *myAltDSID;
@property(readonly) NSString *myAccountAppleID;
@property(readonly) NSString *modelName;
@property(readonly) NSString *modelCode;
@property(readonly) int minPersonImageSize;
@property(readonly) int leashingTimeToWaitBeforeAlerting;
- (void)clearLocalHostName;	// IMP=0x000000010020d458
@property(readonly) NSString *localHostName;
@property(readonly) long long deviceKeyBagState;
@property(readonly) NSString *deviceInformation;
- (void)clearConsoleUser;	// IMP=0x000000010020cee0
@property(readonly) NSString *consoleUser;
- (void)clearComputerName;	// IMP=0x000000010020ce60
@property(readonly) NSString *computerName;
@property(readonly) NSString *bonjourName;
- (id)awdlStateInfo;	// IMP=0x000000010020ccb4
@property(readonly) NSArray *awdlPeerList;
@property(readonly) NSDictionary *awdlInfo;
@property _Bool airplaneModeEnabled;
@property _Bool wirelessEnabled;
@property _Bool legacyModeEnabled;
@property __weak SDAirDropServer *finderServer;
@property _Bool bluetoothEnabled;
@property _Bool airDropPublished;
- (id)wifiSSIDForSSIDHash:(id)arg1;	// IMP=0x000000010020c4a0
- (unsigned int)wifiPasswordSharingAvailability;	// IMP=0x000000010020c2bc
- (id)defaultWiFiDevice;	// IMP=0x000000010020c284
- (struct __WiFiManagerClient *)wifiManager;	// IMP=0x000000010020c27c
- (_Bool)_multipleUsersLoggedIn;	// IMP=0x000000010020c274
- (void)postNotification:(id)arg1;	// IMP=0x000000010020c264
- (void)postNotification:(id)arg1 userInfo:(id)arg2;	// IMP=0x000000010020c1d4
- (void)removePreventExitForLocaleReason:(id)arg1;	// IMP=0x000000010020c078
- (void)addPreventExitForLocaleReason:(id)arg1;	// IMP=0x000000010020bf6c
@property(readonly) _Bool simStateReady;
- (long long)signalStrength;	// IMP=0x000000010020bf08
- (void)updatePersonalHotspotAllowed;	// IMP=0x000000010020be1c
@property(readonly) _Bool personalHotspotAllowed;
- (unsigned char)networkType;	// IMP=0x000000010020bca8
@property(readonly) _Bool familyHotspotEnabled;
- (void)updateFamilyHotspotState;	// IMP=0x000000010020b570
- (long long)familyHotspotStateForAltDSID:(id)arg1;	// IMP=0x000000010020b4d4
- (_Bool)lteConnectionShows4G;	// IMP=0x000000010020b4cc
- (void)cellularDataEnabled:(_Bool *)arg1 airplaneMode:(_Bool *)arg2;	// IMP=0x000000010020b41c
- (void)updateAutoHotspotState;	// IMP=0x000000010020b294
- (long long)autoHotspotState;	// IMP=0x000000010020b228
- (id)phoneNumbersForContact:(id)arg1;	// IMP=0x000000010020b080
- (void)resetMeCardWithReason:(id)arg1;	// IMP=0x000000010020af2c
@property(readonly, nonatomic) CNContact *meCard; // @synthesize meCard=___meCard;
- (id)instantMessageEmailsForContact:(id)arg1;	// IMP=0x000000010020ab6c
- (id)addressOrNumForHash:(id)arg1;	// IMP=0x000000010020a94c
- (id)emailOrPhoneForEmailHash:(id)arg1 phoneHash:(id)arg2;	// IMP=0x000000010020a850
- (void)generateContactHashes;	// IMP=0x000000010020a244
- (id)emailsForContact:(id)arg1;	// IMP=0x000000010020a0c0
- (id)contactWithPhoneNumberOrEmail:(id)arg1;	// IMP=0x0000000100209d28
- (id)contactWithContactIdentifier:(id)arg1;	// IMP=0x0000000100209a0c
- (_Bool)contactsContainsShortHashes:(id)arg1;	// IMP=0x000000010020985c
- (_Bool)contactIsBlocked:(id)arg1;	// IMP=0x00000001002093d0
- (_Bool)contactIdentifierIsBlocked:(id)arg1;	// IMP=0x0000000100209284
- (id)contactIdentifierForMediumHashes:(id)arg1;	// IMP=0x0000000100209108
- (id)contactForCombinedHash:(id)arg1;	// IMP=0x0000000100208ec8
- (id)contactForEmailHash:(id)arg1 phoneHash:(id)arg2;	// IMP=0x0000000100208dcc
- (void)clearMyIconAndHash;	// IMP=0x0000000100208ce0
- (void)clearContactsInfo;	// IMP=0x0000000100208c80
- (void)addPhoneNumbers:(id)arg1 toLongHashes:(id)arg2 andMediumHashes:(id)arg3 andShortHashes:(id)arg4 forContactIdentifier:(id)arg5;	// IMP=0x00000001002088e0
- (void)addEmails:(id)arg1 toLongHashes:(id)arg2 andMediumHashes:(id)arg3 andShortHashes:(id)arg4 forContactIdentifier:(id)arg5;	// IMP=0x00000001002084d8
- (id)addAdditionalInformationToMeCard:(id)arg1;	// IMP=0x0000000100207e54
- (id)awdlNetwork;	// IMP=0x0000000100207cc0
- (id)awdlInfoForPeerWithServiceName:(id)arg1;	// IMP=0x0000000100207a20
- (id)awdlDevice;	// IMP=0x00000001002079e8
- (id)verifiedIdentityForAppleID:(id)arg1;	// IMP=0x0000000100207950
- (id)unifiedAppleIDInfo;	// IMP=0x0000000100207478
- (id)phoneNumbersForAppleID:(id)arg1;	// IMP=0x00000001002073b0
- (void)hsa2EnabledWithCompletionHandler:(CDUnknownBlockType)arg1;	// IMP=0x0000000100207148
- (void)handleAppleAccountSignOut;	// IMP=0x00000001002070b0
- (void)handleAppleAccountSignIn;	// IMP=0x0000000100207018
- (void)fixAltDSIDIfNeeded;	// IMP=0x0000000100206d38
- (id)emailAddressesForAppleID:(id)arg1;	// IMP=0x0000000100206c70
- (struct __SecIdentity *)_copyMyAppleIDSecIdentity;	// IMP=0x0000000100206bd0
- (struct __SecIdentity *)copyMyAppleIDSecIdentity;	// IMP=0x0000000100206b84
- (struct __SecCertificate *)copyMyAppleIDCertificate;	// IMP=0x0000000100206b08
- (struct __SecCertificate *)copyCertificateForRealName:(id)arg1;	// IMP=0x0000000100206a70
- (id)commonNameForCertificate:(struct __SecCertificate *)arg1;	// IMP=0x00000001002069ac
- (void)clearMyAppleIDInfo;	// IMP=0x00000001002068a0
- (void)cacheIdentity:(id)arg1;	// IMP=0x00000001002067d0
- (void)cacheCertificate:(struct __SecCertificate *)arg1 forRealName:(id)arg2;	// IMP=0x000000010020671c
- (_Bool)verifyAndParseValidationRecordData:(id)arg1 intoDictionary:(out id *)arg2;	// IMP=0x00000001002063a4
- (long long)appleIDAccountState;	// IMP=0x000000010020613c
- (void)updateDiscoverableMode;	// IMP=0x0000000100205e88
- (void)setServerMountPoints:(id)arg1;	// IMP=0x0000000100205df0
@property(retain) NSString *discoverableMode;
- (void)setODiskMountPoints:(id)arg1;	// IMP=0x0000000100205cac
- (id)serverNameForHost:(id)arg1;	// IMP=0x0000000100205bf4
- (void)removeServerName:(id)arg1;	// IMP=0x0000000100205b60
- (id)reconciledDiscoverableMode;	// IMP=0x0000000100205a18
- (id)odiskMountPointsForServer:(id)arg1;	// IMP=0x0000000100205988
- (id)newDiscoverableMode;	// IMP=0x0000000100205654
- (id)mountPointsForServer:(id)arg1;	// IMP=0x00000001002055c4
- (_Bool)isAirDropReady;	// IMP=0x000000010020546c
- (int)discoverableLevel;	// IMP=0x00000001002053bc
- (id)defaultDiscoverableMode;	// IMP=0x000000010020539c
- (id)createHostNameKey:(id)arg1;	// IMP=0x00000001002052e4
- (void)airDropTransactionEnd:(_Bool)arg1;	// IMP=0x00000001002051dc
- (void)airDropTransactionBegin:(_Bool)arg1;	// IMP=0x0000000100205150
- (void)addServerName:(id)arg1 forHostName:(id)arg2;	// IMP=0x0000000100205084
- (void)clearMonitorCache;	// IMP=0x0000000100204f24
- (void)activate;	// IMP=0x0000000100204c74
- (id)init;	// IMP=0x0000000100204a50

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

