//
//     Generated by classdumpios 1.0.1 (64 bit) (iOS port by DreamDevLost)(Debug version compiled Sep 26 2020 13:48:20).
//
//  Copyright (C) 1997-2019 Steve Nygard.
//

#import <objc/NSObject.h>

#import "FontServicesDaemonProtocol-Protocol.h"
#import "NSXPCListenerDelegate-Protocol.h"

@class BKSApplicationStateMonitor, MissingFontsDialogHandler, NSArray, NSDictionary, NSString;
@protocol OS_dispatch_queue;

@interface FontServicesDaemon : NSObject <FontServicesDaemonProtocol, NSXPCListenerDelegate>
{
    MissingFontsDialogHandler *_missingFontsDialogHandler;	// 8 = 0x8
    NSObject<OS_dispatch_queue> *_subscriptionSupportQueue;	// 16 = 0x10
    NSArray *_blacklistInfo;	// 24 = 0x18
    NSObject<OS_dispatch_queue> *_mainHandlerQueue;	// 32 = 0x20
    NSDictionary *_userFontsInfo;	// 40 = 0x28
    BKSApplicationStateMonitor *_applicationStateMonitor;	// 48 = 0x30
}

+ (id)sharedDaemon;	// IMP=0x0000000100003c14
- (void).cxx_destruct;	// IMP=0x000000010000ba80
@property(retain, nonatomic) BKSApplicationStateMonitor *applicationStateMonitor; // @synthesize applicationStateMonitor=_applicationStateMonitor;
@property(retain, nonatomic) NSDictionary *userFontsInfo; // @synthesize userFontsInfo=_userFontsInfo;
@property(readonly, nonatomic) NSObject<OS_dispatch_queue> *mainHandlerQueue; // @synthesize mainHandlerQueue=_mainHandlerQueue;
@property(retain) NSArray *blacklistInfo; // @synthesize blacklistInfo=_blacklistInfo;
- (void)analyticsEventRequestFonts:(id)arg1 misses:(unsigned long long)arg2 suggestions:(unsigned long long)arg3 resolved:(unsigned long long)arg4;	// IMP=0x000000010000b864
- (id)_userFontsInfoFromDisk;	// IMP=0x000000010000b6d8
- (void)run;	// IMP=0x000000010000b6cc
- (void)setupForXPCService;	// IMP=0x000000010000b57c
- (void)fontChanged:(id)arg1 reply:(CDUnknownBlockType)arg2;	// IMP=0x000000010000b47c
- (unsigned long long)countFontAssets;	// IMP=0x000000010000b3d8
- (void)subscriptionSupportTimerHandler;	// IMP=0x000000010000a9e4
@property(readonly, nonatomic) NSObject<OS_dispatch_queue> *subscriptionSupportQueue; // @synthesize subscriptionSupportQueue=_subscriptionSupportQueue;
- (void)warnAboutSuspendedFontProviders:(id)arg1;	// IMP=0x000000010000a6a4
- (void)updatingUserFonts:(CDUnknownBlockType)arg1;	// IMP=0x000000010000a5a8
- (void)resumeAndShowAlertForSuspendedFontProviders:(CDUnknownBlockType)arg1;	// IMP=0x000000010000a468
- (void)warnAboutSuspendedFontProvider:(id)arg1 forExpiration:(_Bool)arg2 date:(id)arg3 withURLSchem:(id)arg4 immediately:(_Bool)arg5;	// IMP=0x0000000100009520
- (void)resetWarnedForIdenntifier:(id)arg1;	// IMP=0x000000010000940c
- (void)recordWarnedForIdenntifier:(id)arg1;	// IMP=0x00000001000092d0
- (void)recordSuspendedProvider:(id)arg1 url:(id)arg2 andScheme:(id)arg3 forDate:(id)arg4;	// IMP=0x0000000100009078
- (void)requestFonts:(id)arg1 forClient:(id)arg2 reply:(CDUnknownBlockType)arg3;	// IMP=0x0000000100008b64
- (void)requestFonts:(id)arg1 reply:(CDUnknownBlockType)arg2;	// IMP=0x00000001000079c4
- (id)issuedFontFilePathsForIdentifier:(id)arg1;	// IMP=0x00000001000078fc
- (void)extractRequestFontsMissed:(unsigned long long *)arg1 andResolved:(unsigned long long *)arg2;	// IMP=0x000000010000780c
- (void)recordRequestFontsResultWihtMissed:(_Bool)arg1 andResolved:(_Bool)arg2;	// IMP=0x0000000100007714
- (void)forgetClientApplication:(id)arg1;	// IMP=0x0000000100007494
- (void)recordIssuedFontPaths:(id)arg1 forIdentifier:(id)arg2;	// IMP=0x0000000100007254
- (id)sanitizeIssuedFontPaths:(id)arg1;	// IMP=0x0000000100007054
- (void)showDialog:(id)arg1 forPID:(int)arg2 completionHandler:(CDUnknownBlockType)arg3;	// IMP=0x0000000100006ed4
- (id)missingFontsDialogRequestsFromUnknownFontNames:(id)arg1;	// IMP=0x0000000100006d0c
- (id)missingFontsDialogRequestsFromDisabledFamilyNames:(id)arg1;	// IMP=0x0000000100006918
- (id)providerIdentifiersAndFamilyName:(id *)arg1 fromPostScriptName:(id)arg2;	// IMP=0x00000001000064a8
- (id)providerIdentifiersFromFamilyName:(id)arg1;	// IMP=0x0000000100006280
- (id)identifierFromFilePath:(id)arg1;	// IMP=0x00000001000061fc
- (id)unknownFontNamesAndEnabledFamilyNames:(id *)arg1 andDisabledFamilyNames:(id *)arg2 fromRequests:(id)arg3;	// IMP=0x0000000100005e48
- (_Bool)isKnownFamilyName:(id)arg1 withEnabledState:(_Bool *)arg2;	// IMP=0x0000000100005bf4
- (id)knownFamilyNameFromPostScriptName:(id)arg1 withEnabledState:(_Bool *)arg2;	// IMP=0x00000001000058e0
- (void)requestFileAccess:(id)arg1 reply:(CDUnknownBlockType)arg2;	// IMP=0x00000001000053d8
- (void)checkinForFontPicker:(CDUnknownBlockType)arg1;	// IMP=0x00000001000050d0
- (void)checkin:(CDUnknownBlockType)arg1;	// IMP=0x0000000100004bc8
- (id)fontInfoForAuditToken:(CDStruct_6ad76789)arg1 withEnumuration:(_Bool)arg2 installation:(_Bool)arg3 identifier:(id)arg4 andFileFilters:(id)arg5 foundFontDirectoryName:(id *)arg6;	// IMP=0x000000010000484c
- (id)sandboxExtensionForProvider:(CDStruct_6ad76789)arg1 withDirectoryName:(id)arg2;	// IMP=0x0000000100004734
- (id)sandboxExtensionForEnumeration:(CDStruct_6ad76789)arg1;	// IMP=0x00000001000046b4
- (_Bool)isCurrentConnectionFontPicker;	// IMP=0x00000001000045d0
- (void)currentConnectionCapabilities:(_Bool *)arg1 allowUserFonts:(_Bool *)arg2 allowInstallation:(_Bool *)arg3 andIdentifier:(id *)arg4;	// IMP=0x00000001000043dc
- (_Bool)isIdentifierAllowed:(id)arg1;	// IMP=0x00000001000041cc
- (id)filterUserFontInfoForAuditToken:(CDStruct_6ad76789)arg1 withEnumerationCapability:(_Bool)arg2 withFilter:(CDUnknownBlockType)arg3;	// IMP=0x0000000100003e44
- (_Bool)isAuditTokenSandboxed:(CDStruct_6ad76789)arg1;	// IMP=0x0000000100003e0c
- (_Bool)listener:(id)arg1 shouldAcceptNewConnection:(id)arg2;	// IMP=0x0000000100003d54
- (void)invalidateUserFonts;	// IMP=0x0000000100003d44
@property(readonly, nonatomic) _Bool isUserFontInstalled;
- (id)init;	// IMP=0x0000000100003bac
- (void)setup;	// IMP=0x000000010000c83c
- (void)setupForBlacklistUpdatedNotification;	// IMP=0x000000010000c368
- (id)assetHandlerQueue;	// IMP=0x000000010000c2f8
- (void)setupForDistributedNotifications;	// IMP=0x000000010000bef4
- (void)synchronizeFontProviders;	// IMP=0x000000010000bebc

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

