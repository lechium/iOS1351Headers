//
//     Generated by classdumpios 1.0.1 (64 bit) (iOS port by DreamDevLost)(Debug version compiled Sep 26 2020 13:48:20).
//
//  Copyright (C) 1997-2019 Steve Nygard.
//

#import <objc/NSObject.h>

@class CKContainer, CKDatabase, NSOperationQueue, NSString;
@protocol NSObject;

@interface MBCKDatabaseManager : NSObject
{
    _Bool _isSetup;	// 8 = 0x8
    NSString *_containerID;	// 16 = 0x10
    long long _requestsToSupportBudget;	// 24 = 0x18
    CKContainer *_container;	// 32 = 0x20
    CKContainer *_containerWithZoneWidePCS;	// 40 = 0x28
    NSOperationQueue *_operationQueue;	// 48 = 0x30
    id <NSObject> _accountObserver;	// 56 = 0x38
}

+ (_Bool)fetchDeviceToDeviceEncryptionSupportedByAccount:(_Bool *)arg1 error:(id *)arg2;	// IMP=0x00000001000d0f9c
+ (_Bool)isSyncZoneFetched;	// IMP=0x00000001000cf20c
+ (id)zoneIDOfType:(unsigned long long)arg1;	// IMP=0x00000001000cf044
+ (id)syncZoneID;	// IMP=0x00000001000cefa0
+ (id)defaultZoneID;	// IMP=0x00000001000ceeec
+ (id)sharedManagerWithError:(id *)arg1;	// IMP=0x00000001000ce2d8
+ (id)sharedManager;	// IMP=0x00000001000ce2c0
- (void).cxx_destruct;	// IMP=0x00000001000d1644
@property(retain, nonatomic) id <NSObject> accountObserver; // @synthesize accountObserver=_accountObserver;
@property(retain, nonatomic) NSOperationQueue *operationQueue; // @synthesize operationQueue=_operationQueue;
@property(retain) CKContainer *containerWithZoneWidePCS; // @synthesize containerWithZoneWidePCS=_containerWithZoneWidePCS;
@property(retain) CKContainer *container; // @synthesize container=_container;
@property(nonatomic) long long requestsToSupportBudget; // @synthesize requestsToSupportBudget=_requestsToSupportBudget;
@property _Bool isSetup; // @synthesize isSetup=_isSetup;
@property(copy, nonatomic) NSString *containerID; // @synthesize containerID=_containerID;
- (void)submitCKEventMetric:(id)arg1 completionHandler:(CDUnknownBlockType)arg2;	// IMP=0x00000001000d0f14
- (void)addDatabaseOperation:(id)arg1 policy:(id)arg2 operationGroup:(id)arg3;	// IMP=0x00000001000d0e58
- (void)_configureCKOperation:(id)arg1 policy:(id)arg2 operationGroup:(id)arg3;	// IMP=0x00000001000d0c28
- (id)_configureModifyRecordsOperation:(id)arg1;	// IMP=0x00000001000d07b0
- (_Bool)resetDatabaseWithError:(id *)arg1;	// IMP=0x00000001000d073c
- (_Bool)resetDatabaseWithPolicy:(id)arg1 operationGroup:(id)arg2 error:(id *)arg3;	// IMP=0x00000001000d0194
- (void)setupWithCompletion:(CDUnknownBlockType)arg1;	// IMP=0x00000001000d0118
- (void)setupWithPolicy:(id)arg1 operationGroup:(id)arg2 completion:(CDUnknownBlockType)arg3;	// IMP=0x00000001000cfee8
- (_Bool)setupSyncZoneWithPolicy:(id)arg1 operationGroup:(id)arg2 error:(id *)arg3;	// IMP=0x00000001000cfd2c
- (void)_setupSyncZoneWithPolicy:(id)arg1 operationGroup:(id)arg2 completion:(CDUnknownBlockType)arg3;	// IMP=0x00000001000cf258
@property(nonatomic) _Bool shouldSupportBudgeting;
@property(readonly, nonatomic) CKDatabase *databaseWithZoneWidePCS;
@property(readonly, nonatomic) CKDatabase *database;
- (void)dealloc;	// IMP=0x00000001000ceb84
- (id)init;	// IMP=0x00000001000ce604

@end

