//
//     Generated by classdumpios 1.0.1 (64 bit) (iOS port by DreamDevLost)(Debug version compiled Sep 26 2020 13:48:20).
//
//  Copyright (C) 1997-2019 Steve Nygard.
//

#import <MobileBackup/MBEngine.h>

#import "MBDeviceTransferProgressModelDelegate-Protocol.h"

@class MBConnection, MBDeviceLockAssertion, MBDeviceTransferProgressModel, MBDriveBackupEngine, MBDriveSettingsContext, MBPeerInitRequest, MBPeerTransferDrive, MBPowerAssertion, NSObject, NSString, RPFileTransferSession;
@protocol MBServiceManagerDeviceTransferDelegate, OS_dispatch_group, OS_dispatch_queue, OS_dispatch_semaphore, OS_dispatch_source, OS_os_transaction;

@interface MBSourceDeviceTransferEngine : MBEngine <MBDeviceTransferProgressModelDelegate>
{
    _Atomic _Bool _canceled;	// 56 = 0x38
    _Atomic _Bool _finished;	// 57 = 0x39
    _Atomic _Bool _peerConnectedOnce;	// 58 = 0x3a
    _Atomic _Bool _peerConnected;	// 59 = 0x3b
    _Atomic _Bool _trackPeerConnectionStatus;	// 60 = 0x3c
    _Atomic _Bool _receivedDoneMessage;	// 61 = 0x3d
    unsigned long long _uploadBatchSize;	// 64 = 0x40
    unsigned long long _concurrentUploadBatchCount;	// 72 = 0x48
    MBConnection *_connection;	// 80 = 0x50
    id <MBServiceManagerDeviceTransferDelegate> _delegate;	// 88 = 0x58
    CDUnknownBlockType _completionHandler;	// 96 = 0x60
    double _startTime;	// 104 = 0x68
    NSObject<OS_dispatch_queue> *_queue;	// 112 = 0x70
    NSObject<OS_os_transaction> *_transaction;	// 120 = 0x78
    NSObject<OS_dispatch_semaphore> *_connectSemaphore;	// 128 = 0x80
    NSObject<OS_dispatch_source> *_disconnectTimer;	// 136 = 0x88
    NSObject<OS_dispatch_group> *_peerTaskGroup;	// 144 = 0x90
    MBPeerTransferDrive *_transferDrive;	// 152 = 0x98
    MBDeviceTransferProgressModel *_progressModel;	// 160 = 0xa0
    MBDeviceLockAssertion *_deviceLockAssertion;	// 168 = 0xa8
    MBPowerAssertion *_powerAssertion;	// 176 = 0xb0
    RPFileTransferSession *_fileTransferSession;	// 184 = 0xb8
    MBDriveBackupEngine *_driveBackupEngine;	// 192 = 0xc0
    MBPeerInitRequest *_peerInitRequest;	// 200 = 0xc8
    MBDriveSettingsContext *_driveSettingsContext;	// 208 = 0xd0
}

- (void).cxx_destruct;	// IMP=0x000000010010bd88
@property(retain, nonatomic) MBDriveSettingsContext *driveSettingsContext; // @synthesize driveSettingsContext=_driveSettingsContext;
@property(retain) MBPeerInitRequest *peerInitRequest; // @synthesize peerInitRequest=_peerInitRequest;
@property(retain) MBDriveBackupEngine *driveBackupEngine; // @synthesize driveBackupEngine=_driveBackupEngine;
@property(retain, nonatomic) RPFileTransferSession *fileTransferSession; // @synthesize fileTransferSession=_fileTransferSession;
@property(retain, nonatomic) MBPowerAssertion *powerAssertion; // @synthesize powerAssertion=_powerAssertion;
@property(retain, nonatomic) MBDeviceLockAssertion *deviceLockAssertion; // @synthesize deviceLockAssertion=_deviceLockAssertion;
@property(readonly) MBDeviceTransferProgressModel *progressModel; // @synthesize progressModel=_progressModel;
@property(retain) MBPeerTransferDrive *transferDrive; // @synthesize transferDrive=_transferDrive;
@property(retain, nonatomic) NSObject<OS_dispatch_group> *peerTaskGroup; // @synthesize peerTaskGroup=_peerTaskGroup;
@property(retain, nonatomic) NSObject<OS_dispatch_source> *disconnectTimer; // @synthesize disconnectTimer=_disconnectTimer;
@property(retain, nonatomic) NSObject<OS_dispatch_semaphore> *connectSemaphore; // @synthesize connectSemaphore=_connectSemaphore;
@property(retain, nonatomic) NSObject<OS_os_transaction> *transaction; // @synthesize transaction=_transaction;
@property(retain, nonatomic) NSObject<OS_dispatch_queue> *queue; // @synthesize queue=_queue;
@property(nonatomic) double startTime; // @synthesize startTime=_startTime;
@property(copy, nonatomic) CDUnknownBlockType completionHandler; // @synthesize completionHandler=_completionHandler;
@property(nonatomic) __weak id <MBServiceManagerDeviceTransferDelegate> delegate; // @synthesize delegate=_delegate;
@property(retain, nonatomic) MBConnection *connection; // @synthesize connection=_connection;
- (void)updatedTotalProgress:(id)arg1;	// IMP=0x000000010010ba04
- (void)resume;	// IMP=0x000000010010ba00
- (void)_cancelBackupEngine;	// IMP=0x000000010010b9b8
- (void)_cleanUpBackupEngine;	// IMP=0x000000010010b800
- (id)_backupEngineWithPreflightRequest:(id)arg1;	// IMP=0x000000010010b5d8
- (void)_setUpMessaging;	// IMP=0x0000000100108ff4
- (id)_handleError:(id)arg1;	// IMP=0x0000000100108f68
- (void)_enableInfraWiFi;	// IMP=0x0000000100108e2c
- (void)_disableInfraWiFi;	// IMP=0x0000000100108cf0
- (_Bool)_setUpFileTransferSessionWithError:(id *)arg1;	// IMP=0x0000000100108664
- (void)_handleFileTransferSessionProgress:(id)arg1;	// IMP=0x00000001001083b0
- (void)_stopTrackingPeerConnectionStatus;	// IMP=0x000000010010829c
- (void)_startTrackingPeerConnectionStatus;	// IMP=0x0000000100108188
- (_Bool)_waitForControlConnectionWithBlock:(CDUnknownBlockType)arg1;	// IMP=0x0000000100108020
- (void)_signalControlConnectionStarted;	// IMP=0x0000000100107fe0
- (void)_cancelDisconnectTimer;	// IMP=0x0000000100107ee0
- (void)_startDisconnectTimer;	// IMP=0x0000000100107bf8
- (_Bool)_setUpWithError:(id *)arg1;	// IMP=0x0000000100107b3c
- (void)start;	// IMP=0x00000001001079a4
- (void)_sendDoneMessageWithError:(id)arg1;	// IMP=0x0000000100107534
- (void)cancel;	// IMP=0x00000001001073d8
@property(readonly, nonatomic) _Bool isFinished;
@property(readonly, nonatomic) _Bool isCanceled;
- (void)_finishWithError:(id)arg1;	// IMP=0x00000001001069a0
- (int)engineType;	// IMP=0x0000000100106998
- (_Bool)_updateOpenFdsLimit:(unsigned long long)arg1;	// IMP=0x00000001001066cc
- (void)dealloc;	// IMP=0x000000010010662c
- (id)initWithSessionInfo:(id)arg1;	// IMP=0x0000000100106030

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

