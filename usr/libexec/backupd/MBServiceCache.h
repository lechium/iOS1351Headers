//
//     Generated by classdumpios 1.0.1 (64 bit) (iOS port by DreamDevLost)(Debug version compiled Sep 26 2020 13:48:20).
//
//  Copyright (C) 1997-2019 Steve Nygard.
//

#import <objc/NSObject.h>

#import "MBSCacheLikeObject-Protocol.h"

@class MBDomainManager, MBServiceConfiguration, NSMutableDictionary, NSMutableSet, NSString;

@interface MBServiceCache : NSObject <MBSCacheLikeObject>
{
    NSString *_path;	// 8 = 0x8
    struct sqlite3 *_db;	// 16 = 0x10
    long long _openCount;	// 24 = 0x18
    _Bool _corrupt;	// 32 = 0x20
    MBServiceConfiguration *_configuration;	// 40 = 0x28
    _Bool _configurationUpToDate;	// 48 = 0x30
    MBDomainManager *_domainManager;	// 56 = 0x38
    NSMutableSet *_disabledDomainNames;	// 64 = 0x40
    NSMutableDictionary *_stmtsBySQL;	// 72 = 0x48
    NSMutableDictionary *_countAndTimeBySQL;	// 80 = 0x50
    NSMutableSet *_upToDateBackupUDIDs;	// 88 = 0x58
}

+ (id)cacheWithPath:(id)arg1;	// IMP=0x0000000100125e4c
+ (id)systemPath;	// IMP=0x0000000100125e28
@property(retain, nonatomic) MBDomainManager *domainManager; // @synthesize domainManager=_domainManager;
- (id)keyBagInfoForBackupUDID:(id)arg1;	// IMP=0x0000000100132174
- (void)addKeyBagInfo:(id)arg1 forBackupUDID:(id)arg2;	// IMP=0x0000000100132090
- (void)setKeyBagInfo:(id)arg1 forBackupUDID:(id)arg2;	// IMP=0x0000000100131e64
- (void)setPlaceholderResourceRelativePaths:(id)arg1 lastModfied:(long long)arg2 forBundleID:(id)arg3;	// IMP=0x0000000100131c68
- (id)relativePathsOfPlaceholderResourcesWithBundleID:(id)arg1 lastModified:(long long)arg2;	// IMP=0x0000000100131b48
- (id)restoreFailuresForDataClass:(id)arg1 assetType:(id)arg2 range:(struct _NSRange)arg3;	// IMP=0x000000010013184c
- (unsigned long long)countOfRestoreFailuresForDataclass:(id)arg1 assetType:(id)arg2;	// IMP=0x0000000100131730
- (void)addRestoreFailure:(id)arg1;	// IMP=0x00000001001315b0
- (void)removeAllProtectionClassesToRetore;	// IMP=0x0000000100131568
- (void)setProtectionClass:(int)arg1 toRestoreForDomainName:(id)arg2 relativePath:(id)arg3;	// IMP=0x0000000100131478
- (id)protectionClassesToRestoreByPathWithOffset:(unsigned long long)arg1 limit:(unsigned long long)arg2;	// IMP=0x000000010013116c
- (_Bool)restoreFilesExistForDomainName:(id)arg1 backupUDID:(id)arg2 size:(unsigned long long *)arg3;	// IMP=0x0000000100130f94
- (_Bool)restoreFileExistsWithDomainName:(id)arg1 relativePath:(id)arg2 backupUDID:(id)arg3;	// IMP=0x0000000100130d70
- (id)pathsToRestoreForDomain:(id)arg1 absolutePath:(id)arg2 pendingOnly:(_Bool)arg3 backupUDID:(id)arg4 range:(struct _NSRange)arg5;	// IMP=0x0000000100130b3c
- (id)filesToRestoreForDomainName:(id)arg1 relativePath:(id)arg2 pendingOnly:(_Bool)arg3 backupUDID:(id)arg4 range:(struct _NSRange)arg5;	// IMP=0x0000000100130874
- (void)prioritizeRestoreFileWithFileID:(id)arg1;	// IMP=0x00000001001307fc
- (void)setState:(int)arg1 forRestoreID:(unsigned long long)arg2;	// IMP=0x0000000100130774
- (void)setState:(int)arg1 forFileID:(id)arg2 restoreID:(unsigned long long)arg3;	// IMP=0x00000001001306c0
- (void)setRestoreID:(unsigned long long)arg1 forDomainName:(id)arg2 relativePath:(id)arg3 backupUDID:(id)arg4;	// IMP=0x00000001001305fc
- (void)setRestoreID:(unsigned long long)arg1 forRestoreFile:(id)arg2;	// IMP=0x0000000100130530
- (void)addRestoreFile:(id)arg1;	// IMP=0x0000000100130294
- (id)restoreFileForItemID:(unsigned long long)arg1;	// IMP=0x00000001001301f8
- (id)restoreFileForFileID:(id)arg1;	// IMP=0x0000000100130148
- (id)restoreFilesForSnapshotID:(unsigned long long)arg1 backupUDID:(id)arg2 restoreID:(unsigned long long)arg3 pendingOnly:(_Bool)arg4 offset:(unsigned long long)arg5 limit:(unsigned long long)arg6;	// IMP=0x0000000100130000
- (id)restoreFilesForBackupUDID:(id)arg1 offset:(unsigned long long)arg2 limit:(unsigned long long)arg3;	// IMP=0x000000010012ff40
- (void)restoreFilesCount:(unsigned long long *)arg1 size:(unsigned long long *)arg2 forRestoreID:(unsigned long long)arg3 backupUDID:(id)arg4;	// IMP=0x000000010012fe68
- (id)_restoreFilesWithStmt:(id)arg1;	// IMP=0x000000010012fdc4
- (id)_restoreFileWithStmt:(id)arg1;	// IMP=0x000000010012fc84
- (_Bool)containsFailedRestoreFilesForRestoreID:(unsigned long long)arg1;	// IMP=0x000000010012fbf0
- (_Bool)containsRestoreFilesWithState:(int)arg1 forRestoreID:(unsigned long long)arg2;	// IMP=0x000000010012fb38
- (_Bool)containsRestoreFilesForRestoreID:(unsigned long long)arg1;	// IMP=0x000000010012faa4
- (void)setRestoreBackupLastModified:(long long)arg1;	// IMP=0x000000010012fa48
- (long long)restoreBackupLastModified;	// IMP=0x000000010012fa1c
- (void)setRestoreSnapshotID:(long long)arg1;	// IMP=0x000000010012f9c0
- (long long)restoreSnapshotID;	// IMP=0x000000010012f994
- (void)setRestoreBackupUDID:(id)arg1;	// IMP=0x000000010012f980
- (id)restoreBackupUDID;	// IMP=0x000000010012f96c
- (void)removeAllRestores;	// IMP=0x000000010012f924
- (void)setRestoreID:(unsigned long long)arg1 forType:(int)arg2 value:(id)arg3;	// IMP=0x000000010012f788
- (id)restoreModeForBackgroundAppWithRestoreID:(unsigned long long)arg1;	// IMP=0x000000010012f6bc
- (unsigned long long)restoreIDForMode:(id)arg1;	// IMP=0x000000010012f474
- (void)removeAllFileEncryptionKeys;	// IMP=0x000000010012f42c
- (void)removeFileEncryptionKeyForInodeNumber:(unsigned long long)arg1;	// IMP=0x000000010012f3c8
- (void)setFileEncryptionKey:(id)arg1 forInodeNumber:(unsigned long long)arg2;	// IMP=0x000000010012f340
- (id)encryptionKeyForFileWithInodeNumber:(unsigned long long)arg1;	// IMP=0x000000010012f2b0
- (void)removeAllFilesMissingEncryptionKey;	// IMP=0x000000010012f268
- (void)removeFileMissingEncryptionKeyWithPath:(id)arg1;	// IMP=0x000000010012f204
- (void)addFileMissingEncryptionKeyWithPath:(id)arg1;	// IMP=0x000000010012f1a0
- (id)pathsForFilesMissingEncryptionKeyWithOffset:(unsigned long long)arg1 limit:(unsigned long long)arg2;	// IMP=0x000000010012f0a0
- (_Bool)areFilesMissingEncryptionKey;	// IMP=0x000000010012f028
- (void)removeAllFileChanges;	// IMP=0x000000010012efe0
- (void)updateFileChangesAfterRemovingDomainName:(id)arg1;	// IMP=0x000000010012ef10
- (void)updateFileChangesAfterCommittingSnapshot;	// IMP=0x000000010012ee50
- (void)fileChangeCount:(unsigned long long *)arg1 size:(unsigned long long *)arg2;	// IMP=0x000000010012edb8
- (void)setResult:(int)arg1 forFileChangeID:(id)arg2;	// IMP=0x000000010012eca0
- (void)addFileChange:(id)arg1;	// IMP=0x000000010012e92c
- (id)fileChangeIDsWithResult:(int)arg1 offset:(unsigned long long)arg2 limit:(unsigned long long)arg3;	// IMP=0x000000010012e7e8
- (id)fileChangeEnumerator;	// IMP=0x000000010012e7d0
- (id)_fileChangeFromStmt:(id)arg1;	// IMP=0x000000010012e578
- (void)verifyBackupUDID:(id)arg1 service:(id)arg2;	// IMP=0x000000010012e0bc
- (void)repair;	// IMP=0x000000010012defc
- (_Bool)refreshForBackupUDID:(id)arg1 service:(id)arg2 deleted:(_Bool *)arg3 error:(id *)arg4;	// IMP=0x000000010012c8d0
- (_Bool)_rebuildSnapshot:(id)arg1 backupUDID:(id)arg2 service:(id)arg3 error:(id *)arg4;	// IMP=0x000000010012c378
- (void)forceRefreshForBackupUDID:(id)arg1;	// IMP=0x000000010012c314
- (_Bool)isRefreshNeededForBackupUDID:(id)arg1;	// IMP=0x000000010012c2a4
- (id)dateOfLastRefreshForBackupUDID:(id)arg1;	// IMP=0x000000010012c238
- (id)_lastRefreshPropertyKeyForBackupUDID:(id)arg1;	// IMP=0x000000010012c1e8
- (void)removeAllDisabledDomains;	// IMP=0x000000010012c18c
- (void)removeDisabledDomainNames:(id)arg1;	// IMP=0x000000010012c01c
- (void)addDisabledDomainNames:(id)arg1 restricted:(_Bool)arg2;	// IMP=0x000000010012be78
- (void)setDisabledDomainNames:(id)arg1 restrictedDomainNames:(id)arg2;	// IMP=0x000000010012bda8
- (_Bool)isDomainNameEnabled:(id)arg1;	// IMP=0x000000010012bd6c
- (id)_disabledDomainNames;	// IMP=0x000000010012bca4
- (id)domainInfoForName:(id)arg1 backupUDID:(id)arg2;	// IMP=0x000000010012bad4
- (id)activeDomainNamesForBackupUDID:(id)arg1;	// IMP=0x000000010012b980
- (id)domainNamesForBackupUDID:(id)arg1;	// IMP=0x000000010012b82c
- (unsigned long long)nextBackupSizeWithUDID:(id)arg1;	// IMP=0x000000010012b728
- (id)encryptionKeyForFileWithID:(id)arg1 backupUDID:(id)arg2;	// IMP=0x000000010012b664
- (id)deletedFileIDEnumeratorForBackupUDID:(id)arg1;	// IMP=0x000000010012b58c
- (id)encryptedFileIDEnumeratorForBackupUDID:(id)arg1;	// IMP=0x000000010012b4b4
- (id)fileIDEnumeratorForSnapshotID:(unsigned long long)arg1 backupUDID:(id)arg2;	// IMP=0x000000010012b3b8
- (id)_fileIDEnumeratorWithStmt:(id)arg1;	// IMP=0x000000010012b274
- (void)setCommitted:(_Bool)arg1 forFileID:(id)arg2 snapshotID:(unsigned long long)arg3 backupUDID:(id)arg4;	// IMP=0x000000010012b19c
- (void)removeFileID:(id)arg1 forSnapshotID:(unsigned long long)arg2 backupUDID:(id)arg3;	// IMP=0x000000010012b0e0
- (void)addFile:(id)arg1 snapshotID:(unsigned long long)arg2 backupUDID:(id)arg3 committed:(_Bool)arg4;	// IMP=0x000000010012a860
- (_Bool)encryptedFilesExistForBackupUDID:(id)arg1 keybagID:(long long)arg2;	// IMP=0x000000010012a728
- (_Bool)encryptedFilesExistForBackupUDID:(id)arg1;	// IMP=0x000000010012a614
- (id)fileForID:(id)arg1 snapshotID:(unsigned long long)arg2 backupUDID:(id)arg3;	// IMP=0x000000010012a43c
- (id)fileForID:(id)arg1 backupUDID:(id)arg2;	// IMP=0x000000010012a1b0
- (id)_fileWithStmt:(id)arg1;	// IMP=0x0000000100129d00
- (void)setLocalCommitted:(long long)arg1 snapshotID:(unsigned long long)arg2 backupUDID:(id)arg3;	// IMP=0x0000000100129c5c
- (long long)localCommittedForSnapshotID:(unsigned long long)arg1 backupUDID:(id)arg2;	// IMP=0x0000000100129b74
- (void)setStale:(_Bool)arg1 forSnapshotID:(unsigned long long)arg2 backupUDID:(id)arg3;	// IMP=0x0000000100129ad0
- (_Bool)isStaleSnapshotID:(unsigned long long)arg1 backupUDID:(id)arg2;	// IMP=0x00000001001299e4
- (void)setCommitted:(long long)arg1 forSnapshotID:(unsigned long long)arg2 backupUDID:(id)arg3;	// IMP=0x0000000100129838
- (void)setLastModified:(long long)arg1 forSnapshotID:(unsigned long long)arg2 backupUDID:(id)arg3;	// IMP=0x0000000100129714
- (_Bool)areAllFilesCommittedForSnapshotID:(unsigned long long)arg1 backupUDID:(id)arg2;	// IMP=0x0000000100129628
- (void)mergeSnapshotForID:(unsigned long long)arg1 backupUDID:(id)arg2 lastModified:(long long)arg3;	// IMP=0x000000010012909c
- (void)removeSnapshotForID:(unsigned long long)arg1 backupUDID:(id)arg2 lastModified:(long long)arg3;	// IMP=0x0000000100128bac
- (void)_removeSnapshotForID:(unsigned long long)arg1 backupUDID:(id)arg2;	// IMP=0x0000000100128b24
- (void)addSnapshot:(id)arg1 backupUDID:(id)arg2;	// IMP=0x00000001001288e0
- (id)snapshotsForBackupUDID:(id)arg1;	// IMP=0x00000001001286f4
- (id)snapshotForSnapshotID:(unsigned long long)arg1 backupUDID:(id)arg2;	// IMP=0x000000010012863c
- (id)_snapshotWithStmt:(id)arg1;	// IMP=0x0000000100128534
- (void)removeAllBackups;	// IMP=0x00000001001284ec
- (void)removeBackupforUDID:(id)arg1;	// IMP=0x0000000100128408
- (void)setLastModified:(long long)arg1 forBackupUDID:(id)arg2;	// IMP=0x0000000100128300
- (void)removeDomainName:(id)arg1 backupUDID:(id)arg2 lastModified:(long long)arg3;	// IMP=0x00000001001280ec
- (void)addBackup:(id)arg1 lastModified:(long long)arg2;	// IMP=0x0000000100127ec4
- (void)keybagUUID:(id *)arg1 keybagID:(unsigned int *)arg2 forBackupUDID:(id)arg3;	// IMP=0x0000000100127e28
- (id)backupForUDID:(id)arg1 lastModified:(long long *)arg2;	// IMP=0x0000000100127bc4
- (void)removeAccount;	// IMP=0x0000000100127b70
- (void)setConfiguration:(id)arg1;	// IMP=0x00000001001279d0
- (id)configuration;	// IMP=0x0000000100127858
- (id)creationDate;	// IMP=0x0000000100127808
- (void)removePropertyForKey:(id)arg1;	// IMP=0x0000000100127724
- (void)setProperty:(id)arg1 forKey:(id)arg2;	// IMP=0x00000001001275f4
- (id)propertyForKey:(id)arg1;	// IMP=0x00000001001274e4
- (void)vacuum;	// IMP=0x00000001001274d0
- (void)analyze;	// IMP=0x00000001001274bc
- (void)rollback;	// IMP=0x00000001001274a8
- (void)end;	// IMP=0x0000000100127494
- (void)begin;	// IMP=0x0000000100127480
- (void)close;	// IMP=0x0000000100127318
- (void)open;	// IMP=0x0000000100126dd8
- (long long)_lastInsertRowID;	// IMP=0x0000000100126d98
- (void)_finalizeAll;	// IMP=0x0000000100126d88
- (id)_prepare:(id)arg1;	// IMP=0x0000000100126bfc
- (void)_exec:(id)arg1;	// IMP=0x0000000100126b18
- (void)_logProfile;	// IMP=0x0000000100126690
- (void)_profile:(id)arg1 time:(double)arg2;	// IMP=0x0000000100126500
- (void)_raise:(id)arg1;	// IMP=0x0000000100126290
- (void)_remove;	// IMP=0x00000001001260bc
- (void)dealloc;	// IMP=0x0000000100126038
- (id)initWithPath:(id)arg1;	// IMP=0x0000000100125e84

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

