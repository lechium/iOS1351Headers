//
//     Generated by classdumpios 1.0.1 (64 bit) (iOS port by DreamDevLost)(Debug version compiled Sep 26 2020 13:48:20).
//
//  Copyright (C) 1997-2019 Steve Nygard.
//

#import <MobileBackup/MBEngine.h>

@class CKOperationGroup, MBAggregateDictionary, MBCKCache, MBCKDevice, MBCKEncryptionManager, MBCKManager, MBCKOperationPolicy, MBCKOperationTracker, MBCKProgressModel, MBCKProperties, MBCKRetryStrategy, MBCKSettingsContext, MBServiceReachabilityMonitor, NSError, NSMutableDictionary, NSMutableString, NSString;

@interface MBCKEngine : MBEngine
{
    MBAggregateDictionary *_aggregateDictionary;	// 56 = 0x38
    MBCKProgressModel *_progressModel;	// 64 = 0x40
    MBCKRetryStrategy *_retryStrategy;	// 72 = 0x48
    MBCKRetryStrategy *_multistateRetryStrategy;	// 80 = 0x50
    _Bool _isCancelled;	// 88 = 0x58
    _Bool _isFinished;	// 89 = 0x59
    _Bool _shouldAdvanceState;	// 90 = 0x5a
    _Bool _sendStatusOnSuccess;	// 91 = 0x5b
    _Bool _verifyProgressModel;	// 92 = 0x5c
    _Bool _usePrivilegedManifestDownloadEndpoint;	// 93 = 0x5d
    MBCKProperties *properties;	// 96 = 0x60
    MBCKOperationPolicy *_ckOperationPolicy;	// 104 = 0x68
    CKOperationGroup *_ckOperationGroup;	// 112 = 0x70
    MBCKOperationTracker *_ckOperationTracker;	// 120 = 0x78
    NSError *_engineError;	// 128 = 0x80
    NSError *_injectedError;	// 136 = 0x88
    MBCKSettingsContext *_context;	// 144 = 0x90
    MBCKCache *_cache;	// 152 = 0x98
    MBServiceReachabilityMonitor *_reachabilityMonitor;	// 160 = 0xa0
    MBCKDevice *_device;	// 168 = 0xa8
    MBCKEncryptionManager *_encryptionManager;	// 176 = 0xb0
    MBCKManager *_serviceManager;	// 184 = 0xb8
    NSMutableString *_stateDescription;	// 192 = 0xc0
    NSMutableDictionary *_performanceStatistics;	// 200 = 0xc8
    long long _qualityOfService;	// 208 = 0xd0
    CDUnknownBlockType _stateChange;	// 216 = 0xd8
    NSError *_cancelError;	// 224 = 0xe0
}

- (void).cxx_destruct;	// IMP=0x00000001000363b8
@property(retain) NSError *cancelError; // @synthesize cancelError=_cancelError;
@property(nonatomic) _Bool usePrivilegedManifestDownloadEndpoint; // @synthesize usePrivilegedManifestDownloadEndpoint=_usePrivilegedManifestDownloadEndpoint;
@property(nonatomic) _Bool verifyProgressModel; // @synthesize verifyProgressModel=_verifyProgressModel;
@property(copy, nonatomic) CDUnknownBlockType stateChange; // @synthesize stateChange=_stateChange;
@property(nonatomic) long long qualityOfService; // @synthesize qualityOfService=_qualityOfService;
@property(readonly, nonatomic) NSMutableDictionary *performanceStatistics; // @synthesize performanceStatistics=_performanceStatistics;
@property(readonly, nonatomic) NSMutableString *stateDescription; // @synthesize stateDescription=_stateDescription;
@property(nonatomic) _Bool sendStatusOnSuccess; // @synthesize sendStatusOnSuccess=_sendStatusOnSuccess;
@property(nonatomic) __weak MBCKManager *serviceManager; // @synthesize serviceManager=_serviceManager;
@property(retain, nonatomic) MBCKEncryptionManager *encryptionManager; // @synthesize encryptionManager=_encryptionManager;
@property(retain, nonatomic) MBCKDevice *device; // @synthesize device=_device;
@property(retain, nonatomic) MBServiceReachabilityMonitor *reachabilityMonitor; // @synthesize reachabilityMonitor=_reachabilityMonitor;
@property(retain, nonatomic) MBCKCache *cache; // @synthesize cache=_cache;
@property(readonly, nonatomic) MBCKSettingsContext *context; // @synthesize context=_context;
@property(nonatomic) _Bool shouldAdvanceState; // @synthesize shouldAdvanceState=_shouldAdvanceState;
@property(retain, nonatomic) NSError *injectedError; // @synthesize injectedError=_injectedError;
@property(retain, nonatomic) NSError *engineError; // @synthesize engineError=_engineError;
@property(nonatomic) _Bool isFinished; // @synthesize isFinished=_isFinished;
@property _Bool isCancelled; // @synthesize isCancelled=_isCancelled;
@property(retain) MBCKOperationTracker *ckOperationTracker; // @synthesize ckOperationTracker=_ckOperationTracker;
@property(retain, nonatomic) CKOperationGroup *ckOperationGroup; // @synthesize ckOperationGroup=_ckOperationGroup;
@property(retain, nonatomic) MBCKOperationPolicy *ckOperationPolicy; // @synthesize ckOperationPolicy=_ckOperationPolicy;
@property(retain, nonatomic) MBCKProperties *properties; // @synthesize properties;
- (_Bool)fetchDeviceToDeviceEncryptionSupportedByAccount:(_Bool *)arg1 error:(id *)arg2;	// IMP=0x00000001000360d4
- (_Bool)isInternetReachableViaWiFi;	// IMP=0x0000000100036088
- (void)runBlockOrFail:(CDUnknownBlockType)arg1;	// IMP=0x0000000100035c04
- (void)makeStateTransition;	// IMP=0x0000000100035b98
- (_Bool)shouldRetryAfterError:(id)arg1;	// IMP=0x0000000100035b74
- (_Bool)runWithError:(id *)arg1;	// IMP=0x0000000100035b50
- (void)cleanupAfterError:(id)arg1;	// IMP=0x0000000100035b4c
- (_Bool)setupWithError:(id *)arg1;	// IMP=0x0000000100035a34
- (_Bool)refreshCacheWithError:(id *)arg1;	// IMP=0x00000001000334c4
- (_Bool)_verifySnapshot:(id)arg1 operationTracker:(id)arg2 shouldOutput:(_Bool)arg3;	// IMP=0x0000000100032adc
- (_Bool)_refreshSnapshot:(id)arg1 operationTracker:(id)arg2 shouldSaveSnapshotToCache:(_Bool)arg3 error:(id *)arg4;	// IMP=0x0000000100031250
- (_Bool)releaseLockWithError:(id *)arg1;	// IMP=0x0000000100031248
- (_Bool)lockWithError:(id *)arg1;	// IMP=0x0000000100031240
- (_Bool)handleCancelation:(id *)arg1;	// IMP=0x00000001000311b0
- (void)cancel;	// IMP=0x00000001000311a0
- (void)cancelWithError:(id)arg1;	// IMP=0x0000000100030f64
- (void)run;	// IMP=0x0000000100030240
@property(readonly, nonatomic) NSString *powerAssertionName;
@property(readonly, nonatomic) MBCKRetryStrategy *multistateRetryStrategy;
@property(readonly, nonatomic) MBCKRetryStrategy *retryStrategy;
@property(readonly, nonatomic) MBCKProgressModel *progressModel;
- (id)restoringBundleID;	// IMP=0x000000010002fdf0
@property(retain, nonatomic) MBAggregateDictionary *aggregateDictionary;
- (_Bool)encrypted;	// IMP=0x000000010002fcf0
- (_Bool)shouldCommitIfPossible;	// IMP=0x000000010002fce8
@property(readonly, nonatomic) _Bool hasError;
- (int)engineType;	// IMP=0x000000010002fca4
- (id)initWithSettingsContext:(id)arg1 debugContext:(id)arg2 domainManager:(id)arg3;	// IMP=0x000000010002fa98

@end

