//
//     Generated by classdumpios 1.0.1 (64 bit) (iOS port by DreamDevLost)(Debug version compiled Sep 26 2020 13:48:20).
//
//  Copyright (C) 1997-2019 Steve Nygard.
//

#import <MobileBackup/MBManager.h>

#import "MBServiceAccountDelegate-Protocol.h"
#import "MBServiceDelegate-Protocol.h"
#import "MBServiceLockManagerDelegate-Protocol.h"
#import "MBServiceManagerClient-Protocol.h"
#import "MBServiceReachabilityMonitorDelegate-Protocol.h"

@class MBDebugContext, MBServiceEncryptionManager, MBServiceLockManager, MBServiceReachabilityMonitor, MBServiceRestoreSession, MBStateInfo, NSDictionary, NSMapTable, NSMutableArray, NSMutableSet, NSObject, NSString;
@protocol OS_dispatch_group, OS_dispatch_queue, OS_dispatch_source, OS_os_transaction;

@interface MBServiceManager : MBManager <MBServiceManagerClient, MBServiceAccountDelegate, MBServiceDelegate, MBServiceLockManagerDelegate, MBServiceReachabilityMonitorDelegate>
{
    int _serviceState;	// 16 = 0x10
    NSObject<OS_dispatch_queue> *_stateQueue;	// 24 = 0x18
    NSObject<OS_dispatch_group> *_serviceGroup;	// 32 = 0x20
    MBStateInfo *_backupState;	// 40 = 0x28
    MBStateInfo *_restoreState;	// 48 = 0x30
    NSMutableArray *_engines;	// 56 = 0x38
    NSMapTable *_enginesByContext;	// 64 = 0x40
    NSMapTable *_restoreQosByContext;	// 72 = 0x48
    _Bool _scheduled;	// 80 = 0x50
    MBServiceRestoreSession *_restoreSession;	// 88 = 0x58
    NSDictionary *_restoreKeyBagsByID;	// 96 = 0x60
    int _obliterateToken;	// 104 = 0x68
    MBServiceReachabilityMonitor *_reachabilityMonitor;	// 112 = 0x70
    _Bool _notifyDisplayWifiTimerArmed;	// 120 = 0x78
    NSObject<OS_dispatch_queue> *_userNotificationQueue;	// 128 = 0x80
    struct __CFRunLoopTimer *_warnTimerRef;	// 136 = 0x88
    NSObject<OS_dispatch_source> *_lowDiskSource;	// 144 = 0x90
    _Bool _serverLoggingOverride;	// 152 = 0x98
    NSObject<OS_os_transaction> *_restoreTransaction;	// 160 = 0xa0
    _Bool _airTrafficDidFinishRestore;	// 168 = 0xa8
    _Bool _appDataDidFinishRestore;	// 169 = 0xa9
    MBServiceEncryptionManager *_serviceEncryptionManager;	// 176 = 0xb0
    MBServiceLockManager *_lockManager;	// 184 = 0xb8
    MBDebugContext *_debugContext;	// 192 = 0xc0
    NSMutableSet *_batchRestoreOps;	// 200 = 0xc8
}

+ (void)saveBackupStateInfo:(id)arg1;	// IMP=0x00000001000f3984
+ (id)loadBackupStateInfo;	// IMP=0x00000001000f3828
+ (void)saveRestoreStateInfo:(id)arg1;	// IMP=0x00000001000f2c5c
+ (id)loadRestoreStateInfo;	// IMP=0x00000001000f2b00
+ (id)sharedServiceManager;	// IMP=0x00000001000f2374
@property(nonatomic) _Bool appDataDidFinishRestore; // @synthesize appDataDidFinishRestore=_appDataDidFinishRestore;
@property(nonatomic) _Bool airTrafficDidFinishRestore; // @synthesize airTrafficDidFinishRestore=_airTrafficDidFinishRestore;
@property(retain, nonatomic) NSMutableSet *batchRestoreOps; // @synthesize batchRestoreOps=_batchRestoreOps;
@property(retain, nonatomic) MBDebugContext *debugContext; // @synthesize debugContext=_debugContext;
@property(retain, nonatomic) MBServiceLockManager *lockManager; // @synthesize lockManager=_lockManager;
@property(readonly, nonatomic) NSDictionary *restoreKeyBagsByID; // @synthesize restoreKeyBagsByID=_restoreKeyBagsByID;
@property(readonly, nonatomic) MBServiceRestoreSession *restoreSession; // @synthesize restoreSession=_restoreSession;
@property(readonly) int serviceState; // @synthesize serviceState=_serviceState;
- (void)startDataTransferWithPreflightInfo:(id)arg1 connection:(id)arg2 completion:(CDUnknownBlockType)arg3;	// IMP=0x00000001001019f4
- (void)startKeychainDataImportWithKeychainInfo:(id)arg1 connection:(id)arg2 completion:(CDUnknownBlockType)arg3;	// IMP=0x00000001001019e4
- (void)startKeychainDataTransferWithConnection:(id)arg1 completion:(CDUnknownBlockType)arg2;	// IMP=0x00000001001019d4
- (void)startKeychainTransferWithConnection:(id)arg1 completion:(CDUnknownBlockType)arg2;	// IMP=0x00000001001019c4
- (void)startPreflightWithConnection:(id)arg1 completion:(CDUnknownBlockType)arg2;	// IMP=0x00000001001019b4
- (void)cancelDeviceTransferWithConnection:(id)arg1;	// IMP=0x00000001001019b0
- (_Bool)resumeDeviceTransferWithTaskType:(long long)arg1 connection:(id)arg2 error:(id *)arg3;	// IMP=0x000000010010198c
- (_Bool)cancelDeviceTransferWithTaskType:(long long)arg1 connection:(id)arg2 error:(id *)arg3;	// IMP=0x0000000100101968
- (_Bool)startDeviceTransferWithTaskType:(long long)arg1 sessionInfo:(id)arg2 connection:(id)arg3 error:(id *)arg4;	// IMP=0x0000000100101944
- (void)retryAppDataDownloads;	// IMP=0x00000001001018c0
- (void)setAllowiTunesBackup:(_Bool)arg1;	// IMP=0x0000000100101748
- (_Bool)allowiTunesBackup;	// IMP=0x00000001001016e8
@property(readonly, copy) NSString *description;
- (void)_disableHyperLogging;	// IMP=0x00000001001013f0
- (void)_enableBackgroundHyperLogging;	// IMP=0x0000000100100a2c
- (void)_enableForegroundHyperLogging;	// IMP=0x00000001001009cc
- (_Bool)_shouldEnableHyperLogging;	// IMP=0x000000010010095c
- (_Bool)deleteItemFromBackupUDID:(id)arg1 snapshotID:(unsigned long long)arg2 domainName:(id)arg3 relativePath:(id)arg4 error:(id *)arg5;	// IMP=0x000000010010086c
- (_Bool)addFileToBackupUDID:(id)arg1 snapshotID:(unsigned long long)arg2 domainName:(id)arg3 relativePath:(id)arg4 fromPath:(id)arg5 error:(id *)arg6;	// IMP=0x0000000100100770
- (_Bool)extractItemFromBackupUDID:(id)arg1 snapshotID:(unsigned long long)arg2 domainName:(id)arg3 relativePath:(id)arg4 toPath:(id)arg5 connection:(id)arg6 error:(id *)arg7;	// IMP=0x0000000100100670
- (void)_performToolWithBackupUDID:(id)arg1 snapshotID:(unsigned long long)arg2 block:(CDUnknownBlockType)arg3;	// IMP=0x00000001001004c8
- (void)reachabilityMonitor:(id)arg1 didDetectWifiStatusChange:(_Bool)arg2;	// IMP=0x0000000100100184
- (void)_notifyDisplayWifi;	// IMP=0x00000001000fffb8
- (void)_obliterating;	// IMP=0x00000001000ffea4
- (void)lockManager:(id)arg1 failedToReleaseLockWithError:(id)arg2;	// IMP=0x00000001000ffe98
- (void)lockManagerDidReleaseLock:(id)arg1;	// IMP=0x00000001000ffe8c
- (void)serviceDidHoldLock:(id)arg1;	// IMP=0x00000001000ffe68
- (void)_runRestoreWithSettingsContext:(id)arg1 delegateContext:(id)arg2;	// IMP=0x00000001000fe750
- (void)stopTrackingCoordinatorWithBundleID:(id)arg1 success:(_Bool)arg2;	// IMP=0x00000001000fe740
- (void)updateProgressForCoordinatorWithBundleID:(id)arg1 progress:(double)arg2;	// IMP=0x00000001000fe730
- (_Bool)_startBackgroundRestoreWithSettingsContext:(id)arg1 delegateContext:(id)arg2 error:(id *)arg3;	// IMP=0x00000001000fe0ec
- (void)_prepareForBackgroundRestore;	// IMP=0x00000001000fe0a0
- (void)_cleanupRestoreDirectory;	// IMP=0x00000001000fdf18
- (void)_finalizeRestoreDirectory;	// IMP=0x00000001000fde2c
- (void)_alertUserOfIncompleteRestore;	// IMP=0x00000001000fdd18
- (void)_notifyRestoreCompleted;	// IMP=0x00000001000fda98
- (id)_settingsContextForBackgroundFileRestoreWithPath:(id)arg1 delegateContext:(id)arg2;	// IMP=0x00000001000fd900
- (id)_settingsContextForBackgroundAppRestoreWithBundleID:(id)arg1 errorCode:(int)arg2 delegateContext:(id)arg3;	// IMP=0x00000001000fd760
- (id)_settingsContextForForegroundRestoreWithBackupUDID:(id)arg1 snapshotID:(unsigned long long)arg2;	// IMP=0x00000001000fd6c8
- (id)_settingsContextForBackupUDID:(id)arg1;	// IMP=0x00000001000fd5b0
- (void)_clearDeferredDiscountingCameraRollQuota;	// IMP=0x00000001000fd598
- (void)_deferDiscountingCameraRollQuota;	// IMP=0x00000001000fd55c
- (_Bool)discountCameraRollQuotaForBackupUDID:(id)arg1 connection:(id)arg2 error:(id *)arg3;	// IMP=0x00000001000fd0b4
- (_Bool)discountCameraRollQuotaWithConnection:(id)arg1;	// IMP=0x00000001000fd078
- (_Bool)countCameraRollQuotaForBackupUDID:(id)arg1 error:(id *)arg2;	// IMP=0x00000001000fcff0
- (_Bool)countCameraRollQuota;	// IMP=0x00000001000fcfbc
- (void)repair;	// IMP=0x00000001000fcf38
- (id)getAppleIDsForBackupUDID:(id)arg1 snapshotID:(unsigned long long)arg2 activeAppleID:(id *)arg3 connection:(id)arg4 error:(id *)arg5;	// IMP=0x00000001000fcaac
- (void)setBackupEnabled:(_Bool)arg1 forDomainName:(id)arg2;	// IMP=0x00000001000fc8e8
- (_Bool)isBackupEnabledForDomainName:(id)arg1;	// IMP=0x00000001000fc7cc
- (_Bool)removeDomainName:(id)arg1 connection:(id)arg2 error:(id *)arg3;	// IMP=0x00000001000fc330
- (_Bool)_removeDomainName:(id)arg1 service:(id)arg2 error:(id *)arg3;	// IMP=0x00000001000fbe48
- (id)domainInfoList;	// IMP=0x00000001000fb7a4
- (id)domainInfoForName:(id)arg1;	// IMP=0x00000001000fb468
- (id)_domainInfoForName:(id)arg1 cache:(id)arg2 appManager:(id)arg3;	// IMP=0x00000001000fb2e0
- (unsigned long long)nextBackupSize;	// IMP=0x00000001000fb258
- (_Bool)startScanWithError:(id *)arg1;	// IMP=0x00000001000fb210
- (void)prioritizeRestoreFileWithPath:(id)arg1;	// IMP=0x00000001000fafb0
- (_Bool)restoreDataExistsForApplicationWithBundleID:(id)arg1 size:(unsigned long long *)arg2;	// IMP=0x00000001000fab68
- (_Bool)restoreFileExistsWithPath:(id)arg1;	// IMP=0x00000001000fa6c4
- (id)restoreFilesForDomain:(id)arg1 relativePath:(id)arg2 pendingOnly:(_Bool)arg3 range:(struct _NSRange)arg4 error:(id *)arg5;	// IMP=0x00000001000fa0c4
- (id)deviceBackup;	// IMP=0x00000001000fa018
- (id)_deviceBackupFromCache;	// IMP=0x00000001000f9ef4
- (void)insufficientFreeSpaceToRestore;	// IMP=0x00000001000f9d50
- (void)_finishedRestore;	// IMP=0x00000001000f97d8
- (void)cancelRestore;	// IMP=0x00000001000f97c8
- (void)finishRestore;	// IMP=0x00000001000f97b8
- (void)_finishRestore:(_Bool)arg1;	// IMP=0x00000001000f929c
- (_Bool)cancelApplicationRestoreWithBundleID:(id)arg1 error:(id *)arg2;	// IMP=0x00000001000f8e0c
- (_Bool)restoreApplicationWithBundleID:(id)arg1 failed:(_Bool)arg2 qos:(id)arg3 context:(id)arg4 error:(id *)arg5;	// IMP=0x00000001000f8ce8
- (_Bool)restoreBookWithPath:(id)arg1 context:(id)arg2 error:(id *)arg3;	// IMP=0x00000001000f8ccc
- (_Bool)_restoreBookWithPath:(id)arg1 range:(struct _NSRange)arg2 context:(id)arg3 error:(id *)arg4;	// IMP=0x00000001000f8588
- (_Bool)restoreFilesWithPaths:(id)arg1 context:(id)arg2 error:(id *)arg3;	// IMP=0x00000001000f82ec
- (_Bool)restoreFileWithPath:(id)arg1 context:(id)arg2 error:(id *)arg3;	// IMP=0x00000001000f829c
- (_Bool)startRestoreForBackupUDID:(id)arg1 snapshotID:(unsigned long long)arg2 connection:(id)arg3 error:(id *)arg4;	// IMP=0x00000001000f7d6c
- (id)restoreState;	// IMP=0x00000001000f7c00
- (id)filesForSnapshotID:(unsigned long long)arg1 backupUDID:(id)arg2 connection:(id)arg3 error:(id *)arg4;	// IMP=0x00000001000f7904
- (_Bool)startBackupWithReason:(long long)arg1 connection:(id)arg2 error:(id *)arg3;	// IMP=0x00000001000f78bc
- (id)getBackupListWithFiltering:(_Bool)arg1 connection:(id)arg2 error:(id *)arg3;	// IMP=0x00000001000f71d4
- (id)getBuddyDataStashForBackupUDID:(id)arg1 snapshotID:(unsigned long long)arg2 connection:(id)arg3 error:(id *)arg4;	// IMP=0x00000001000f714c
- (id)backgroundRestoreInfo;	// IMP=0x00000001000f70c4
- (id)backupState;	// IMP=0x00000001000f6fe4
- (void)_cancelAllBackgroundRestoreEngines;	// IMP=0x00000001000f6edc
- (void)cancelBackupEngineForContext:(id)arg1 error:(id)arg2;	// IMP=0x00000001000f6ed8
- (void)cancelEngineForContext:(id)arg1;	// IMP=0x00000001000f6d5c
- (void)cancelRestoreForContext:(id)arg1;	// IMP=0x00000001000f6bc0
- (_Bool)releaseLockWithBackupUDID:(id)arg1 owner:(id)arg2 connection:(id)arg3 error:(id *)arg4;	// IMP=0x00000001000f6a20
- (_Bool)acquireLockWithBackupUDID:(id)arg1 owner:(id)arg2 timeout:(double)arg3 connection:(id)arg4 error:(id *)arg5;	// IMP=0x00000001000f6864
- (_Bool)deleteSnapshotID:(unsigned long long)arg1 fromBackupUDID:(id)arg2 error:(id *)arg3;	// IMP=0x00000001000f64ac
- (_Bool)deleteBackupUDID:(id)arg1 connection:(id)arg2 error:(id *)arg3;	// IMP=0x00000001000f60a4
- (_Bool)deleteAccountWithError:(id *)arg1;	// IMP=0x00000001000f5fb0
- (void)syncBackupEnabledWithConnection:(id)arg1;	// IMP=0x00000001000f5ac0
- (void)keyBagIsUnlocked;	// IMP=0x00000001000f56e0
- (void)keyBagIsLocking;	// IMP=0x00000001000f5484
- (void)accountChanged:(id)arg1;	// IMP=0x00000001000f501c
- (void)_updateLockdownKeysForAccountState:(id)arg1;	// IMP=0x00000001000f4d8c
- (_Bool)_setBackupDisabledIfMissingFromAccount;	// IMP=0x00000001000f4b18
- (void)setBackupEnabled:(_Bool)arg1;	// IMP=0x00000001000f48b4
- (_Bool)isBackupEnabled;	// IMP=0x00000001000f4890
- (void)setRestoreQualityOfService:(long long)arg1 context:(id)arg2;	// IMP=0x00000001000f4880
- (id)reservedBackupSizeListWithConnection:(id)arg1 error:(id *)arg2;	// IMP=0x00000001000f485c
- (id)journalLastModifiedForBackupUUID:(id)arg1 connection:(id)arg2 error:(id *)arg3;	// IMP=0x00000001000f4838
- (id)journalForBackupUUID:(id)arg1 connection:(id)arg2 error:(id *)arg3;	// IMP=0x00000001000f4814
- (_Bool)unpinSnapshotID:(unsigned long long)arg1 backupUDID:(id)arg2 connection:(id)arg3 error:(id *)arg4;	// IMP=0x00000001000f47f0
- (_Bool)pinSnapshotID:(unsigned long long)arg1 backupUDID:(id)arg2 connection:(id)arg3 error:(id *)arg4;	// IMP=0x00000001000f47cc
- (_Bool)mergeSnapshots:(id)arg1 backupUUID:(id)arg2 connection:(id)arg3 error:(id *)arg4;	// IMP=0x00000001000f47a8
- (id)getAppleIDsMapForBackupUDID:(id)arg1 snapshotID:(unsigned long long)arg2 activeAppleID:(id *)arg3 connection:(id)arg4 error:(id *)arg5;	// IMP=0x00000001000f4784
- (_Bool)saveKeybagsForBackupUDID:(id)arg1 connection:(id)arg2 error:(id *)arg3;	// IMP=0x00000001000f4760
- (_Bool)setupBackupWithPasscode:(id)arg1 connection:(id)arg2 error:(id *)arg3;	// IMP=0x00000001000f4718
- (void)setRestoreSessionWithBackupUDID:(id)arg1 snapshotUUID:(id)arg2 connection:(id)arg3;	// IMP=0x00000001000f4708
- (void)_cleanupStaleState;	// IMP=0x00000001000f3bac
- (void)loadBackupState;	// IMP=0x00000001000f3b14
- (void)_clearRestoreSession;	// IMP=0x00000001000f3608
- (void)loadRestoreState;	// IMP=0x00000001000f2dec
- (id)lockManagerWithAccount:(id)arg1 backupUDID:(id)arg2 type:(int)arg3;	// IMP=0x00000001000f29b8
@property(readonly, nonatomic) MBServiceEncryptionManager *serviceEncryptionManager; // @synthesize serviceEncryptionManager=_serviceEncryptionManager;
- (id)_delegate;	// IMP=0x00000001000f2930
- (id)_service;	// IMP=0x00000001000f2908
- (id)_account;	// IMP=0x00000001000f28f4
- (void)dealloc;	// IMP=0x00000001000f2724
- (id)init;	// IMP=0x00000001000f23d8

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

