//
//     Generated by classdumpios 1.0.1 (64 bit) (iOS port by DreamDevLost)(Debug version compiled Sep 26 2020 13:48:20).
//
//  Copyright (C) 1997-2019 Steve Nygard.
//

#import "MBServiceManager.h"

#import "IXAppInstallObserverDelegate-Protocol.h"
#import "MBCKLockManagerDelegate-Protocol.h"

@class IXAppInstallObserver, MBCKCache, MBCKDevice, MBCKEncryptionManager, MBServiceLockManager, NSDictionary, NSMutableDictionary, NSObject, NSString;
@protocol NSObject, OS_dispatch_queue, OS_dispatch_semaphore, OS_os_transaction;

@interface MBCKManager : MBServiceManager <MBCKLockManagerDelegate, IXAppInstallObserverDelegate>
{
    MBCKCache *_cache;	// 160 = 0xa0
    NSObject<OS_os_transaction> *_restoreTransaction;	// 168 = 0xa8
    _Atomic _Bool _pendingAccountAvailableHandler;	// 176 = 0xb0
    _Bool _restoreSessionOverridden;	// 177 = 0xb1
    _Bool _nextBackupSizeCalculated;	// 178 = 0xb2
    _Bool _holdsWorkAssertionForBgRestore;	// 179 = 0xb3
    MBCKEncryptionManager *_encryptionManager;	// 184 = 0xb8
    MBServiceLockManager *_lockManager;	// 192 = 0xc0
    NSDictionary *_cachedBackupsByUDID;	// 200 = 0xc8
    unsigned long long _nextBackupSize;	// 208 = 0xd0
    MBCKDevice *_deviceForRestore;	// 216 = 0xd8
    NSMutableDictionary *_appInstallCoordinators;	// 224 = 0xe0
    IXAppInstallObserver *_appInstallObserver;	// 232 = 0xe8
    NSObject<OS_dispatch_queue> *_coordinatorQueue;	// 240 = 0xf0
    NSObject<OS_dispatch_semaphore> *_coordinationSemaphore;	// 248 = 0xf8
    id <NSObject> _accountObserver;	// 256 = 0x100
}

+ (id)sharedServiceManager;	// IMP=0x000000010003fb18
- (void).cxx_destruct;	// IMP=0x0000000100068184
@property(retain, nonatomic) id <NSObject> accountObserver; // @synthesize accountObserver=_accountObserver;
@property(nonatomic) _Bool holdsWorkAssertionForBgRestore; // @synthesize holdsWorkAssertionForBgRestore=_holdsWorkAssertionForBgRestore;
@property(retain, nonatomic) NSObject<OS_dispatch_semaphore> *coordinationSemaphore; // @synthesize coordinationSemaphore=_coordinationSemaphore;
@property(retain, nonatomic) NSObject<OS_dispatch_queue> *coordinatorQueue; // @synthesize coordinatorQueue=_coordinatorQueue;
@property(retain, nonatomic) IXAppInstallObserver *appInstallObserver; // @synthesize appInstallObserver=_appInstallObserver;
@property(retain, nonatomic) NSMutableDictionary *appInstallCoordinators; // @synthesize appInstallCoordinators=_appInstallCoordinators;
@property(retain, nonatomic) MBCKDevice *deviceForRestore; // @synthesize deviceForRestore=_deviceForRestore;
@property(nonatomic) _Bool nextBackupSizeCalculated; // @synthesize nextBackupSizeCalculated=_nextBackupSizeCalculated;
@property(nonatomic) unsigned long long nextBackupSize; // @synthesize nextBackupSize=_nextBackupSize;
@property(nonatomic) _Bool restoreSessionOverridden; // @synthesize restoreSessionOverridden=_restoreSessionOverridden;
@property(retain, nonatomic) NSDictionary *cachedBackupsByUDID; // @synthesize cachedBackupsByUDID=_cachedBackupsByUDID;
- (void)setLockManager:(id)arg1;	// IMP=0x0000000100068004
- (void)startDataTransferWithPreflightInfo:(id)arg1 connection:(id)arg2 completion:(CDUnknownBlockType)arg3;	// IMP=0x0000000100067f14
- (void)startKeychainDataImportWithKeychainInfo:(id)arg1 connection:(id)arg2 completion:(CDUnknownBlockType)arg3;	// IMP=0x0000000100067e24
- (void)startKeychainDataTransferWithConnection:(id)arg1 completion:(CDUnknownBlockType)arg2;	// IMP=0x0000000100067d54
- (void)startKeychainTransferWithConnection:(id)arg1 completion:(CDUnknownBlockType)arg2;	// IMP=0x0000000100067c88
- (void)startPreflightWithConnection:(id)arg1 completion:(CDUnknownBlockType)arg2;	// IMP=0x0000000100067bb8
- (id)_findTargetDeviceTransferEngineWithConnection:(id)arg1 error:(id *)arg2;	// IMP=0x000000010006763c
- (_Bool)resumeDeviceTransferWithTaskType:(long long)arg1 connection:(id)arg2 error:(id *)arg3;	// IMP=0x0000000100067398
- (void)cancelDeviceTransferWithConnection:(id)arg1;	// IMP=0x00000001000672f0
- (_Bool)cancelDeviceTransferWithTaskType:(long long)arg1 connection:(id)arg2 error:(id *)arg3;	// IMP=0x000000010006704c
- (_Bool)_startTargetDeviceTransferWithSessionInfo:(id)arg1 connection:(id)arg2 error:(id *)arg3;	// IMP=0x00000001000668c0
- (_Bool)_startSourceDeviceTransferWithSessionInfo:(id)arg1 connection:(id)arg2 error:(id *)arg3;	// IMP=0x0000000100066104
- (_Bool)startDeviceTransferWithTaskType:(long long)arg1 sessionInfo:(id)arg2 connection:(id)arg3 error:(id *)arg4;	// IMP=0x000000010006605c
- (void)_startEngine:(id)arg1 delegateContext:(id)arg2;	// IMP=0x0000000100065b20
- (void)retryAppDataDownloads;	// IMP=0x0000000100064d88
- (void)updateProgressForCoordinatorWithBundleID:(id)arg1 progress:(double)arg2;	// IMP=0x0000000100064c38
- (void)_updateProgressForCoordinator:(id)arg1 progress:(double)arg2;	// IMP=0x0000000100064b44
- (void)_cancelAndUninstallAllCoordinators;	// IMP=0x00000001000647ec
- (void)stopTrackingCoordinatorWithBundleID:(id)arg1 success:(_Bool)arg2;	// IMP=0x00000001000646a4
- (void)_stopTrackingCoordinator:(id)arg1 withSuccess:(_Bool)arg2;	// IMP=0x0000000100063fb8
- (void)_setupDataPromiseForCoordinator:(id)arg1;	// IMP=0x0000000100063d18
- (void)coordinator:(id)arg1 canceledWithReason:(id)arg2 client:(unsigned long long)arg3;	// IMP=0x000000010006370c
- (void)coordinatorShouldBeginRestoringUserData:(id)arg1;	// IMP=0x0000000100063344
- (void)_startObservingInstallCoordinators;	// IMP=0x00000001000620b8
- (_Bool)releaseLockWithBackupUDID:(id)arg1 owner:(id)arg2 connection:(id)arg3 error:(id *)arg4;	// IMP=0x0000000100061d5c
- (_Bool)acquireLockWithBackupUDID:(id)arg1 owner:(id)arg2 timeout:(double)arg3 connection:(id)arg4 error:(id *)arg5;	// IMP=0x00000001000619d8
- (void)lockManager:(id)arg1 failedToReleaseLockWithError:(id)arg2;	// IMP=0x0000000100061920
- (void)lockManagerDidReleaseLock:(id)arg1;	// IMP=0x0000000100061868
- (_Bool)extractItemFromBackupUDID:(id)arg1 snapshotID:(unsigned long long)arg2 domainName:(id)arg3 relativePath:(id)arg4 toPath:(id)arg5 connection:(id)arg6 error:(id *)arg7;	// IMP=0x000000010005fd58
- (void)accountChanged:(id)arg1;	// IMP=0x000000010005ee84
- (void)_handleAccountAvailable;	// IMP=0x000000010005ec34
- (void)_updateLockdownKeysForAccountState:(id)arg1;	// IMP=0x000000010005e930
- (void)keyBagIsUnlocked;	// IMP=0x000000010005e920
- (void)keybagIsUnlockedWithCompletion:(CDUnknownBlockType)arg1;	// IMP=0x000000010005e018
- (void)keyBagIsLocking;	// IMP=0x000000010005dc3c
- (_Bool)_hasDeferredDiscountingCameraRollQuota;	// IMP=0x000000010005dbf0
- (void)_clearDeferredDiscountingCameraRollQuota;	// IMP=0x000000010005dbb8
- (void)_deferDiscountingCameraRollQuota;	// IMP=0x000000010005db54
- (_Bool)_discountCameraRollQuotaForBackupUDID:(id)arg1 operationTracker:(id)arg2 error:(id *)arg3;	// IMP=0x000000010005d224
- (_Bool)discountCameraRollQuotaForBackupUDID:(id)arg1 connection:(id)arg2 error:(id *)arg3;	// IMP=0x000000010005d0d0
- (_Bool)discountCameraRollQuotaWithConnection:(id)arg1;	// IMP=0x000000010005d050
- (_Bool)countCameraRollQuotaForBackupUDID:(id)arg1 error:(id *)arg2;	// IMP=0x000000010005d01c
- (_Bool)countCameraRollQuota;	// IMP=0x000000010005cfe8
- (id)reservedBackupSizeListWithConnection:(id)arg1 error:(id *)arg2;	// IMP=0x000000010005cc14
- (_Bool)removeDomainName:(id)arg1 connection:(id)arg2 error:(id *)arg3;	// IMP=0x000000010005c500
- (id)disabledDomainInfos;	// IMP=0x000000010005c2f4
- (id)domainInfoList;	// IMP=0x000000010005b3fc
- (id)domainInfoForName:(id)arg1;	// IMP=0x000000010005b168
- (id)allRestrictedDomainNames:(id)arg1;	// IMP=0x000000010005aca8
- (id)_ckDomainInfoForName:(id)arg1 cache:(id)arg2 restrictedDomains:(id)arg3 disabledDomains:(id)arg4 dependentDomains:(id)arg5 appManager:(id)arg6;	// IMP=0x000000010005a278
- (void)_syncBackupEnabledWithConnection:(id)arg1;	// IMP=0x0000000100059f2c
- (_Bool)deleteAccountWithError:(id *)arg1;	// IMP=0x0000000100059d24
- (void)cancelBackupEngineForContext:(id)arg1 error:(id)arg2;	// IMP=0x0000000100059958
- (void)cancelEngineForContext:(id)arg1;	// IMP=0x0000000100059740
- (void)cancelRestoreForContext:(id)arg1;	// IMP=0x00000001000594d4
- (id)journalLastModifiedForBackupUUID:(id)arg1 connection:(id)arg2 error:(id *)arg3;	// IMP=0x0000000100058fbc
- (id)journalForBackupUUID:(id)arg1 connection:(id)arg2 error:(id *)arg3;	// IMP=0x0000000100058a90
- (_Bool)unpinSnapshotID:(unsigned long long)arg1 backupUDID:(id)arg2 connection:(id)arg3 error:(id *)arg4;	// IMP=0x0000000100058564
- (_Bool)pinSnapshotID:(unsigned long long)arg1 backupUDID:(id)arg2 connection:(id)arg3 error:(id *)arg4;	// IMP=0x0000000100058038
- (_Bool)mergeSnapshots:(id)arg1 backupUUID:(id)arg2 connection:(id)arg3 error:(id *)arg4;	// IMP=0x0000000100057970
- (id)filesForSnapshotID:(unsigned long long)arg1 backupUDID:(id)arg2 connection:(id)arg3 error:(id *)arg4;	// IMP=0x0000000100056d34
- (void)_ckRunScanWithSettingsContext:(id)arg1;	// IMP=0x0000000100056384
- (_Bool)_startScanWithSettingsContext:(id)arg1 error:(id *)arg2;	// IMP=0x0000000100056010
- (_Bool)startScanWithError:(id *)arg1;	// IMP=0x0000000100055f88
- (_Bool)startScanForBundleIDs:(id)arg1 error:(id *)arg2;	// IMP=0x0000000100055eb8
- (_Bool)prepareForBackgroundRestoreWithError:(id *)arg1;	// IMP=0x0000000100055e48
- (id)getAppleIDsMapForBackupUDID:(id)arg1 snapshotID:(unsigned long long)arg2 activeAppleID:(id *)arg3 connection:(id)arg4 error:(id *)arg5;	// IMP=0x0000000100054ea0
- (id)restoreInfo;	// IMP=0x0000000100054e38
- (id)getAppleIDsForBackupUDID:(id)arg1 snapshotID:(unsigned long long)arg2 activeAppleID:(id *)arg3 connection:(id)arg4 error:(id *)arg5;	// IMP=0x00000001000543dc
- (id)getBuddyDataStashForBackupUDID:(id)arg1 snapshotID:(unsigned long long)arg2 connection:(id)arg3 error:(id *)arg4;	// IMP=0x00000001000537c0
- (void)insufficientFreeSpaceToRestore;	// IMP=0x000000010005378c
- (void)prioritizeRestoreFileWithPath:(id)arg1;	// IMP=0x0000000100053400
- (id)restoreFilesForDomain:(id)arg1 relativePath:(id)arg2 pendingOnly:(_Bool)arg3 range:(struct _NSRange)arg4 error:(id *)arg5;	// IMP=0x0000000100052d98
- (_Bool)restoreDataExistsForApplicationWithBundleID:(id)arg1 size:(unsigned long long *)arg2;	// IMP=0x0000000100052680
- (_Bool)restoreFileExistsWithPath:(id)arg1;	// IMP=0x0000000100052288
- (void)_ckClearRestoreSession;	// IMP=0x0000000100051fac
- (void)_ckFinishedRestoreWithReason:(id)arg1;	// IMP=0x00000001000513ac
- (void)cancelRestore;	// IMP=0x0000000100051188
- (void)finishRestore;	// IMP=0x0000000100050fcc
- (void)_finishRestore;	// IMP=0x0000000100050ee0
- (void)_airTrafficFinishedRestoring;	// IMP=0x0000000100050d48
- (void)_ckFinishRestore:(_Bool)arg1;	// IMP=0x0000000100050270
- (void)_ckFinalizeRestoreDirectory;	// IMP=0x00000001000500ec
- (_Bool)saveKeybagsForBackupUDID:(id)arg1 connection:(id)arg2 error:(id *)arg3;	// IMP=0x000000010004fdb8
- (void)_startRestoreWithEngine:(id)arg1 delegateContext:(id)arg2;	// IMP=0x000000010004e000
- (id)fetchDeviceForRestoreWithOperationTracker:(id)arg1 context:(id)arg2 error:(id *)arg3;	// IMP=0x000000010004d7c0
- (_Bool)startRestoreForBackupUDID:(id)arg1 snapshotID:(unsigned long long)arg2 connection:(id)arg3 error:(id *)arg4;	// IMP=0x000000010004cba0
- (_Bool)_ckStartBackgroundRestoreWithSettingsContext:(id)arg1 delegateContext:(id)arg2 error:(id *)arg3;	// IMP=0x000000010004c2d0
- (id)_restoreEngineWithRestoreType:(int)arg1 settingsContext:(id)arg2 debugContext:(id)arg3;	// IMP=0x000000010004c128
- (_Bool)cancelApplicationRestoreWithBundleID:(id)arg1 error:(id *)arg2;	// IMP=0x000000010004c120
- (_Bool)_restoreApplicationWithBundleID:(id)arg1 failed:(_Bool)arg2 context:(id)arg3 error:(id *)arg4;	// IMP=0x000000010004c058
- (_Bool)restoreApplicationWithBundleID:(id)arg1 failed:(_Bool)arg2 qos:(id)arg3 context:(id)arg4 error:(id *)arg5;	// IMP=0x000000010004ba6c
- (_Bool)restoreBookWithPath:(id)arg1 context:(id)arg2 error:(id *)arg3;	// IMP=0x000000010004b580
- (_Bool)restoreFilesWithPaths:(id)arg1 context:(id)arg2 error:(id *)arg3;	// IMP=0x000000010004b2c8
- (_Bool)restoreFileWithPath:(id)arg1 isBatch:(_Bool)arg2 context:(id)arg3 error:(id *)arg4;	// IMP=0x000000010004af6c
- (_Bool)restoreFileWithPath:(id)arg1 context:(id)arg2 error:(id *)arg3;	// IMP=0x000000010004af04
- (void)setRestoreQualityOfService:(long long)arg1 context:(id)arg2;	// IMP=0x000000010004ae64
- (_Bool)restoreSupportsBatching;	// IMP=0x000000010004ae5c
- (id)backgroundRestoreInfo;	// IMP=0x000000010004a638
- (_Bool)_isAirTrafficRestoring;	// IMP=0x000000010004a380
- (_Bool)deleteBackupUDID:(id)arg1 connection:(id)arg2 error:(id *)arg3;	// IMP=0x00000001000499d8
- (void)_startBackupWithEngine:(id)arg1;	// IMP=0x0000000100048e40
- (_Bool)startBackupWithReason:(long long)arg1 connection:(id)arg2 error:(id *)arg3;	// IMP=0x00000001000482f8
- (id)_backupEngineWithReason:(long long)arg1 settingsContext:(id)arg2;	// IMP=0x0000000100047f7c
- (id)nextBackupSizeInfo;	// IMP=0x0000000100047e08
- (_Bool)inheritSnapshot:(id)arg1 fromDevice:(id)arg2 error:(id *)arg3;	// IMP=0x0000000100047cd8
- (_Bool)inheritSnapshotWithTracker:(id)arg1 fromSnapshot:(id)arg2 fromDevice:(id)arg3 error:(id *)arg4;	// IMP=0x0000000100046878
- (_Bool)shouldInheritBackupsFromDevice:(id)arg1 toDevice:(id)arg2 error:(id *)arg3;	// IMP=0x0000000100046138
- (_Bool)hardwareModelNeedsH8Workaround:(id)arg1;	// IMP=0x000000010004609c
- (id)getBackupListWithFiltering:(_Bool)arg1 connection:(id)arg2 error:(id *)arg3;	// IMP=0x0000000100045f54
- (id)getBackupListWithOperationTracker:(id)arg1 shouldFilter:(_Bool)arg2 error:(id *)arg3;	// IMP=0x00000001000445fc
- (id)backupState;	// IMP=0x0000000100044488
- (_Bool)allowiTunesBackup;	// IMP=0x0000000100044454
- (void)setAllowiTunesBackup:(_Bool)arg1;	// IMP=0x0000000100044420
- (void)setBackupEnabled:(_Bool)arg1 forDomainName:(id)arg2;	// IMP=0x000000010004422c
- (_Bool)isBackupEnabledForDomainName:(id)arg1;	// IMP=0x0000000100044190
- (void)syncBackupEnabledWithConnection:(id)arg1;	// IMP=0x0000000100043df8
- (void)setBackupEnabled:(_Bool)arg1;	// IMP=0x0000000100043bcc
- (_Bool)isBackupEnabled;	// IMP=0x0000000100043b98
- (_Bool)setupBackupWithPasscode:(id)arg1 connection:(id)arg2 error:(id *)arg3;	// IMP=0x0000000100043348
- (void)_notifyUserOfQuotaDepletionForContext:(id)arg1;	// IMP=0x000000010004323c
- (_Bool)isPowerBudgetAvailableForRestore;	// IMP=0x0000000100043234
- (void)warnUserOfPowerBudgetSuspendingRestore;	// IMP=0x00000001000430d0
- (void)alertUserOfIncompleteRestoreIfNeeded;	// IMP=0x0000000100042ec8
- (void)_waitForRestoreConditions;	// IMP=0x0000000100042cf4
- (unsigned long long)_snapshotIDForSnapshotUUID:(id)arg1 backupUDID:(id)arg2 operationTracker:(id)arg3 error:(id *)arg4;	// IMP=0x00000001000429d0
- (id)snapshotForSnapshotID:(unsigned long long)arg1 backupUDID:(id)arg2 operationTracker:(id)arg3 error:(id *)arg4;	// IMP=0x0000000100042950
- (id)_snapshotForSnapshotID:(unsigned long long)arg1 backupUDID:(id)arg2 cached:(_Bool)arg3 operationTracker:(id)arg4 error:(id *)arg5;	// IMP=0x0000000100042090
- (id)_sanitizeError:(id)arg1;	// IMP=0x0000000100042078
- (void)saveFailedBackupShadowState;	// IMP=0x0000000100041f50
- (id)_ckSettingsContextForRestoreWithdeviceUUID:(id)arg1 context:(id)arg2;	// IMP=0x0000000100041d0c
- (id)_ckSettingsContextForBackupUDID:(id)arg1;	// IMP=0x0000000100041ae4
- (id)_account;	// IMP=0x0000000100041ad0
- (void)loadRestoreState;	// IMP=0x0000000100041028
- (void)clearRestoreSession;	// IMP=0x0000000100040fa4
- (void)_clearRestoreSessionInternal;	// IMP=0x0000000100040e70
- (void)setRestoreSessionWithBackupUDID:(id)arg1 snapshotUUID:(id)arg2 connection:(id)arg3;	// IMP=0x0000000100040310
@property(readonly, nonatomic) MBCKEncryptionManager *encryptionManager; // @synthesize encryptionManager=_encryptionManager;
- (id)lockManager;	// IMP=0x0000000100040174
- (id)lockManagerWithAccount:(id)arg1 backupUDID:(id)arg2 type:(int)arg3;	// IMP=0x0000000100040028
@property(readonly, nonatomic) MBCKCache *readOnlyCache;
@property(retain, nonatomic) MBCKCache *cache;
- (void)dealloc;	// IMP=0x000000010003fea8
- (id)init;	// IMP=0x000000010003fb84

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

