//
//     Generated by classdumpios 1.0.1 (64 bit) (iOS port by DreamDevLost)(Debug version compiled Sep 26 2020 13:48:20).
//
//  Copyright (C) 1997-2019 Steve Nygard.
//

#import <objc/NSObject.h>

@class MBCKOperationPolicy, MBCKOperationTracker, NSError, NSMutableArray, NSMutableDictionary, NSMutableOrderedSet;
@protocol OS_dispatch_group, OS_dispatch_queue, OS_dispatch_semaphore;

@interface MBCKBatchDelete : NSObject
{
    _Atomic int _pendingOperationsCount;	// 8 = 0x8
    _Atomic _Bool _started;	// 12 = 0xc
    _Bool _deleteIncrementally;	// 13 = 0xd
    _Bool _canceled;	// 14 = 0xe
    MBCKOperationPolicy *_ckOperationPolicy;	// 16 = 0x10
    MBCKOperationTracker *_ckOperationTracker;	// 24 = 0x18
    NSMutableOrderedSet *_deleteInfos;	// 32 = 0x20
    NSMutableDictionary *_deleteInfosByRecordID;	// 40 = 0x28
    NSObject<OS_dispatch_queue> *_callbackQueue;	// 48 = 0x30
    NSObject<OS_dispatch_group> *_deleteGroup;	// 56 = 0x38
    NSError *_deleteError;	// 64 = 0x40
    NSMutableArray *_deleteErrors;	// 72 = 0x48
    unsigned long long _currentBatchCount;	// 80 = 0x50
}

- (void).cxx_destruct;	// IMP=0x000000010017ad58
@property _Bool canceled; // @synthesize canceled=_canceled;
@property(nonatomic) unsigned long long currentBatchCount; // @synthesize currentBatchCount=_currentBatchCount;
@property(retain, nonatomic) NSMutableArray *deleteErrors; // @synthesize deleteErrors=_deleteErrors;
@property(retain) NSError *deleteError; // @synthesize deleteError=_deleteError;
@property(retain, nonatomic) NSObject<OS_dispatch_group> *deleteGroup; // @synthesize deleteGroup=_deleteGroup;
@property(retain, nonatomic) NSObject<OS_dispatch_queue> *callbackQueue; // @synthesize callbackQueue=_callbackQueue;
@property(retain, nonatomic) NSMutableDictionary *deleteInfosByRecordID; // @synthesize deleteInfosByRecordID=_deleteInfosByRecordID;
@property(retain, nonatomic) NSMutableOrderedSet *deleteInfos; // @synthesize deleteInfos=_deleteInfos;
@property(nonatomic) __weak MBCKOperationTracker *ckOperationTracker; // @synthesize ckOperationTracker=_ckOperationTracker;
@property(nonatomic) _Bool deleteIncrementally; // @synthesize deleteIncrementally=_deleteIncrementally;
@property(retain, nonatomic) MBCKOperationPolicy *ckOperationPolicy; // @synthesize ckOperationPolicy=_ckOperationPolicy;
- (void)cancel;	// IMP=0x000000010017ac64
- (void)deleteRecordsWithCompletion:(CDUnknownBlockType)arg1;	// IMP=0x000000010017abf0
- (void)_deleteRecordsWithCompletion:(CDUnknownBlockType)arg1;	// IMP=0x000000010017aab8
- (void)_flushBatchedDeletes:(unsigned long long)arg1;	// IMP=0x000000010017a3b8
- (void)_scheduleBatchDeleteOperationForDeleteInfos:(id)arg1;	// IMP=0x0000000100179e10
- (void)_sendBatchDeleteOperationForDeleteInfos:(id)arg1;	// IMP=0x0000000100179224
- (_Bool)_handleCompletionForDeleteInfo:(id)arg1 operation:(id)arg2 error:(id)arg3;	// IMP=0x000000010017872c
- (void)_finishBatchedDeletesWithCompletion:(CDUnknownBlockType)arg1;	// IMP=0x0000000100178460
- (void)_performCallbacksForDeleteInfo:(id)arg1 error:(id)arg2;	// IMP=0x000000010017803c
- (void)_flush;	// IMP=0x0000000100178000
- (void)deleteRecordWithID:(id)arg1 completion:(CDUnknownBlockType)arg2;	// IMP=0x0000000100177b40
@property(readonly, nonatomic) NSObject<OS_dispatch_semaphore> *deleteSemaphore;
- (void)dealloc;	// IMP=0x0000000100177a2c
- (id)initWithOperationTracker:(id)arg1;	// IMP=0x00000001001778ac

@end

