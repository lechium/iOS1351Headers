//
//     Generated by classdumpios 1.0.1 (64 bit) (iOS port by DreamDevLost)(Debug version compiled Sep 26 2020 13:48:20).
//
//  Copyright (C) 1997-2019 Steve Nygard.
//

#import <UIKit/UIView.h>

#import "CAAnimationDelegate-Protocol.h"
#import "CloudTabTableDelegate-Protocol.h"
#import "ReorderingAutoscrollerDelegate-Protocol.h"
#import "TabThumbnailCollectionView-Protocol.h"
#import "UIGestureRecognizerDelegate-Protocol.h"
#import "UIInteractionProgressObserver-Protocol.h"
#import "UIKeyInput-Protocol.h"
#import "UIScrollViewDelegate-Protocol.h"
#import "UISearchBarDelegate-Protocol.h"
#import "_UIBasicAnimationFactory-Protocol.h"

@class CloudTabItemView, CloudTabTable, GradientView, HighlightRecognizer, NSArray, NSMapTable, NSMutableDictionary, NSMutableSet, NSNumber, NSOrderedSet, NSString, NSTimer, ReorderingAutoscroller, TabExplanationView, TiltedTabItem, TiltedTabViewMetrics, UILongPressGestureRecognizer, UIPanGestureRecognizer, UIPreviewForceInteractionProgress, UIScrollView, UISearchBar, UITapGestureRecognizer, UITextInputPasswordRules, ViewReuseManager, WBSCloudTab;
@protocol TiltedTabViewDelegate;

@interface TiltedTabView : UIView <CAAnimationDelegate, CloudTabTableDelegate, ReorderingAutoscrollerDelegate, UIGestureRecognizerDelegate, UIScrollViewDelegate, _UIBasicAnimationFactory, UIInteractionProgressObserver, UISearchBarDelegate, UIKeyInput, TabThumbnailCollectionView>
{
    _Bool _preparingToTogglePresented;	// 8 = 0x8
    UIPanGestureRecognizer *_tabCloseRecognizer;	// 16 = 0x10
    UILongPressGestureRecognizer *_tabReorderRecognizer;	// 24 = 0x18
    UITapGestureRecognizer *_tabSelectionRecognizer;	// 32 = 0x20
    UIScrollView *_scrollView;	// 40 = 0x28
    _Bool _suppressingScrollViewDidScroll;	// 48 = 0x30
    ViewReuseManager *_viewReuseManager;	// 56 = 0x38
    GradientView *_statusBarGradient;	// 64 = 0x40
    unsigned long long _activeAnimationCount;	// 72 = 0x48
    TiltedTabItem *_animatingItem;	// 80 = 0x50
    _Bool _startedAnimatingItem;	// 88 = 0x58
    UIView *_animatingTopBackdropView;	// 96 = 0x60
    TiltedTabItem *_itemToScrollIntoView;	// 104 = 0x68
    _Bool _itemToScrollIntoViewScrollsToTop;	// 112 = 0x70
    _Bool _topBackdropViewHidden;	// 113 = 0x71
    UILongPressGestureRecognizer *_tabPreviewRecognizer;	// 120 = 0x78
    UILongPressGestureRecognizer *_tabCommitRecognizer;	// 128 = 0x80
    long long _currentTabPreviewState;	// 136 = 0x88
    TiltedTabItem *_interactivelyPreviewingItem;	// 144 = 0x90
    double _tabPreviewProgress;	// 152 = 0x98
    double _tabReadyToCommitProgress;	// 160 = 0xa0
    UIPreviewForceInteractionProgress *_tabPreviewInteractionProgress;	// 168 = 0xa8
    UIPreviewForceInteractionProgress *_tabReadyToCommitInteractionProgress;	// 176 = 0xb0
    TiltedTabItem *_interactivelyClosingItem;	// 184 = 0xb8
    double _interactiveCloseProgress;	// 192 = 0xc0
    double _interactiveCloseVelocity;	// 200 = 0xc8
    TiltedTabItem *_onlyHorizontalVelocityItem;	// 208 = 0xd0
    _Bool _applyVelocityOnlyToHorizontalPosition;	// 216 = 0xd8
    TiltedTabItem *_pressedItem;	// 224 = 0xe0
    HighlightRecognizer *_pressRecognizer;	// 232 = 0xe8
    NSMapTable *_dragItemViews;	// 240 = 0xf0
    TiltedTabItem *_interactivelyReorderingItem;	// 248 = 0xf8
    double _interactiveReorderOffsetDistanceFromTouch;	// 256 = 0x100
    double _interactiveReorderOffset;	// 264 = 0x108
    _Bool _reorderOffsetNeedsReset;	// 272 = 0x110
    _Bool _itemsReordered;	// 273 = 0x111
    ReorderingAutoscroller *_reorderingAutoscroller;	// 280 = 0x118
    NSOrderedSet *_itemsInvolvedInAnimation;	// 288 = 0x120
    NSMutableSet *_itemsCurrentlyClosing;	// 296 = 0x128
    NSOrderedSet *_itemsInvolvedInTransition;	// 304 = 0x130
    TiltedTabItem *_visiblyCenteredItem;	// 312 = 0x138
    _Bool _scrollingToTop;	// 320 = 0x140
    UIView *_cloudTabContainer;	// 328 = 0x148
    NSArray *_cloudTabDevices;	// 336 = 0x150
    NSArray *_cloudTabTables;	// 344 = 0x158
    WBSCloudTab *_selectedCloudTab;	// 352 = 0x160
    CloudTabTable *_selectedCloudTabTable;	// 360 = 0x168
    CloudTabItemView *_editedCloudTabItemView;	// 368 = 0x170
    _Bool _cloudTabsNeedLayout;	// 376 = 0x178
    NSTimer *_itemActivationTimer;	// 384 = 0x180
    UIView *_bottomMaskView;	// 392 = 0x188
    _Bool _shouldShowPrivateBrowsingExplanationView;	// 400 = 0x190
    _Bool _shouldShowSearchExplanationView;	// 401 = 0x191
    TabExplanationView *_explanationView;	// 408 = 0x198
    _Bool _explanationViewVisible;	// 416 = 0x1a0
    double _bottomInsetForKeyboard;	// 424 = 0x1a8
    NSArray *_items;	// 432 = 0x1b0
    double _pendingBottomInsetForKeyboard;	// 440 = 0x1b8
    UISearchBar *_searchBar;	// 448 = 0x1c0
    _Bool _hasSearchBarInset;	// 456 = 0x1c8
    _Bool _shouldSendDidEndSearchingToDelegate;	// 457 = 0x1c9
    UILongPressGestureRecognizer *_doneLongPressGestureRecognizer;	// 464 = 0x1d0
    UIView *_inputView;	// 472 = 0x1d8
    _Bool _isAccessibilityContentSize;	// 480 = 0x1e0
    NSMutableDictionary *_scrollPositions;	// 488 = 0x1e8
    NSNumber *_currentScrollPositionIdentifier;	// 496 = 0x1f0
    double _transitionContentOffsetDeltaY;	// 504 = 0x1f8
    _Bool _defersActivation;	// 512 = 0x200
    _Bool _showingSearchBar;	// 513 = 0x201
    _Bool _showsPrivateBrowsingExplanationView;	// 514 = 0x202
    NSArray *_unfilteredItems;	// 520 = 0x208
    NSString *_searchTerm;	// 528 = 0x210
    long long _presentationState;	// 536 = 0x218
    id <TiltedTabViewDelegate> _delegate;	// 544 = 0x220
    TiltedTabViewMetrics *_metrics;	// 552 = 0x228
    TiltedTabItem *_itemToActivate;	// 560 = 0x230
    TiltedTabItem *_itemToAdd;	// 568 = 0x238
    struct CGSize _expectedSnapshotImageSize;	// 576 = 0x240
}

+ (_Bool)_shouldUseSystemDrag;	// IMP=0x00000001000c9988
- (void).cxx_destruct;	// IMP=0x00000001000ce880
@property(readonly, nonatomic, getter=_expectedSnapshotImageSize) struct CGSize expectedSnapshotImageSize; // @synthesize expectedSnapshotImageSize=_expectedSnapshotImageSize;
@property(readonly, nonatomic) _Bool showsPrivateBrowsingExplanationView; // @synthesize showsPrivateBrowsingExplanationView=_showsPrivateBrowsingExplanationView;
@property(readonly, nonatomic, getter=isShowingSearchBar) _Bool showingSearchBar; // @synthesize showingSearchBar=_showingSearchBar;
@property(retain, nonatomic) TiltedTabItem *itemToAdd; // @synthesize itemToAdd=_itemToAdd;
@property(nonatomic) _Bool defersActivation; // @synthesize defersActivation=_defersActivation;
@property(retain, nonatomic) TiltedTabItem *itemToActivate; // @synthesize itemToActivate=_itemToActivate;
@property(readonly, nonatomic) TiltedTabViewMetrics *metrics; // @synthesize metrics=_metrics;
@property(nonatomic) __weak id <TiltedTabViewDelegate> delegate; // @synthesize delegate=_delegate;
@property(readonly, nonatomic) long long presentationState; // @synthesize presentationState=_presentationState;
@property(copy, nonatomic) NSString *searchTerm; // @synthesize searchTerm=_searchTerm;
@property(readonly, nonatomic) UIScrollView *test_scrollView;
- (unsigned long long)estimatedSnapshotsPerPageForBounds:(struct CGRect)arg1 withTraitCollection:(id)arg2;	// IMP=0x00000001000ce724
- (struct CGSize)_requestedSnapshotSize;	// IMP=0x00000001000ce6f8
@property(readonly, nonatomic) unsigned long long snapshotBorderOptions;
@property(readonly, nonatomic) double desiredSnapshotScale;
- (struct CGSize)snapshotSizeForSuggestedSize:(struct CGSize)arg1;	// IMP=0x00000001000ce620
- (double)_scaleForDownScaledSnapshot;	// IMP=0x00000001000ce5d4
- (_Bool)_applyPendingBottomInsetForKeyboard;	// IMP=0x00000001000ce508
- (void)_keyboardWillDisappear:(id)arg1;	// IMP=0x00000001000ce4b8
- (void)_keyboardWillAppear:(id)arg1;	// IMP=0x00000001000ce338
- (void)reorderingAutoscroller:(id)arg1 handleScroll:(struct CGPoint)arg2;	// IMP=0x00000001000ce23c
- (id)inputView;	// IMP=0x00000001000ce22c
- (_Bool)canBecomeFirstResponder;	// IMP=0x00000001000ce218
@property(nonatomic) long long smartInsertDeleteType;
@property(nonatomic) long long smartDashesType;
@property(nonatomic) long long smartQuotesType;
@property(nonatomic) long long spellCheckingType;
@property(nonatomic) long long autocapitalizationType;
@property(nonatomic) long long autocorrectionType;
- (void)_passTextInputToSeachBarWithChanges:(CDUnknownBlockType)arg1;	// IMP=0x00000001000ce0e0
- (void)deleteBackward;	// IMP=0x00000001000cdff8
@property(readonly, nonatomic) _Bool hasText;
- (void)insertText:(id)arg1;	// IMP=0x00000001000cdef0
- (void)searchBarCancelButtonClicked:(id)arg1;	// IMP=0x00000001000cdee4
- (void)searchBarTextDidEndEditing:(id)arg1;	// IMP=0x00000001000cde10
- (void)searchBarTextDidBeginEditing:(id)arg1;	// IMP=0x00000001000cdc74
- (void)searchBarSearchButtonClicked:(id)arg1;	// IMP=0x00000001000cdc38
- (void)searchBar:(id)arg1 textDidChange:(id)arg2;	// IMP=0x00000001000cdb64
- (_Bool)searchBarShouldEndEditing:(id)arg1;	// IMP=0x00000001000cdb5c
- (long long)positionForBar:(id)arg1;	// IMP=0x00000001000cdb54
- (_Bool)cloudTabTable:(id)arg1 shouldDisplayTab:(id)arg2;	// IMP=0x00000001000cda9c
- (void)cloudTabTable:(id)arg1 didFinishEditingTabItemView:(id)arg2;	// IMP=0x00000001000cda90
- (void)_stopTrackingEditedTabItemView;	// IMP=0x00000001000cda48
- (void)cloudTabTable:(id)arg1 didStartEditingTabItemView:(id)arg2;	// IMP=0x00000001000cd9e8
- (void)cloudTabTable:(id)arg1 closeCloudTab:(id)arg2 onDevice:(id)arg3;	// IMP=0x00000001000cd964
- (void)cloudTabTable:(id)arg1 didSelectCloudTab:(id)arg2;	// IMP=0x00000001000cd81c
- (void)traitCollectionDidChange:(id)arg1;	// IMP=0x00000001000cd730
- (void)setCloudTabDevices:(id)arg1;	// IMP=0x00000001000cd32c
- (void)_updateExplanationViewVisibilityForcingLayout:(_Bool)arg1;	// IMP=0x00000001000cd018
- (_Bool)showsExplanationView;	// IMP=0x00000001000ccfe8
- (void)_setExplanationViewVariant:(unsigned long long)arg1 animated:(_Bool)arg2;	// IMP=0x00000001000cce8c
- (unsigned long long)_effectiveExplanationViewVariant;	// IMP=0x00000001000cce64
- (void)setShowsPrivateBrowsingExplanationView:(_Bool)arg1 animated:(_Bool)arg2;	// IMP=0x00000001000cce00
- (void)updateSnapshotForItem:(id)arg1 animated:(_Bool)arg2;	// IMP=0x00000001000ccd60
- (void)safeAreaInsetsDidChange;	// IMP=0x00000001000ccd10
- (void)_updateAutoScrollInsets;	// IMP=0x00000001000cccb4
- (void)layoutSubviews;	// IMP=0x00000001000ccca4
- (void)scrollViewDidEndDragging:(id)arg1 willDecelerate:(_Bool)arg2;	// IMP=0x00000001000ccc4c
- (void)scrollViewWillBeginDragging:(id)arg1;	// IMP=0x00000001000ccc3c
- (_Bool)scrollViewShouldScrollToTop:(id)arg1;	// IMP=0x00000001000ccc24
- (void)scrollViewDidScroll:(id)arg1;	// IMP=0x00000001000ccb7c
- (double)_heightForStatusBarGradientWithItemCount:(double)arg1;	// IMP=0x00000001000ccad4
- (_Bool)_shouldUseFastExplanationViewAnimation;	// IMP=0x00000001000cca58
- (void)_doneLongPressRecognized:(id)arg1;	// IMP=0x00000001000cc9f0
- (void)_setShowingSearchExplanationView:(_Bool)arg1;	// IMP=0x00000001000cc990
- (void)_setShowingSearchBar:(_Bool)arg1 animated:(_Bool)arg2;	// IMP=0x00000001000cc844
- (void)beginSearching;	// IMP=0x00000001000cc800
- (void)endSearching;	// IMP=0x00000001000cc7a8
@property(readonly, nonatomic) _Bool canShowSearchBar;
@property(readonly, nonatomic, getter=isSearching) _Bool searching;
- (_Bool)_shouldShowSearchBarBackground;	// IMP=0x00000001000cc63c
- (void)_setSearchBarBackgroundAlphaForScroll;	// IMP=0x00000001000cc50c
- (void)_setShowingSearchBarForScroll;	// IMP=0x00000001000cc3ec
- (void)_setHasSearchBarInset:(_Bool)arg1;	// IMP=0x00000001000cc24c
- (void)_layoutSearchBar;	// IMP=0x00000001000cc06c
- (double)_contentOpacityForItem:(id)arg1 withTopScrollingEffectFactor:(double)arg2 topScrollingEffectOffset:(double)arg3 activatingItem:(id)arg4;	// IMP=0x00000001000cbdec
- (double)_valueForPresentedValue:(double)arg1 nonPresentedValue:(double)arg2;	// IMP=0x00000001000cbd70
- (struct CGRect)frameForItem:(id)arg1;	// IMP=0x00000001000cbd30
- (id)viewForItem:(id)arg1;	// IMP=0x00000001000cbcd8
- (void)activateItem:(id)arg1;	// IMP=0x00000001000cbc5c
- (void)cleanUpDragPreviewForItem:(id)arg1;	// IMP=0x00000001000cbb80
- (void)updateDragPreviewForItem:(id)arg1 atPoint:(struct CGPoint)arg2;	// IMP=0x00000001000cb52c
- (id)targetedDragPreviewForDroppingItem:(id)arg1;	// IMP=0x00000001000cab98
- (id)targetedDragPreviewForLiftingItem:(id)arg1;	// IMP=0x00000001000c99a8
@property(readonly, nonatomic) _Bool supportsSystemDrag;
- (id)itemAtPoint:(struct CGPoint)arg1;	// IMP=0x00000001000c9900
- (id)targetItemForDropAtPoint:(struct CGPoint)arg1;	// IMP=0x00000001000c9824
- (void)_layoutItemsWithTransition:(long long)arg1;	// IMP=0x00000001000c5a74
- (double)_headerHeightInContentSpace;	// IMP=0x00000001000c5a28
- (struct CGRect)_visibleContentFrame;	// IMP=0x00000001000c599c
- (void)_relinquishReusableTiltedTabThumbnailView:(id)arg1;	// IMP=0x00000001000c5984
- (id)_requestReusableTiltedTabThumbnailView;	// IMP=0x00000001000c58ec
- (id)_snapshotForItem:(id)arg1;	// IMP=0x00000001000c5870
- (void)_layoutItemsAnimated:(_Bool)arg1;	// IMP=0x00000001000c5864
- (double)_multipleItemCloseAnimationDelayForItemAtIndex:(unsigned long long)arg1;	// IMP=0x00000001000c583c
- (double)_baseOffsetForCloudTabViewsWithItemCount:(unsigned long long)arg1;	// IMP=0x00000001000c5734
- (double)_baseOffsetForItem:(id)arg1 index:(unsigned long long *)arg2 count:(double *)arg3;	// IMP=0x00000001000c5534
- (double)_baseOffsetForItemAtIndex:(unsigned long long)arg1 withItemCountForLayout:(double)arg2;	// IMP=0x00000001000c5324
- (void)_tabCommitGestureRecognized:(id)arg1;	// IMP=0x00000001000c521c
- (_Bool)_isTabCommitGestureRecognized;	// IMP=0x00000001000c51c4
- (void)interactionProgress:(id)arg1 didEnd:(_Bool)arg2;	// IMP=0x00000001000c5118
- (void)interactionProgressDidUpdate:(id)arg1;	// IMP=0x00000001000c5034
- (void)_updateTabPreviewProgress:(double)arg1;	// IMP=0x00000001000c4ff0
- (double)_interactiveCloseProgressForLayout;	// IMP=0x00000001000c4f34
- (double)_cloudTabsContentHeightForItemCount:(double)arg1;	// IMP=0x00000001000c4db4
- (double)_cloudTabsTopPaddingForItemCount:(double)arg1;	// IMP=0x00000001000c4d78
- (struct CGSize)_contentSizeForItemCount:(double)arg1;	// IMP=0x00000001000c4cd0
- (double)_spaceBetweenTabsWithCount:(double)arg1;	// IMP=0x00000001000c4be0
- (double)_bottomInset;	// IMP=0x00000001000c4bb8
- (void)_updateReorderAnimationsForItem:(id)arg1 withTimeAdjustment:(double)arg2 tabCount:(double)arg3 createIfNecessary:(_Bool)arg4;	// IMP=0x00000001000c4920
- (void)_updateReorderAnimationBeginTimeForLayer:(id)arg1 withTimeAdjustment:(double)arg2;	// IMP=0x00000001000c476c
- (void)_stopReorderingItem:(id)arg1 withFinalTimeAdjustment:(double)arg2 tabCount:(double)arg3;	// IMP=0x00000001000c45a0
- (id)_makeReorderAnimationWithDirection:(long long)arg1 springDuration:(double)arg2 tabCount:(double)arg3;	// IMP=0x00000001000c3e8c
- (void)_updateAnimationForLayer:(id)arg1 cornerRadius:(double)arg2 animated:(_Bool)arg3;	// IMP=0x00000001000c3d7c
- (void)_updateSpringAnimationForView:(id)arg1 contentsRect:(struct CGRect)arg2 animated:(_Bool)arg3;	// IMP=0x00000001000c3be8
- (void)_updateSpringAnimationForView:(id)arg1 withFrame:(struct CGRect)arg2 animated:(_Bool)arg3;	// IMP=0x00000001000c396c
- (void)_updateSpringAnimationForView:(id)arg1 withBounds:(struct CGRect)arg2 animated:(_Bool)arg3;	// IMP=0x00000001000c385c
- (void)_addSpringAnimationForView:(id)arg1 fromBounds:(struct CGRect)arg2 toBounds:(struct CGRect)arg3 delay:(double)arg4 additionalSpeed:(float)arg5 useRelaxedTimingFunction:(_Bool)arg6 useBounceAnimation:(_Bool)arg7;	// IMP=0x00000001000c360c
- (void)_updateSpringAnimationForView:(id)arg1 withFrame:(struct CGRect)arg2 preventBoundsAnimation:(_Bool)arg3 transform:(struct CATransform3D)arg4 zPosition:(double)arg5 opacity:(double)arg6 verticalScrollAdjustment:(double)arg7 animated:(_Bool)arg8 delay:(double)arg9 additionalSpeed:(float)arg10 useRelaxedTimingFunction:(_Bool)arg11 useBounceAnimation:(_Bool)arg12;	// IMP=0x00000001000c2ddc
- (void)_addSpringAnimationWithKeyPath:(id)arg1 animationKey:(id)arg2 toLayer:(id)arg3 fromValue:(id)arg4 toValue:(id)arg5 delay:(double)arg6 additionalSpeed:(float)arg7 useRelaxedTimingFunction:(_Bool)arg8 useBounceAnimation:(_Bool)arg9 additive:(_Bool)arg10;	// IMP=0x00000001000c2894
- (void)_addSpringAnimationWithKeyPath:(id)arg1 toLayer:(id)arg2 fromValue:(id)arg3 toValue:(id)arg4 delay:(double)arg5 additionalSpeed:(float)arg6 useRelaxedTimingFunction:(_Bool)arg7 useBounceAnimation:(_Bool)arg8;	// IMP=0x00000001000c27c0
- (id)_timingFunctionForAnimation;	// IMP=0x00000001000c2790
- (id)_basicAnimationForView:(id)arg1 withKeyPath:(id)arg2;	// IMP=0x00000001000c26d8
- (void)_configureVelocityForSpringAnimation:(id)arg1 withKeyPath:(id)arg2;	// IMP=0x00000001000c2614
- (void)_configureStaticPropertiesForSpringAnimation:(id)arg1;	// IMP=0x00000001000c2594
- (double)_speedForSpringAnimations;	// IMP=0x00000001000c24b4
- (double)_durationForSpringAnimations;	// IMP=0x00000001000c2490
- (double)_velocityForSpringAnimations;	// IMP=0x00000001000c23c0
- (void)_updateSpringAnimationForView:(id)arg1 withFrame:(struct CGRect)arg2 verticalScrollAdjustment:(double)arg3 animated:(_Bool)arg4;	// IMP=0x00000001000c22b0
- (void)_closeButtonPressed:(id)arg1;	// IMP=0x00000001000c20e4
- (void)_finishTransition;	// IMP=0x00000001000c1eb0
- (unsigned long long)countOfVisibleItems;	// IMP=0x00000001000c1e44
- (_Bool)itemIsCoveredBySlidingWindow:(id)arg1 windowSize:(unsigned long long)arg2;	// IMP=0x00000001000c1cf4
- (void)enumerateItemsOrderedByVisibility:(CDUnknownBlockType)arg1;	// IMP=0x00000001000c1a4c
- (struct CGPoint)_contentOffsetForScrollPositionIdentifier:(id)arg1;	// IMP=0x00000001000c19bc
- (void)_setContentOffset:(struct CGPoint)arg1 forScrollPositionIdentifier:(id)arg2;	// IMP=0x00000001000c1914
- (_Bool)isItemAnimating:(id)arg1;	// IMP=0x00000001000c18e0
- (void)_updateItemsWithUnfilteredItems:(id)arg1 scrollPositionIdentifier:(id)arg2 transition:(long long)arg3;	// IMP=0x00000001000c1008
- (void)_updateItemsWithTransition:(long long)arg1;	// IMP=0x00000001000c0fe0
- (id)_filterItems:(id)arg1;	// IMP=0x00000001000c0e5c
- (void)setItems:(id)arg1 withScrollPositionIdentifier:(id)arg2 transition:(long long)arg3;	// IMP=0x00000001000c0dd0
@property(copy, nonatomic) NSArray *items; // @synthesize items=_unfilteredItems;
@property(readonly, nonatomic) NSArray *itemsFullyInView;
@property(readonly, nonatomic) NSArray *itemsMatchingSearchTerm;
- (void)_updateItemsInvolvedInAnimation;	// IMP=0x00000001000c07c0
- (void)_prepareForTransition:(long long)arg1 toItems:(id)arg2 contentOffset:(struct CGPoint)arg3;	// IMP=0x00000001000c01ac
- (void)_updateItemsInvolvedInDismissAnimation;	// IMP=0x00000001000bfe84
- (void)_resetItem:(id)arg1;	// IMP=0x00000001000bfd10
- (_Bool)_shouldContinueAnimatingItem:(id)arg1;	// IMP=0x00000001000bfcc0
- (void)animationDidStop:(id)arg1 finished:(_Bool)arg2;	// IMP=0x00000001000bfb3c
- (void)_thumbnailView:(id)arg1 willAddCopiedAnimation:(id)arg2;	// IMP=0x00000001000bfae0
- (void)_setPresented:(_Bool)arg1 withStyle:(long long)arg2;	// IMP=0x00000001000bf024
- (void)dismissAnimated:(_Bool)arg1;	// IMP=0x00000001000bf010
- (void)presentAnimated:(_Bool)arg1;	// IMP=0x00000001000beffc
- (void)_setItemsCloseButtonEnabled:(_Bool)arg1;	// IMP=0x00000001000bee8c
- (void)_finishAnimations;	// IMP=0x00000001000bec74
- (void)_activateItemToActivate;	// IMP=0x00000001000bebb4
- (void)_activateItemToActivate:(id)arg1;	// IMP=0x00000001000beb08
- (void)_setItemActivationTimer:(id)arg1;	// IMP=0x00000001000beaa0
- (void)_sendPresentedStateDidChangeToDelegateIfNeeded;	// IMP=0x00000001000be9e0
- (void)_setTopBackdropViewHidden:(_Bool)arg1;	// IMP=0x00000001000be9b8
- (void)_attemptToRelinquishBorrowedContentEarly;	// IMP=0x00000001000be8d0
- (void)_relinquishBorrowedContent;	// IMP=0x00000001000be6b0
- (void)_tabSelectionRecognized:(id)arg1;	// IMP=0x00000001000be2d0
- (void)_tabPreviewGestureRecognized:(id)arg1;	// IMP=0x00000001000be18c
- (void)_stopTabPreviewing;	// IMP=0x00000001000be138
- (void)_stopTabReordering;	// IMP=0x00000001000be0f0
- (void)_tabReorderRecognized:(id)arg1;	// IMP=0x00000001000bded4
- (void)_resetInteractiveReorderOffsetAtLocation:(struct CGPoint)arg1;	// IMP=0x00000001000bde3c
- (void)_updateReorderGesture;	// IMP=0x00000001000bdb70
- (void)interactiveTabCloseEndedWithTranslation:(struct CGPoint)arg1 velocity:(struct CGPoint)arg2 wasCanceled:(_Bool)arg3;	// IMP=0x00000001000bd944
- (void)interactiveTabCloseChangedWithTranslation:(struct CGPoint)arg1;	// IMP=0x00000001000bd834
- (void)interactiveTabCloseBeganWithLocation:(struct CGPoint)arg1;	// IMP=0x00000001000bd6fc
- (void)_tabCloseRecognized:(id)arg1;	// IMP=0x00000001000bd5d8
- (double)_tabCloseAnimationSlideDistance;	// IMP=0x00000001000bd5ac
- (_Bool)gestureRecognizerShouldBegin:(id)arg1;	// IMP=0x00000001000bd4dc
- (_Bool)gestureRecognizer:(id)arg1 shouldReceiveTouch:(id)arg2;	// IMP=0x00000001000bd424
- (_Bool)gestureRecognizer:(id)arg1 shouldRecognizeSimultaneouslyWithGestureRecognizer:(id)arg2;	// IMP=0x00000001000bd20c
- (_Bool)_gestureRecognizer:(id)arg1 shouldInteractWithItem:(id)arg2;	// IMP=0x00000001000bd100
- (void)_tabPressUpdated:(id)arg1;	// IMP=0x00000001000bd024
- (void)_setPressedItem:(id)arg1 animated:(_Bool)arg2;	// IMP=0x00000001000bcf6c
- (id)_tiltedTabItemForLocation:(struct CGPoint)arg1;	// IMP=0x00000001000bccc8
- (id)hitTest:(struct CGPoint)arg1 withEvent:(id)arg2;	// IMP=0x00000001000bc8ec
- (struct CGRect)_hitRectForItem:(id)arg1;	// IMP=0x00000001000bc778
- (double)_topAreaHeightForTabsWithCount:(double)arg1;	// IMP=0x00000001000bc718
- (double)_scrollingEffectFactorForTabsWithCount:(double)arg1;	// IMP=0x00000001000bc6c0
- (struct UIEdgeInsets)_effectiveSafeAreaInsets;	// IMP=0x00000001000bc648
- (struct CGRect)_tabLayoutBounds;	// IMP=0x00000001000bc5cc
- (void)dealloc;	// IMP=0x00000001000bc2d0
- (void)_prepareForPresentingIfNeeded;	// IMP=0x00000001000bc018
- (id)initWithFrame:(struct CGRect)arg1;	// IMP=0x00000001000bb8cc

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(nonatomic) _Bool enablesReturnKeyAutomatically;
@property(readonly) unsigned long long hash;
@property(nonatomic) long long keyboardAppearance;
@property(nonatomic) long long keyboardType;
@property(copy, nonatomic) UITextInputPasswordRules *passwordRules;
@property(readonly, nonatomic) ReorderingAutoscroller *reorderingAutoscroller;
@property(nonatomic) long long returnKeyType;
@property(nonatomic, getter=isSecureTextEntry) _Bool secureTextEntry;
@property(readonly) Class superclass;
@property(readonly, nonatomic) _Bool supportsDropTransitionToItemView;
@property(copy, nonatomic) NSString *textContentType;

@end

