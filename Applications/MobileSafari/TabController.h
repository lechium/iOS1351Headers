//
//     Generated by classdumpios 1.0.1 (64 bit) (iOS port by DreamDevLost)(Debug version compiled Sep 26 2020 13:48:20).
//
//  Copyright (C) 1997-2019 Steve Nygard.
//

#import <objc/NSObject.h>

#import "RecentlyClosedTabViewControllerDelegate-Protocol.h"
#import "TabBarDelegate-Protocol.h"
#import "TabDocumentDragDropDataSource-Protocol.h"
#import "TabOverviewDelegate-Protocol.h"
#import "TabSnapshotCacheDelegate-Protocol.h"
#import "TiltedTabViewDelegate-Protocol.h"
#import "WBSTabOrderProvider-Protocol.h"

@class Application, BrowserController, CloudTabStore, NSArray, NSMapTable, NSMutableArray, NSSet, NSString, NSTimer, NSUUID, RecentlyClosedTabViewController, TabBar, TabDocument, TabOverview, TabSnapshotCache, TiltedTabView, UIBarButtonItem, UIView, WBSTabOrderManager, _SFBrowserSavedState;
@protocol TabCollectionView, TabThumbnailCollectionView, WBSOrderedTab;

@interface TabController : NSObject <RecentlyClosedTabViewControllerDelegate, TabBarDelegate, TabOverviewDelegate, TabSnapshotCacheDelegate, TiltedTabViewDelegate, WBSTabOrderProvider, TabDocumentDragDropDataSource>
{
    BrowserController *_browserController;	// 8 = 0x8
    NSMutableArray *_normalTabDocuments;	// 16 = 0x10
    NSMutableArray *_privateTabDocuments;	// 24 = 0x18
    NSTimer *_saveStateTimer;	// 32 = 0x20
    NSTimer *_stateValidateTimer;	// 40 = 0x28
    TabDocument *_tabDocumentBeingHiddenFromTabView;	// 48 = 0x30
    UIBarButtonItem *_tiltedTabViewAddTabButton;	// 56 = 0x38
    UIBarButtonItem *_tiltedTabViewPrivateBrowsingButton;	// 64 = 0x40
    NSTimer *_updateContinuityTimer;	// 72 = 0x48
    _Bool _tabBarItemsFixed;	// 80 = 0x50
    _Bool _tabViewItemsFixed;	// 81 = 0x51
    RecentlyClosedTabViewController *_recentlyClosedTabController;	// 88 = 0x58
    TabSnapshotCache *_snapshotCache;	// 96 = 0x60
    _Bool _flushPendingSnapshots;	// 104 = 0x68
    CDUnknownBlockType _flushPendingSnapshotsCompletion;	// 112 = 0x70
    _Bool _didRestoreCloudTabsForEducationDevice;	// 120 = 0x78
    _Bool _didReceiveFirstCloudTabDeviceUpdateNotification;	// 121 = 0x79
    TabDocument *_tabDocumentBeingDragged;	// 128 = 0x80
    NSArray *_tabDocumentsToKeepVisible;	// 136 = 0x88
    NSMapTable *_uuidToTabDocumentMap;	// 144 = 0x90
    NSUUID *_blankDocumentGroupIdentifier;	// 152 = 0x98
    NSUUID *_privateBlankDocumentGroupIdentifier;	// 160 = 0xa0
    _Bool _switchingActiveDocument;	// 168 = 0xa8
    _Bool _isClosingDocuments;	// 169 = 0xa9
    NSString *_lastSearchTerm;	// 176 = 0xb0
    NSArray *_searchTermWords;	// 184 = 0xb8
    unsigned long long _veryRecentlyClosedTabCount;	// 192 = 0xc0
    unsigned long long _tabsClosedWhileTabViewPresentedCount;	// 200 = 0xc8
    NSTimer *_veryRecentlyClosedTabCountInvalidationTimer;	// 208 = 0xd0
    _Bool _snapshotsAreEnabled;	// 216 = 0xd8
    _Bool _tabsAreOnLease;	// 217 = 0xd9
    _Bool _shouldTogglePrivateBrowsingOnSplit;	// 218 = 0xda
    _Bool _shouldDeferSnapshotRequest;	// 219 = 0xdb
    TabDocument *_privateActiveTabDocument;	// 224 = 0xe0
    TabDocument *_normalActiveTabDocument;	// 232 = 0xe8
    _SFBrowserSavedState *_savedState;	// 240 = 0xf0
    long long _privateBrowsingMode;	// 248 = 0xf8
    WBSTabOrderManager *_tabOrderManager;	// 256 = 0x100
    TabBar *_tabBar;	// 264 = 0x108
    TiltedTabView *_tiltedTabView;	// 272 = 0x110
    TabOverview *_tabOverview;	// 280 = 0x118
    long long _tabThumbnailCollectionViewStyle;	// 288 = 0x120
    long long _tabDisplayMode;	// 296 = 0x128
}

+ (id)_tabDocumentsHiddenFromTabViews;	// IMP=0x00000001000e3e80
- (void).cxx_destruct;	// IMP=0x00000001000e8cc0
@property(nonatomic) _Bool shouldDeferSnapshotRequest; // @synthesize shouldDeferSnapshotRequest=_shouldDeferSnapshotRequest;
@property(nonatomic) _Bool shouldTogglePrivateBrowsingOnSplit; // @synthesize shouldTogglePrivateBrowsingOnSplit=_shouldTogglePrivateBrowsingOnSplit;
@property(nonatomic) _Bool tabsAreOnLease; // @synthesize tabsAreOnLease=_tabsAreOnLease;
@property(nonatomic) long long tabDisplayMode; // @synthesize tabDisplayMode=_tabDisplayMode;
@property(nonatomic) _Bool snapshotsAreEnabled; // @synthesize snapshotsAreEnabled=_snapshotsAreEnabled;
@property(nonatomic) long long tabThumbnailCollectionViewStyle; // @synthesize tabThumbnailCollectionViewStyle=_tabThumbnailCollectionViewStyle;
@property(readonly, retain, nonatomic) TabOverview *tabOverview; // @synthesize tabOverview=_tabOverview;
@property(readonly, retain, nonatomic) TiltedTabView *tiltedTabView; // @synthesize tiltedTabView=_tiltedTabView;
@property(nonatomic) __weak TabBar *tabBar; // @synthesize tabBar=_tabBar;
@property(readonly, nonatomic) WBSTabOrderManager *tabOrderManager; // @synthesize tabOrderManager=_tabOrderManager;
@property(nonatomic) long long privateBrowsingMode; // @synthesize privateBrowsingMode=_privateBrowsingMode;
@property(retain, nonatomic) _SFBrowserSavedState *savedState; // @synthesize savedState=_savedState;
@property(retain, nonatomic) TabDocument *normalActiveTabDocument; // @synthesize normalActiveTabDocument=_normalActiveTabDocument;
@property(retain, nonatomic) TabDocument *privateActiveTabDocument; // @synthesize privateActiveTabDocument=_privateActiveTabDocument;
@property(readonly, copy, nonatomic) NSArray *privateTabDocuments; // @synthesize privateTabDocuments=_privateTabDocuments;
@property(readonly, copy, nonatomic) NSArray *tabDocuments; // @synthesize tabDocuments=_normalTabDocuments;
- (unsigned long long)indexForTab:(id)arg1;	// IMP=0x00000001000e8adc
@property(readonly, nonatomic) unsigned long long numberOfTabs;
@property(readonly, nonatomic) id <WBSOrderedTab> selectedTabForTabOrderProvider;
- (id)originatingTabForTab:(id)arg1;	// IMP=0x00000001000e8998
- (id)tabAtIndex:(unsigned long long)arg1;	// IMP=0x00000001000e893c
@property(readonly, nonatomic) unsigned long long indexOfSelectedTab;
- (void)didTransitionTabView;	// IMP=0x00000001000e88d4
- (void)willTransitionTabView;	// IMP=0x00000001000e8794
@property(readonly, nonatomic) NSArray *tabDocumentsMatchingSearchTerm;
- (void)_updateUserActivityTimerFired;	// IMP=0x00000001000e8620
- (void)saveTabDocumentUserActivitySoon:(id)arg1;	// IMP=0x00000001000e857c
- (void)_cancelPendingUpdateUserActivityTimer;	// IMP=0x00000001000e8538
- (unsigned long long)_snapshotCacheCapacityWithSnapshotsEnabled:(_Bool)arg1;	// IMP=0x00000001000e83b4
- (unsigned long long)_snapshotCacheCapacity;	// IMP=0x00000001000e83a4
- (unsigned long long)capacityForTabSnapshotCache:(id)arg1;	// IMP=0x00000001000e8398
- (_Bool)tabSnapshotCacheShouldDeferNextSnapshotRequest:(id)arg1;	// IMP=0x00000001000e8390
- (_Bool)tabSnapshotCache:(id)arg1 shouldRequestSavedSnapshotWithIdentifier:(id)arg2;	// IMP=0x00000001000e8150
- (void)tabSnapshotCacheDidFinishUpdating:(id)arg1;	// IMP=0x00000001000e80f4
- (void)_updateTabSnapshotsWithIdentifier:(id)arg1 animated:(_Bool)arg2;	// IMP=0x00000001000e7e7c
- (void)_updateTabSnapshotsAnimated:(_Bool)arg1;	// IMP=0x00000001000e7e68
- (void)tabSnapshotCache:(id)arg1 didEvictSnapshotWithIdentifier:(id)arg2;	// IMP=0x00000001000e7e54
- (void)tabSnapshotCache:(id)arg1 didCacheSnapshotWithIdentifier:(id)arg2;	// IMP=0x00000001000e7dbc
- (void)tabSnapshotCache:(id)arg1 requestSnapshotWithIdentifier:(id)arg2 completion:(CDUnknownBlockType)arg3;	// IMP=0x00000001000e7ccc
- (void)requestSnapshotForTabDocument:(id)arg1 completion:(CDUnknownBlockType)arg2;	// IMP=0x00000001000e7a04
- (id)_cachedContentImageForTabDocument:(id)arg1 allowScaledImage:(_Bool)arg2;	// IMP=0x00000001000e77f0
- (id)cachedContentImageForTabDocument:(id)arg1;	// IMP=0x00000001000e77e0
- (void)flushPendingSnapshotsWithCompletion:(CDUnknownBlockType)arg1;	// IMP=0x00000001000e7614
- (void)_updateSnapshotCacheStateWithCapacity:(unsigned long long)arg1;	// IMP=0x00000001000e7560
- (void)_updateSnapshotCacheState;	// IMP=0x00000001000e7528
- (void)invalidateSnapshotForTabDocument:(id)arg1;	// IMP=0x00000001000e7380
- (void)_updateSnapshotIdentifiers;	// IMP=0x00000001000e6df4
- (void)_updateTabOverviewItems;	// IMP=0x00000001000e6a0c
@property(readonly, nonatomic) _Bool usesTabOverview;
- (void)_setUpTabOverview;	// IMP=0x00000001000e6734
- (_Bool)_tabItem:(id)arg1 matchesSearchText:(id)arg2;	// IMP=0x00000001000e5ff0
- (void)tabOverviewDidChangeAllowsInteractivePresentation:(id)arg1;	// IMP=0x00000001000e5fbc
- (void)_createPlaceholderImageForTabDocument:(id)arg1;	// IMP=0x00000001000e5dc0
- (void)_addNewActiveTabOverviewTab;	// IMP=0x00000001000e5ccc
- (id)itemsToKeepVisibleForTabOverview:(id)arg1;	// IMP=0x00000001000e5ca4
- (id)currentItemForTabOverview:(id)arg1;	// IMP=0x00000001000e5c50
- (void)tabOverviewDidCancelDismissal:(id)arg1;	// IMP=0x00000001000e5c08
- (void)tiltedTabViewDidEndSearching:(id)arg1;	// IMP=0x00000001000e5b1c
- (void)tiltedTabViewWillBeginSearching:(id)arg1;	// IMP=0x00000001000e5a30
- (void)_addNewActiveTiltedTabViewTab;	// IMP=0x00000001000e5a18
- (struct CGSize)suggestedSnapshotSizeForTiltedTabView:(id)arg1;	// IMP=0x00000001000e5980
- (void)tiltedTabView:(id)arg1 animateTopBackdropView:(id)arg2 hidden:(_Bool)arg3;	// IMP=0x00000001000e5924
- (id)expectedSuperviewForTiltedTabView:(id)arg1;	// IMP=0x00000001000e58b4
- (id)itemsToKeepVisibleForTiltedTabView:(id)arg1;	// IMP=0x00000001000e588c
- (id)currentItemForTiltedTabView:(id)arg1;	// IMP=0x00000001000e5838
- (void)_updateCloudTabStorePeriodicUpdates;	// IMP=0x00000001000e57e4
- (void)showTabExposePopoverForTabCollectionView:(id)arg1;	// IMP=0x00000001000e57b0
- (_Bool)tabCollectionView:(id)arg1 cloudTab:(id)arg2 matchesSearchText:(id)arg3;	// IMP=0x00000001000e5754
- (_Bool)tabCollectionView:(id)arg1 item:(id)arg2 matchesSearchText:(id)arg3;	// IMP=0x00000001000e5694
- (void)tabCollectionView:(id)arg1 closeCloudTab:(id)arg2 onDevice:(id)arg3;	// IMP=0x00000001000e55fc
- (void)tabCollectionView:(id)arg1 relinquishBorrowedContentView:(id)arg2 forItem:(id)arg3;	// IMP=0x00000001000e5550
- (id)tabCollectionView:(id)arg1 borrowContentViewForItem:(id)arg2 withTopBackdropView:(id *)arg3 ofHeight:(double)arg4;	// IMP=0x00000001000e5470
- (struct UIEdgeInsets)effectiveSafeAreaInsetsForTabCollectionView:(id)arg1;	// IMP=0x00000001000e53c0
- (double)tabCollectionView:(id)arg1 headerHeightForItem:(id)arg2;	// IMP=0x00000001000e52f4
- (void)tabCollectionViewDidUpdateItemVisibilityOrder:(id)arg1;	// IMP=0x00000001000e52e8
- (id)tabCollectionView:(id)arg1 snapshotForItem:(id)arg2;	// IMP=0x00000001000e5284
- (_Bool)tabCollectionView:(id)arg1 validSnapshotExistsForItem:(id)arg2;	// IMP=0x00000001000e5228
- (void)tabCollectionViewEndIgnoringUserInteraction:(id)arg1 reason:(id)arg2;	// IMP=0x00000001000e51d8
- (void)tabCollectionViewBeginIgnoringUserInteraction:(id)arg1 reason:(id)arg2;	// IMP=0x00000001000e5188
- (void)tabCollectionViewDidDismiss:(id)arg1;	// IMP=0x00000001000e50c8
- (void)tabCollectionViewWillDismiss:(id)arg1;	// IMP=0x00000001000e505c
- (void)tabCollectionViewDidPresent:(id)arg1;	// IMP=0x00000001000e5058
- (_Bool)_shouldSnapshotActiveTab;	// IMP=0x00000001000e5008
- (void)tabCollectionViewWillPresent:(id)arg1;	// IMP=0x00000001000e4ebc
- (void)tabCollectionView:(id)arg1 item:(id)arg2 didProduceNavigationIntent:(id)arg3;	// IMP=0x00000001000e4de4
- (void)tabCollectionView:(id)arg1 didMoveItem:(id)arg2 overItem:(id)arg3;	// IMP=0x00000001000e4c94
- (void)tabCollectionView:(id)arg1 closeItem:(id)arg2;	// IMP=0x00000001000e4ab0
- (_Bool)tabCollectionView:(id)arg1 canCloseItem:(id)arg2;	// IMP=0x00000001000e489c
- (void)tabCollectionView:(id)arg1 didSelectItem:(id)arg2;	// IMP=0x00000001000e4668
@property(readonly, nonatomic) UIView<TabThumbnailCollectionView> *tabThumbnailCollectionView;
- (void)_clearHiddenTabDocumentForTabViewDismissal;	// IMP=0x00000001000e439c
- (void)_dismissTabView;	// IMP=0x00000001000e4358
- (void)didEndTrackingSession:(id)arg1;	// IMP=0x00000001000e4308
- (void)didBeginTrackingSession:(id)arg1;	// IMP=0x00000001000e42b8
- (void)tabDocumentDidUpdateUUID:(id)arg1 previousUUID:(id)arg2;	// IMP=0x00000001000e421c
- (void)willLoseOwnershipOfTabDocument:(id)arg1;	// IMP=0x00000001000e41cc
- (void)didGainOwnershipOfTabDocument:(id)arg1;	// IMP=0x00000001000e415c
- (id)tabDocumentWithUUID:(id)arg1;	// IMP=0x00000001000e414c
- (void)_setTabDocuments:(id)arg1 hidden:(_Bool)arg2;	// IMP=0x00000001000e3f1c
- (void)unhideTabDocuments:(id)arg1;	// IMP=0x00000001000e3f0c
- (void)hideTabDocuments:(id)arg1;	// IMP=0x00000001000e3efc
- (id)replacePlaceholderTabDocument:(id)arg1 withTabDocuments:(id)arg2 transitionToDragStateWithBlock:(CDUnknownBlockType)arg3;	// IMP=0x00000001000e3654
@property(readonly, nonatomic) UIView<TabCollectionView> *tabCollectionView;
- (id)restoreRecentlyClosedTabDocumentWithTabStateData:(id)arg1;	// IMP=0x00000001000e3550
- (void)_doneLongPress:(id)arg1;	// IMP=0x00000001000e351c
- (void)_doneLongPressRecognized:(id)arg1;	// IMP=0x00000001000e34c8
- (void)_addTabLongPress:(id)arg1;	// IMP=0x00000001000e3494
- (void)_addTabLongPressRecognized:(id)arg1;	// IMP=0x00000001000e3440
- (void)updateTiltedTabViewToolbarItems:(_Bool)arg1;	// IMP=0x00000001000e33f4
- (_Bool)_privateBrowsingButtonSelected;	// IMP=0x00000001000e33e4
- (void)_updateTiltedTabViewPrivateBrowsingButtonVisibility;	// IMP=0x00000001000e3270
@property(readonly, nonatomic) NSArray *tiltedTabViewToolbarItems;
- (id)_makeOpenNewTabInteraction;	// IMP=0x00000001000e2d10
- (void)_updateTabViewCloudTabs;	// IMP=0x00000001000e2c38
- (void)updateEducationTabsLastSyncDate;	// IMP=0x00000001000e2b44
- (void)_restoreEducationTabsIfNecessaryAnimated:(_Bool)arg1;	// IMP=0x00000001000e28f4
- (void)restoreEducationDeviceTabs;	// IMP=0x00000001000e28e4
- (void)_cloudTabsDidUpdate:(id)arg1;	// IMP=0x00000001000e2794
- (void)_updateTiltedTabViewItemsWithTransition:(long long)arg1;	// IMP=0x00000001000e2504
- (void)_updateTiltedTabViewItemsAnimated:(_Bool)arg1;	// IMP=0x00000001000e24f8
- (void)_updateTiltedTabViewItems;	// IMP=0x00000001000e24e8
- (void)_setUpTiltedTabView;	// IMP=0x00000001000e2458
@property(readonly, nonatomic) _Bool usesTiltedTabView;
- (void)updateTabViewsAnimatingTabBar:(_Bool)arg1;	// IMP=0x00000001000e2384
- (void)_updateExplanationViewVisibilityAnimated:(_Bool)arg1;	// IMP=0x00000001000e2320
- (_Bool)_shouldShowExplanationView;	// IMP=0x00000001000e2280
- (void)_suppressSingleEmptyTabIfAppropriate;	// IMP=0x00000001000e211c
- (void)_openBlankTabDocumentInTabBarWithOptions:(long long)arg1;	// IMP=0x00000001000e203c
- (void)updateTabBarAnimated:(_Bool)arg1;	// IMP=0x00000001000e202c
- (void)_updateTabBarAnimated:(_Bool)arg1 keepingDocumentVisible:(id)arg2;	// IMP=0x00000001000e1d3c
- (void)recentlyClosedTabViewController:(id)arg1 didSelectTabStateWithData:(id)arg2;	// IMP=0x00000001000e1b20
- (void)_adoptTabsFromTabController:(id)arg1 forPrivateBrowsing:(_Bool)arg2;	// IMP=0x00000001000e18f0
- (void)adoptTabsFromTabController:(id)arg1;	// IMP=0x00000001000e17e0
- (_Bool)_tabsAreAllEmpty:(id)arg1;	// IMP=0x00000001000e1774
- (id)_newPlaceholderTabDocumentForURL:(id)arg1 privateBrowsing:(_Bool)arg2 atIndex:(unsigned long long)arg3;	// IMP=0x00000001000e1614
- (id)insertPlaceholderTabDocumentAfterDocument:(id)arg1;	// IMP=0x00000001000e1580
- (void)tabBar:(id)arg1 toggleMediaCaptureMutedForItem:(id)arg2;	// IMP=0x00000001000e1510
- (_Bool)tabBar:(id)arg1 canMoveItem:(id)arg2;	// IMP=0x00000001000e1508
- (void)_setTabBarItemsFixed:(_Bool)arg1;	// IMP=0x00000001000e1500
- (void)_tabView:(id)arg1 handleNavigationIntent:(id)arg2 usingTabDocument:(id)arg3;	// IMP=0x00000001000e10d0
- (void)_performWithFixedTabViewItems:(CDUnknownBlockType)arg1;	// IMP=0x00000001000e1098
@property(readonly, nonatomic) Application *_application;
- (void)_updateAddTabButtonEnabled;	// IMP=0x00000001000e100c
- (void)setPrivateBrowsingMode:(long long)arg1 animated:(_Bool)arg2;	// IMP=0x00000001000e0d88
@property(nonatomic, getter=isPrivateBrowsingEnabled) _Bool privateBrowsingEnabled;
@property(readonly, nonatomic, getter=isControlledByAutomation) _Bool controlledByAutomation;
- (_Bool)_canCloseLastTab;	// IMP=0x00000001000e0cb0
- (void)clearBrowserController;	// IMP=0x00000001000e0b20
- (void)dealloc;	// IMP=0x00000001000e0a74
- (_Bool)needsCloudTabPeriodicUpdates;	// IMP=0x00000001000e0a24
@property(readonly, nonatomic) CloudTabStore *cloudTabStore;
- (void)_didReceiveMemoryWarning:(id)arg1;	// IMP=0x00000001000e0968
- (id)initWithBrowserController:(id)arg1;	// IMP=0x00000001000e0634
- (void)openInitialBlankTabDocumentAndMakeActive:(_Bool)arg1;	// IMP=0x00000001000e03b0
- (void)openInitialBlankTabDocumentIfNeeded;	// IMP=0x0000000100006dc4
- (void)replaceTabDocument:(id)arg1 withTabDocument:(id)arg2;	// IMP=0x00000001000e01dc
- (id)_tabDocumentForURL:(id)arg1 withUUID:(id)arg2;	// IMP=0x00000001000e0070
- (void)sortTabsWithMode:(long long)arg1;	// IMP=0x00000001000dfda4
- (id)tabDocumentForURL:(id)arg1;	// IMP=0x00000001000df9d8
- (void)moveTabDocument:(id)arg1 overTabDocument:(id)arg2;	// IMP=0x00000001000df8a8
- (void)closeTabDocuments:(id)arg1 animated:(_Bool)arg2;	// IMP=0x00000001000df890
- (void)closeTabDocuments:(id)arg1;	// IMP=0x00000001000df880
- (void)closeAllOpenTabsAnimated:(_Bool)arg1 temporarily:(_Bool)arg2;	// IMP=0x00000001000df7f4
- (void)closeAllOpenTabsAnimated:(_Bool)arg1;	// IMP=0x00000001000df7e4
- (void)closeOtherTabs;	// IMP=0x00000001000df624
- (void)closeTab;	// IMP=0x00000001000df5d4
- (void)_closeTabDocuments:(id)arg1 animated:(_Bool)arg2 temporarily:(_Bool)arg3 allowAddingToRecentlyClosedTabs:(_Bool)arg4 keepWebViewAlive:(_Bool)arg5;	// IMP=0x00000001000de86c
- (void)_closeTabDocument:(id)arg1 animated:(_Bool)arg2 temporarily:(_Bool)arg3 allowAddingToRecentlyClosedTabs:(_Bool)arg4 keepWebViewAlive:(_Bool)arg5;	// IMP=0x00000001000de77c
- (void)_detachTabDocuments:(id)arg1 nextActiveDocument:(id)arg2;	// IMP=0x00000001000de410
- (void)_closeTabDocument:(id)arg1 animated:(_Bool)arg2 allowAddingToRecentlyClosedTabs:(_Bool)arg3;	// IMP=0x00000001000de3f8
- (void)_closeTabDocument:(id)arg1 animated:(_Bool)arg2 temporarily:(_Bool)arg3;	// IMP=0x00000001000de3e4
- (void)detachTabDocument:(id)arg1 animated:(_Bool)arg2;	// IMP=0x00000001000de2f4
- (void)closeTabDocumentWithURL:(id)arg1 UUID:(id)arg2;	// IMP=0x00000001000de270
- (void)closeTabDocument:(id)arg1 animated:(_Bool)arg2;	// IMP=0x00000001000de260
- (_Bool)_shouldFocusPreviousDocumentWhenClosingDocument:(id)arg1;	// IMP=0x00000001000de250
- (void)openNewTabWithOptions:(long long)arg1 completionHandler:(CDUnknownBlockType)arg2;	// IMP=0x00000001000ddefc
- (void)_newTabFromTabViewButton;	// IMP=0x00000001000dde84
- (id)_openBlankTabDocument;	// IMP=0x00000001000dde44
- (id)insertInitialBlankTabDocumentWithPrivateBrowsingIfNeeded:(_Bool)arg1;	// IMP=0x00000001000ddd30
- (id)blankTabDocumentToReuseAllowingReorder:(_Bool)arg1;	// IMP=0x00000001000ddbe4
- (id)blankTabDocumentToReuse;	// IMP=0x00000001000ddbd4
- (void)insertNewBlankTabDocumentAnimated:(_Bool)arg1;	// IMP=0x00000001000ddb88
- (id)_insertNewBlankTabDocumentWithOptions:(long long)arg1 inBackground:(_Bool)arg2 animated:(_Bool)arg3;	// IMP=0x00000001000dd868
- (id)_insertNewBlankTabDocumentWithPrivateBrowsing:(_Bool)arg1 inBackground:(_Bool)arg2 animated:(_Bool)arg3;	// IMP=0x00000001000dd850
- (void)insertNewTabDocumentWithDefaultOrdering:(id)arg1 inBackground:(_Bool)arg2 animated:(_Bool)arg3;	// IMP=0x00000001000dd838
- (void)insertNewTabDocument:(id)arg1 forcingOrderAfterTabDocument:(id)arg2 inBackground:(_Bool)arg3 animated:(_Bool)arg4;	// IMP=0x00000001000dd788
- (_Bool)_usesPrivateBrowsingForNewTabOptions:(long long)arg1;	// IMP=0x00000001000dd758
- (unsigned long long)_indexForInsertionBeforeTabDocument:(id)arg1 withPrivateBrowsingEnabled:(_Bool)arg2;	// IMP=0x00000001000dd6c4
- (unsigned long long)_indexForInsertionAfterTabDocument:(id)arg1 withPrivateBrowsingEnabled:(_Bool)arg2;	// IMP=0x00000001000dd61c
- (void)insertTabDocuments:(id)arg1 beforeTabDocument:(id)arg2 inBackground:(_Bool)arg3 animated:(_Bool)arg4;	// IMP=0x00000001000dd424
- (void)insertTabDocument:(id)arg1 afterTabDocument:(id)arg2 inBackground:(_Bool)arg3 animated:(_Bool)arg4;	// IMP=0x00000001000dd36c
- (void)_insertTabDocument:(id)arg1 atIndex:(unsigned long long)arg2 inBackground:(_Bool)arg3 animated:(_Bool)arg4 updateUI:(_Bool)arg5;	// IMP=0x00000001000dcfd0
- (void)_adoptTabDocument:(id)arg1 atIndex:(unsigned long long)arg2 forPrivateBrowsing:(_Bool)arg3;	// IMP=0x00000001000dceec
- (_Bool)_makeRoomForNewTabDocument:(id)arg1;	// IMP=0x00000001000dcdc4
- (id)_oldestInactiveTabDocumentForPrivateBrowsing:(_Bool)arg1;	// IMP=0x00000001000dcc10
- (_Bool)canAddNewTabForPrivateBrowsing:(_Bool)arg1;	// IMP=0x00000001000dcbbc
@property(readonly, nonatomic) _Bool canAddNewTabForCurrentBrowsingMode;
- (void)_switchActiveTabDocumentFromTabDocument:(id)arg1 toTabDocument:(id)arg2;	// IMP=0x00000001000dc880
- (void)setActiveTabDocument:(id)arg1 animated:(_Bool)arg2 deferActivation:(_Bool)arg3;	// IMP=0x00000001000dc670
- (void)setActiveTabDocument:(id)arg1 animated:(_Bool)arg2;	// IMP=0x00000001000dc660
@property(retain, nonatomic) TabDocument *activeTabDocument;
@property(readonly, nonatomic) _Bool canCloseOtherTabs;
@property(readonly, nonatomic) _Bool canCloseTab;
@property(nonatomic) _Bool tabViewDefersActivation;
@property(readonly, nonatomic) TabDocument *tabDocumentBeingActivated;
@property(readonly, nonatomic) _Bool hasTabsThatShouldBeObscuredForDigitalHealth;
- (void)deactivateAllUsageTrackingInformationIfNecessary;	// IMP=0x00000001000dc0a0
- (void)updateUsageTrackingInformationIfNecessary;	// IMP=0x00000001000dbf44
- (void)_setActiveTabDocument:(id)arg1;	// IMP=0x00000001000dbec8
- (id)_activeTabDocumentForPrivateBrowsing:(_Bool)arg1;	// IMP=0x00000001000dbeb0
- (void)_logActivationForTab:(id)arg1;	// IMP=0x00000001000dbdf4
- (void)logTabActivationInterval:(double)arg1 forActivationType:(long long)arg2;	// IMP=0x00000001000dbb8c
- (void)updateHibernatedTabDocumentsSavingState;	// IMP=0x00000001000dbaf8
- (void)updateTabCount;	// IMP=0x00000001000dbab0
@property(readonly, copy, nonatomic) NSSet *allSnapshotIdentifiers;
@property(readonly, copy, nonatomic) NSArray *allTabDocuments;
- (id)_otherTabDocuments;	// IMP=0x00000001000db898
@property(readonly, copy, nonatomic) NSArray *currentTabDocuments;
@property(readonly, nonatomic) unsigned long long numberOfCurrentNonHiddenTabs;
- (id)_tabDocumentsForPrivateBrowsing:(_Bool)arg1;	// IMP=0x00000001000db79c
- (id)_currentTabs;	// IMP=0x00000001000db790
- (void)_createVeryRecentlyClosedTabCountInvalidationTimer;	// IMP=0x00000001000db720
- (void)_cancelVeryRecentlyClosedTabCountInvalidationTimer;	// IMP=0x00000001000db6d8
- (void)closeTabsAutomaticallyIfNecessary;	// IMP=0x00000001000db3a0
@property(readonly, nonatomic) RecentlyClosedTabViewController *recentlyClosedTabController;
- (void)_restorePersistentDocumentState:(id)arg1 into:(id)arg2 withCurrentActiveDocument:(id)arg3 activeDocumentIsValid:(_Bool)arg4 restoredActiveDocumentIndex:(unsigned long long)arg5;	// IMP=0x00000001000f234c
- (_Bool)_shouldRestoreBlankTab;	// IMP=0x00000001000f2314
- (void)_removeCurrentBackForwardItemFromTabDocument:(id)arg1;	// IMP=0x00000001000f2140
- (_Bool)readState;	// IMP=0x00000001000f1b98
- (void)saveStateInBackground:(_Bool)arg1;	// IMP=0x0000000100005d54
- (id)_persistentStateDictionaryForTabs:(id)arg1;	// IMP=0x00000001000f1b88
- (id)_tabStatesForTabs:(id)arg1 quickUpdate:(_Bool)arg2;	// IMP=0x00000001000f1918
- (void)saveAllTabsStateWithQuickUpdate:(_Bool)arg1;	// IMP=0x00000001000f1828
- (void)saveBrowserWindowStateOnly;	// IMP=0x00000001000f1764
- (unsigned long long)_indexOfActiveTab:(id)arg1 tabDocuments:(id)arg2;	// IMP=0x00000001000f15b4
- (void)_prepareBrowserWindowDataIncludingTabState:(_Bool)arg1 forQuickUpdate:(_Bool)arg2 completion:(CDUnknownBlockType)arg3;	// IMP=0x00000001000f1298
- (void)_persistAllTabStates:(id)arg1 needsValidate:(_Bool)arg2;	// IMP=0x00000001000f0f64
- (void)updateTabStatesAndValidate:(_Bool)arg1 shouldDeleteEmptyWindow:(_Bool)arg2;	// IMP=0x00000001000f0a4c
- (void)saveStateInBackground:(_Bool)arg1 needsValidate:(_Bool)arg2;	// IMP=0x00000001000f09c4
- (void)removeSavedStateForTabDocument:(id)arg1;	// IMP=0x00000001000f0930
- (void)saveStateForTabDocument:(id)arg1 needsValidate:(_Bool)arg2;	// IMP=0x00000001000f087c
- (void)_updateSavedStateValidity:(_Bool)arg1;	// IMP=0x00000001000f075c
- (void)_validateSavedState:(id)arg1;	// IMP=0x00000001000f06b4
- (void)_clearStateValidateTimer;	// IMP=0x00000001000f0664
- (void)_saveStateFromTimer:(id)arg1;	// IMP=0x00000001000f0654
- (void)_setSaveStateTimer:(id)arg1;	// IMP=0x00000001000f05e8
- (void)setStateNeedsSaved;	// IMP=0x00000001000f055c

// Remaining properties
@property(readonly, copy) NSString *debugDescription;
@property(readonly, copy) NSString *description;
@property(readonly) unsigned long long hash;
@property(readonly) Class superclass;

@end

